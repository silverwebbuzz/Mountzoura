import { ModuleWithProviders, Provider } from "@angular/core";
import * as ɵngcc0 from '@angular/core';
import * as ɵngcc1 from './lib/translate.pipe';
import * as ɵngcc2 from './lib/translate.directive';
export * from "./lib/translate.loader";
export * from "./lib/translate.service";
export * from "./lib/missing-translation-handler";
export * from "./lib/translate.parser";
export * from "./lib/translate.compiler";
export * from "./lib/translate.directive";
export * from "./lib/translate.pipe";
export * from "./lib/translate.store";
export interface TranslateModuleConfig {
    loader?: Provider;
    compiler?: Provider;
    parser?: Provider;
    missingTranslationHandler?: Provider;
    isolate?: boolean;
    useDefaultLang?: boolean;
}
export declare class TranslateModule {
    /**
     * Use this method in your root module to provide the TranslateService
     */
    static forRoot(config?: TranslateModuleConfig): ModuleWithProviders<TranslateModule>;
    /**
     * Use this method in your other (non root) modules to import the directive/pipe
     */
    static forChild(config?: TranslateModuleConfig): ModuleWithProviders<TranslateModule>;
    static ɵmod: ɵngcc0.ɵɵNgModuleDefWithMeta<TranslateModule, [typeof ɵngcc1.TranslatePipe, typeof ɵngcc2.TranslateDirective], never, [typeof ɵngcc1.TranslatePipe, typeof ɵngcc2.TranslateDirective]>;
    static ɵinj: ɵngcc0.ɵɵInjectorDef<TranslateModule>;
}

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicHVibGljX2FwaS5kLnRzIiwic291cmNlcyI6WyJwdWJsaWNfYXBpLmQudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7Ozs7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esb0RBQW9ELG9DQUFtQjtBQUN2RTtBQUNBO0FBQ0E7QUFDQSxxREFBcUQsb0NBQW1COzs7QUFDeEUiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBNb2R1bGVXaXRoUHJvdmlkZXJzLCBQcm92aWRlciB9IGZyb20gXCJAYW5ndWxhci9jb3JlXCI7XG5leHBvcnQgKiBmcm9tIFwiLi9saWIvdHJhbnNsYXRlLmxvYWRlclwiO1xuZXhwb3J0ICogZnJvbSBcIi4vbGliL3RyYW5zbGF0ZS5zZXJ2aWNlXCI7XG5leHBvcnQgKiBmcm9tIFwiLi9saWIvbWlzc2luZy10cmFuc2xhdGlvbi1oYW5kbGVyXCI7XG5leHBvcnQgKiBmcm9tIFwiLi9saWIvdHJhbnNsYXRlLnBhcnNlclwiO1xuZXhwb3J0ICogZnJvbSBcIi4vbGliL3RyYW5zbGF0ZS5jb21waWxlclwiO1xuZXhwb3J0ICogZnJvbSBcIi4vbGliL3RyYW5zbGF0ZS5kaXJlY3RpdmVcIjtcbmV4cG9ydCAqIGZyb20gXCIuL2xpYi90cmFuc2xhdGUucGlwZVwiO1xuZXhwb3J0ICogZnJvbSBcIi4vbGliL3RyYW5zbGF0ZS5zdG9yZVwiO1xuZXhwb3J0IGludGVyZmFjZSBUcmFuc2xhdGVNb2R1bGVDb25maWcge1xuICAgIGxvYWRlcj86IFByb3ZpZGVyO1xuICAgIGNvbXBpbGVyPzogUHJvdmlkZXI7XG4gICAgcGFyc2VyPzogUHJvdmlkZXI7XG4gICAgbWlzc2luZ1RyYW5zbGF0aW9uSGFuZGxlcj86IFByb3ZpZGVyO1xuICAgIGlzb2xhdGU/OiBib29sZWFuO1xuICAgIHVzZURlZmF1bHRMYW5nPzogYm9vbGVhbjtcbn1cbmV4cG9ydCBkZWNsYXJlIGNsYXNzIFRyYW5zbGF0ZU1vZHVsZSB7XG4gICAgLyoqXG4gICAgICogVXNlIHRoaXMgbWV0aG9kIGluIHlvdXIgcm9vdCBtb2R1bGUgdG8gcHJvdmlkZSB0aGUgVHJhbnNsYXRlU2VydmljZVxuICAgICAqL1xuICAgIHN0YXRpYyBmb3JSb290KGNvbmZpZz86IFRyYW5zbGF0ZU1vZHVsZUNvbmZpZyk6IE1vZHVsZVdpdGhQcm92aWRlcnM7XG4gICAgLyoqXG4gICAgICogVXNlIHRoaXMgbWV0aG9kIGluIHlvdXIgb3RoZXIgKG5vbiByb290KSBtb2R1bGVzIHRvIGltcG9ydCB0aGUgZGlyZWN0aXZlL3BpcGVcbiAgICAgKi9cbiAgICBzdGF0aWMgZm9yQ2hpbGQoY29uZmlnPzogVHJhbnNsYXRlTW9kdWxlQ29uZmlnKTogTW9kdWxlV2l0aFByb3ZpZGVycztcbn1cbiJdfQ==
import { __awaiter, __decorate, __generator, __param } from "tslib";
import { Component, EventEmitter, forwardRef, Inject, Input, Output } from '@angular/core';
import { AngularFireAuth } from '@angular/fire/auth';
import { FormControl, FormGroup, Validators } from '@angular/forms';
import { EMAIL_REGEX, PHONE_NUMBER_REGEX } from '..';
import { NgxAuthFirebaseUIConfigToken } from '../../tokens';
import { AuthProcessService } from '../../services/auth-process.service';
import { FirestoreSyncService } from '../../services/firestore-sync.service';
import { map, take } from 'rxjs/operators';
var UserComponent = /** @class */ (function () {
    function UserComponent(auth, authProcess, fireStoreService, config) {
        this.auth = auth;
        this.authProcess = authProcess;
        this.fireStoreService = fireStoreService;
        this.config = config;
        this.canLogout = true;
        this.canEditAccount = true;
        this.canDeleteAccount = true;
        // tslint:disable-next-line:no-output-on-prefix
        this.onSignOut = new EventEmitter();
        // tslint:disable-next-line:no-output-on-prefix
        this.onAccountEdited = new EventEmitter();
        // tslint:disable-next-line:no-output-on-prefix
        this.onAccountDeleted = new EventEmitter();
    }
    UserComponent.prototype.changeEditMode = function () {
        var _this = this;
        if (this.editMode) {
            this.reset();
            this.editMode = false;
        }
        else {
            this.initUpdateFormGroup().subscribe(function (updateFormGroup) {
                _this.updateFormGroup = updateFormGroup;
                _this.editMode = true;
            });
        }
    };
    UserComponent.prototype.reset = function () {
        this.updateFormGroup.reset();
        this.updateFormGroup.disable();
        this.updateFormGroup = null;
    };
    UserComponent.prototype.save = function () {
        return __awaiter(this, void 0, void 0, function () {
            var user, snackBarMsg, error_1;
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0:
                        if (!this.updateFormGroup.dirty) return [3 /*break*/, 12];
                        this.editMode = false;
                        user = this.authProcess.user;
                        snackBarMsg = [];
                        _a.label = 1;
                    case 1:
                        _a.trys.push([1, 10, , 11]);
                        if (!this.updateNameFormControl.dirty) return [3 /*break*/, 3];
                        return [4 /*yield*/, user.updateProfile({ displayName: this.updateNameFormControl.value })];
                    case 2:
                        _a.sent();
                        snackBarMsg.push("your name has been updated to " + user.displayName);
                        _a.label = 3;
                    case 3:
                        if (!this.updateEmailFormControl.dirty) return [3 /*break*/, 5];
                        return [4 /*yield*/, user.updateEmail(this.updateEmailFormControl.value)];
                    case 4:
                        _a.sent();
                        snackBarMsg.push("your email has been updated to " + user.email);
                        _a.label = 5;
                    case 5:
                        if (!this.updatePhoneNumberFormControl.dirty) return [3 /*break*/, 7];
                        return [4 /*yield*/, user.updatePhoneNumber(this.updatePhoneNumberFormControl.value)];
                    case 6:
                        _a.sent();
                        console.log('phone number = ', this.updatePhoneNumberFormControl.value);
                        snackBarMsg.push("your phone number has been updated to " + user.phoneNumber);
                        _a.label = 7;
                    case 7:
                        if (!this.config.enableFirestoreSync) return [3 /*break*/, 9];
                        return [4 /*yield*/, this.fireStoreService.updateUserData(this.authProcess.parseUserInfo(user))];
                    case 8:
                        _a.sent();
                        _a.label = 9;
                    case 9: return [3 /*break*/, 11];
                    case 10:
                        error_1 = _a.sent();
                        this.authProcess.showToast(error_1 && error_1.message ? error_1.message : error_1);
                        console.error(error_1);
                        return [3 /*break*/, 11];
                    case 11:
                        if (snackBarMsg.length > 0) {
                            this.authProcess.showToast(snackBarMsg.join('\\n'));
                        }
                        this.updateFormGroup.reset();
                        _a.label = 12;
                    case 12: return [2 /*return*/];
                }
            });
        });
    };
    UserComponent.prototype.signOut = function () {
        var _this = this;
        this.auth.signOut()
            .then(function () { return _this.onSignOut.emit(); })
            .catch(function (e) { return console.error('An error happened while signing out!', e); });
    };
    /**
     * Delete the account of the current firebase ngx-auth-firebaseui-user
     *
     * On Success, emit the <onAccountDeleted> event and toast a msg!#
     * Otherwise, log the and toast and error msg!
     *
     */
    UserComponent.prototype.deleteAccount = function () {
        return __awaiter(this, void 0, void 0, function () {
            var user, error_2;
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0:
                        _a.trys.push([0, 3, , 4]);
                        user = this.authProcess.user;
                        // await this.authProcess.deleteAccount();
                        return [4 /*yield*/, this.authProcess.user.delete()];
                    case 1:
                        // await this.authProcess.deleteAccount();
                        _a.sent();
                        // if (this.config.enableFirestoreSync) {
                        return [4 /*yield*/, this.fireStoreService.deleteUserData(user.uid)];
                    case 2:
                        // if (this.config.enableFirestoreSync) {
                        _a.sent();
                        // }
                        this.onAccountDeleted.emit();
                        this.editMode = false;
                        console.log('Your account has been successfully deleted!');
                        this.authProcess.showToast('Your account has been successfully deleted!');
                        return [3 /*break*/, 4];
                    case 3:
                        error_2 = _a.sent();
                        console.log('Error while delete user account', error_2);
                        this.authProcess.showToast("Error occurred while deleting your account: " + error_2.message);
                        return [3 /*break*/, 4];
                    case 4: return [2 /*return*/];
                }
            });
        });
    };
    UserComponent.prototype.initUpdateFormGroup = function () {
        var _this = this;
        return this.authProcess.user$.pipe(take(1), map(function (currentUser) {
            var updateFormGroup = new FormGroup({
                name: _this.updateNameFormControl = new FormControl({ value: currentUser.displayName, disabled: _this.editMode }, [
                    Validators.required,
                    Validators.minLength(_this.config.nameMinLength),
                    Validators.maxLength(_this.config.nameMaxLength)
                ]),
                email: _this.updateEmailFormControl = new FormControl({ value: currentUser.email, disabled: _this.editMode }, [
                    Validators.required,
                    Validators.pattern(EMAIL_REGEX)
                ]),
                phoneNumber: _this.updatePhoneNumberFormControl = new FormControl({ value: currentUser.phoneNumber, disabled: _this.editMode }, [Validators.pattern(PHONE_NUMBER_REGEX)])
            });
            updateFormGroup.enable();
            return updateFormGroup;
        }));
    };
    UserComponent.ctorParameters = function () { return [
        { type: AngularFireAuth },
        { type: AuthProcessService },
        { type: FirestoreSyncService },
        { type: undefined, decorators: [{ type: Inject, args: [forwardRef(function () { return NgxAuthFirebaseUIConfigToken; }),] }] }
    ]; };
    __decorate([
        Input()
    ], UserComponent.prototype, "editMode", void 0);
    __decorate([
        Input()
    ], UserComponent.prototype, "canLogout", void 0);
    __decorate([
        Input()
    ], UserComponent.prototype, "canEditAccount", void 0);
    __decorate([
        Input()
    ], UserComponent.prototype, "canDeleteAccount", void 0);
    __decorate([
        Input()
    ], UserComponent.prototype, "appearance", void 0);
    __decorate([
        Output()
    ], UserComponent.prototype, "onSignOut", void 0);
    __decorate([
        Output()
    ], UserComponent.prototype, "onAccountEdited", void 0);
    __decorate([
        Output()
    ], UserComponent.prototype, "onAccountDeleted", void 0);
    UserComponent = __decorate([
        Component({
            selector: 'ngx-auth-firebaseui-user',
            template: "<div *ngIf=\"auth.authState| async; then authenticated else none\">\n\n</div>\n\n<ng-template #authenticated>\n  <mat-card *ngIf=\"auth.user | async as user\">\n    <!--<form [formGroup]=\"updateFormGroup\" >-->\n    <!--card header-->\n    <mat-card-header fxLayout=\"column\" fxLayoutAlign=\"center center\">\n\n      <img *ngIf=\"authProcess?.getUserPhotoUrl() | async as photoUrl\" [src]=\"photoUrl\" mat-card-avatar>\n\n      <div *ngIf=\"user.emailVerified; then emailVerified else emailNotVerified\"></div>\n      <ng-template #emailVerified>\n        <mat-icon color=\"primary\"\n                  matTooltip=\"email is verified\"\n                  matTooltipPosition=\"after\">\n          verified_user\n        </mat-icon>\n      </ng-template>\n      <ng-template #emailNotVerified>\n        <mat-icon color=\"warn\"\n                  matTooltip=\"email is not verified\"\n                  matTooltipPosition=\"after\">\n          warning\n        </mat-icon>\n      </ng-template>\n\n    </mat-card-header>\n\n    <!--card content-->\n    <mat-card-content *ngIf=\"editMode; then edit else readonly\">\n    </mat-card-content>\n\n    <ng-template #edit>\n      <form (submit)=\"save()\" [formGroup]=\"updateFormGroup\">\n\n        <mat-card-content fxLayout=\"column\" fxLayoutAlign=\"center center\">\n          <div fxLayoutAlign=\"center\">\n            <button (click)=\"changeEditMode()\" class=\"edit-button\" color=\"warn\"\n                    mat-raised-button>\n              cancel\n            </button>\n          </div>\n\n          <!--name-->\n          <mat-form-field [appearance]=\"appearance\" class=\"full-width\">\n            <mat-label>Name</mat-label>\n            <input [formControl]=\"updateNameFormControl\"\n                   matInput\n                   placeholder=\"Name\">\n            <mat-icon matSuffix>person</mat-icon>\n            <mat-hint align=\"end\" aria-live=\"polite\"> {{ updateNameFormControl.value?.length }}\n              / {{ config.nameMaxLength }} </mat-hint>\n            <mat-error *ngIf=\"updateNameFormControl.hasError('required')\">\n              Name is required\n            </mat-error>\n          </mat-form-field>\n\n          <!--email-->\n          <mat-form-field [appearance]=\"appearance\" class=\"full-width\">\n            <mat-label>E-mail</mat-label>\n            <input [formControl]=\"updateEmailFormControl\"\n                   matInput\n                   placeholder=\"E-mail\">\n            <mat-icon matSuffix>email</mat-icon>\n            <mat-error *ngIf=\"updateEmailFormControl.hasError('required')\">\n              E-mail is required {{updateEmailFormControl.value}}\n            </mat-error>\n            <mat-error *ngIf=\"updateEmailFormControl.hasError('pattern')\">\n              Please enter a valid e-mail address {{updateEmailFormControl.value}}\n            </mat-error>\n          </mat-form-field>\n\n          <!--phone number-->\n          <mat-form-field *ngIf=\"false\" [appearance]=\"appearance\" class=\"full-width\">\n            <mat-label>Phone number</mat-label>\n            <input [formControl]=\"updatePhoneNumberFormControl\"\n                   matInput\n                   placeholder=\"Phone number\"\n                   type=\"tel\">\n            <mat-icon matSuffix>phone</mat-icon>\n            <mat-hint align=\"end\" aria-live=\"polite\">\n              The phone number is international. Therefore, it should start with a + sign or 00,\n              followed by the country code, - and national number e.g: +49-12345678 or 0041-1234567890\n\n              NOTE : the phone number must be a valid phone credential !!\n            </mat-hint>\n            <mat-error *ngIf=\"updatePhoneNumberFormControl.hasError('pattern')\">\n              Please enter a valid phone number\n            </mat-error>\n          </mat-form-field>\n\n        </mat-card-content>\n\n        <mat-card-actions fxLayout=\"column\">\n          <button color=\"primary\"\n                  mat-button\n                  type=\"submit\">\n            Save changes\n          </button>\n        </mat-card-actions>\n      </form>\n    </ng-template>\n\n    <ng-template #readonly>\n      <div fxLayoutAlign=\"center\">\n        <button *ngIf=\"canEditAccount\" (click)=\"changeEditMode()\" class=\"edit-button\" color=\"primary\"\n                mat-raised-button>\n          edit\n        </button>\n      </div>\n\n      <!--name-->\n      <mat-form-field [appearance]=\"appearance\" class=\"full-width\">\n        <mat-label>Name</mat-label>\n        <input [disabled]=\"!editMode\"\n               [value]=\"user.displayName\"\n               matInput\n               placeholder=\"Name\">\n        <mat-icon color=\"primary\" matSuffix>person</mat-icon>\n      </mat-form-field>\n\n      <!--email-->\n      <mat-form-field [appearance]=\"appearance\" class=\"full-width\">\n        <mat-label>E-mail</mat-label>\n        <input [disabled]=\"!editMode\"\n               [value]=\"user.email\" matInput\n               placeholder=\"E-mail\">\n        <mat-icon color=\"primary\" matSuffix>email</mat-icon>\n      </mat-form-field>\n\n      <!--phone number-->\n      <mat-form-field *ngIf=\"false\" [appearance]=\"appearance\" class=\"full-width\">\n        <mat-label>Phone number</mat-label>\n        <input [disabled]=\"!editMode\"\n               [value]=\"user.phoneNumber\"\n               matInput\n               placeholder=\"Phone number\">\n        <mat-icon color=\"primary\" matSuffix>phone</mat-icon>\n      </mat-form-field>\n\n      <mat-card-actions fxLayout=\"column\">\n        <button (click)=\"signOut()\" *ngIf=\"canLogout\" color=\"primary\" mat-button>Sign out</button>\n        <button (click)=\"deleteAccount()\" *ngIf=\"canDeleteAccount\" color=\"warn\" mat-button>Delete account</button>\n      </mat-card-actions>\n\n    </ng-template>\n\n  </mat-card>\n\n</ng-template>\n\n\n<ng-template #none>\n  <mat-card class=\"none-card\" fxLayout=\"row\" fxLayoutAlign=\"center center\">\n    <mat-card-content fxLayout=\"row\" fxLayoutAlign=\"center center\">\n      <mat-icon color=\"accent\">warning</mat-icon>\n      <span>You are not logged in!</span>\n    </mat-card-content>\n  </mat-card>\n</ng-template>\n",
            styles: [".edit-button{margin:1rem}.full-width{width:100%}.cut-text{text-overflow:ellipsis;overflow:hidden;white-space:nowrap}.none-card{min-height:430px}.none-card span{font-size:24px;text-align:center;color:rgba(0,0,0,.54)}"]
        }),
        __param(3, Inject(forwardRef(function () { return NgxAuthFirebaseUIConfigToken; })))
    ], UserComponent);
    return UserComponent;
}());
export { UserComponent };
//# sourceMappingURL=data:application/json;base64,
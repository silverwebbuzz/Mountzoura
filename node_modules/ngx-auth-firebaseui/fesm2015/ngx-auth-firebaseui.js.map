{"version":3,"file":"ngx-auth-firebaseui.js","sources":["ng://ngx-auth-firebaseui/lib/enums/accounts.enum.ts","ng://ngx-auth-firebaseui/lib/services/firestore-sync.service.ts","ng://ngx-auth-firebaseui/lib/tokens/index.ts","ng://ngx-auth-firebaseui/lib/services/auth-process.service.ts","ng://ngx-auth-firebaseui/lib/components/email-confirmation/email-confirmation.component.ts","ng://ngx-auth-firebaseui/lib/components/legality-dialog/legality-dialog.component.ts","ng://ngx-auth-firebaseui/lib/animations/index.ts","ng://ngx-auth-firebaseui/lib/components/ngx-auth-firebaseui/auth.component.ts","ng://ngx-auth-firebaseui/lib/components/ngx-auth-firebaseui-avatar/ngx-auth-firebaseui-avatar.component.ts","ng://ngx-auth-firebaseui/lib/components/ngx-auth-firebaseui-login/ngx-auth-firebaseui-login.component.ts","ng://ngx-auth-firebaseui/lib/components/ngx-auth-firebaseui-register/ngx-auth-firebaseui-register.component.ts","ng://ngx-auth-firebaseui/lib/components/ngx-auth-firebaseui-user/user.component.ts","ng://ngx-auth-firebaseui/lib/components/providers/auth.providers.component.ts","ng://ngx-auth-firebaseui/lib/interfaces/config.interface.ts","ng://ngx-auth-firebaseui/lib/guards/logged-in.guard.ts","ng://ngx-auth-firebaseui/lib/ngx-auth-firebaseui.module.ts","ng://ngx-auth-firebaseui/public-api.ts","ng://ngx-auth-firebaseui/ngx-auth-firebaseui.ts"],"sourcesContent":["export enum Accounts {\n  NONE = 'account',\n  CHECK = 'account-check',\n  EDIT = 'account-edit',\n  OFF = 'account-off',\n  REMOVE = 'account-remove',\n}\n","import {Injectable} from '@angular/core';\nimport {AngularFirestore, AngularFirestoreDocument} from '@angular/fire/firestore';\nimport {UserInfo} from 'firebase';\n\nexport const collections = {\n  users: 'users',\n};\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class FirestoreSyncService {\n\n  constructor(public afs: AngularFirestore) {\n    // this.afs.firestore.settings({timestampsInSnapshots: true});\n  }\n\n  // get timestamp() {\n  //     return firebase.firestore.FieldValue.serverTimestamp();\n  // }\n\n  public getUserDocRefByUID(uid: string): AngularFirestoreDocument<UserInfo> {\n    return this.afs.doc(`${collections.users}/${uid}`);\n  }\n\n  public deleteUserData(uid: string): Promise<any> {\n    const userRef: AngularFirestoreDocument<UserInfo> = this.getUserDocRefByUID(uid);\n    return userRef.delete();\n  }\n\n\n  public updateUserData(user: UserInfo): Promise<any> {\n    // Sets user$ data to firestore on login\n    const userRef: AngularFirestoreDocument<UserInfo> = this.getUserDocRefByUID(user.uid);\n    const data: UserInfo = {\n      uid: user.uid,\n      email: user.email,\n      displayName: user.displayName,\n      photoURL: user.photoURL,\n      phoneNumber: user.phoneNumber,\n      providerId: user.providerId\n    };\n    return userRef.set(data, {merge: true});\n  }\n}\n","// This token is the official token containing the final configuration; ie. the merge between default and user provided configurations\nimport {InjectionToken} from '@angular/core';\nimport {NgxAuthFirebaseUIConfig} from '../interfaces';\n\nexport const NgxAuthFirebaseUIConfigToken = new InjectionToken<NgxAuthFirebaseUIConfig>('NgxAuthFirebaseUIConfigToken');\n// This is an intermediate token containing only user-provided configuration\nexport const UserProvidedConfigToken = new InjectionToken<NgxAuthFirebaseUIConfig>('UserProvidedConfigToken');\n","import { EventEmitter, forwardRef, Inject, Injectable } from '@angular/core';\nimport { AngularFireAuth } from '@angular/fire/auth';\nimport { firebase } from '@firebase/app';\nimport '@firebase/auth';\nimport { User, UserInfo } from 'firebase/app';\nimport { BehaviorSubject, Observable } from 'rxjs';\nimport { map, take } from 'rxjs/operators';\nimport { Accounts } from '../enums';\nimport { FirestoreSyncService } from './firestore-sync.service';\nimport { MAT_SNACK_BAR_DEFAULT_OPTIONS, MatSnackBar, MatSnackBarConfig } from '@angular/material/snack-bar';\nimport { ICredentials, ISignInProcess, ISignUpProcess, NgxAuthFirebaseUIConfig } from '../interfaces';\nimport { NgxAuthFirebaseUIConfigToken } from '../tokens';\nimport UserCredential = firebase.auth.UserCredential;\n\nexport const facebookAuthProvider = new firebase.auth.FacebookAuthProvider();\nexport const googleAuthProvider = new firebase.auth.GoogleAuthProvider();\nexport const appleAuthProvider = new firebase.auth.OAuthProvider('apple.com');\nexport const twitterAuthProvider = new firebase.auth.TwitterAuthProvider();\nexport const githubAuthProvider = new firebase.auth.GithubAuthProvider();\nexport const microsoftAuthProvider = new firebase.auth.OAuthProvider('microsoft.com');\nexport const yahooAuthProvider = new firebase.auth.OAuthProvider('yahoo.com');\n\nexport enum AuthProvider {\n  ALL = 'all',\n  ANONYMOUS = 'anonymous',\n  EmailAndPassword = 'firebase',\n  Google = 'google',\n  Apple = 'apple',\n  Facebook = 'facebook',\n  Twitter = 'twitter',\n  Github = 'github',\n  Microsoft = 'microsoft',\n  Yahoo = 'yahoo',\n  PhoneNumber = 'phoneNumber'\n}\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthProcessService implements ISignInProcess, ISignUpProcess {\n  onSuccessEmitter: EventEmitter<any> = new EventEmitter<any>();\n  onErrorEmitter: EventEmitter<any> = new EventEmitter<any>();\n\n  // Useful to know about auth state even between reloads.\n  // Replace emailConfirmationSent and emailToConfirm.\n  private _user$ = new BehaviorSubject<firebase.User | null>(null);\n  get user$(): Observable<firebase.User | null> {\n    return this._user$.asObservable();\n  }\n\n  /**\n   * @deprecated access via user$ asynchronously instead\n   */\n  user: User;\n\n  messageOnAuthSuccess: string;\n  messageOnAuthError: string;\n\n  // Legacy field that is set to true after sign up.\n  // Value is lost in case of reload. The idea here is to know if we just sent a verification email.\n  emailConfirmationSent: boolean;\n  // Legacy filed that contain the mail to confirm. Same lifecycle than emailConfirmationSent.\n  emailToConfirm: string;\n\n  constructor(\n    public afa: AngularFireAuth,\n    @Inject(forwardRef(() => NgxAuthFirebaseUIConfigToken)) public config: NgxAuthFirebaseUIConfig,\n    private snackBar: MatSnackBar,\n    private fireStoreService: FirestoreSyncService,\n    @Inject(MAT_SNACK_BAR_DEFAULT_OPTIONS) private matSnackBarConfig: MatSnackBarConfig\n  ) {\n  }\n\n  listenToUserEvents() {\n    this.afa.user.subscribe((user: firebase.User | null) => {\n      this._user$.next(user);\n      this.user = user;\n    });\n  }\n\n  /**\n   * Reset the password of the ngx-auth-firebaseui-user via email\n   *\n   * @param email - the email to reset\n   */\n  public async resetPassword(email: string): Promise<void> {\n    try {\n      console.log('Password reset email sent');\n      return await this.afa.sendPasswordResetEmail(email);\n    } catch (error) {\n      return this.notifyError(error);\n    }\n  }\n\n  /**\n   * General sign in mechanism to authenticate the users with a firebase project\n   * using a traditional way, via username and password or by using an authentication provider\n   * like google, facebook, twitter and github\n   *\n   * @param provider - the provider to authenticate with (google, facebook, twitter, github)\n   * @param credentials optional email and password\n   */\n  public async signInWith(provider: AuthProvider, credentials?: ICredentials) {\n    try {\n      let signInResult: UserCredential | any;\n\n      switch (provider) {\n        case AuthProvider.ANONYMOUS:\n          signInResult = await this.afa.signInAnonymously() as UserCredential;\n          break;\n\n        case AuthProvider.EmailAndPassword:\n          signInResult = await this.afa.signInWithEmailAndPassword(credentials.email, credentials.password) as UserCredential;\n          break;\n\n        case AuthProvider.Google:\n          signInResult = await this.afa.signInWithPopup(googleAuthProvider) as UserCredential;\n          break;\n\n        case AuthProvider.Apple:\n          signInResult = await this.afa.signInWithPopup(appleAuthProvider) as UserCredential;\n          break;\n\n        case AuthProvider.Facebook:\n          signInResult = await this.afa.signInWithPopup(facebookAuthProvider) as UserCredential;\n          break;\n\n        case AuthProvider.Twitter:\n          signInResult = await this.afa.signInWithPopup(twitterAuthProvider) as UserCredential;\n          break;\n\n        case AuthProvider.Github:\n          signInResult = await this.afa.signInWithPopup(githubAuthProvider) as UserCredential;\n          break;\n\n        case AuthProvider.Microsoft:\n          signInResult = await this.afa.signInWithPopup(microsoftAuthProvider) as UserCredential;\n          break;\n\n        case AuthProvider.Yahoo:\n          signInResult = await this.afa.signInWithPopup(yahooAuthProvider) as UserCredential;\n          break;\n\n        case AuthProvider.PhoneNumber:\n          // coming soon - see feature/sms branch\n          break;\n\n        default:\n          throw new Error(`${AuthProvider[provider]} is not available as auth provider`);\n      }\n      await this.handleSuccess(signInResult);\n    } catch (err) {\n      this.handleError(err);\n    }\n  }\n\n  /**\n   * Sign up new users via email and password.\n   * After that the ngx-auth-firebaseui-user should verify and confirm an email sent via the firebase\n   *\n   * @param displayName - the displayName if the new ngx-auth-firebaseui-user\n   * @param credentials email and password\n   * @returns -\n   */\n  public async signUp(displayName: string, credentials: ICredentials) {\n    try {\n      const userCredential: UserCredential = await this.afa.createUserWithEmailAndPassword(credentials.email, credentials.password);\n      const user = userCredential.user;\n      await this.updateProfile(displayName, user.photoURL);\n\n      if (this.config.enableFirestoreSync) {\n        await this.fireStoreService\n          .getUserDocRefByUID(user.uid)\n          .set({\n            uid: user.uid,\n            displayName,\n            email: user.email,\n            photoURL: user.photoURL\n          } as User);\n      }\n\n      if (this.config.enableEmailVerification) {\n        await user.sendEmailVerification();\n      }\n\n      // Legacy fields\n      this.emailConfirmationSent = true;\n      this.emailToConfirm = credentials.email;\n\n      await this.handleSuccess(userCredential);\n    } catch (err) {\n      this.handleError(err);\n    }\n  }\n\n  async sendNewVerificationEmail(): Promise<void | never> {\n    if (!this.user) {\n      return Promise.reject(new Error('No signed in user'));\n    }\n    return this.user.sendEmailVerification();\n  }\n\n  async signOut() {\n    try {\n      await this.afa.signOut();\n    } catch (error) {\n      this.notifyError(error);\n    }\n  }\n\n  /**\n   * Update the profile (name + photo url) of the authenticated ngx-auth-firebaseui-user in the\n   * firebase authentication feature (not in firestore)\n   *\n   * @param name - the new name of the authenticated ngx-auth-firebaseui-user\n   * @param photoURL - the new photo url of the authenticated ngx-auth-firebaseui-user\n   * @returns -\n   */\n  public updateProfile(name: string, photoURL: string): Promise<void> {\n    return this.afa.currentUser.then((user: User) => {\n      if (!photoURL) {\n        return user.updateProfile({displayName: name});\n      } else {\n        return user.updateProfile({displayName: name, photoURL});\n      }\n    });\n  }\n\n  public parseUserInfo(user: User): UserInfo {\n    return {\n      uid: user.uid,\n      displayName: user.displayName,\n      email: user.email,\n      phoneNumber: user.phoneNumber,\n      photoURL: user.photoURL,\n      providerId: user.providerData.length > 0 ? user.providerData[0].providerId : null\n    };\n  }\n\n  public getUserPhotoUrl(): Observable<string | null> {\n    return this._user$.pipe(\n      map((user: firebase.User | null) => {\n        if (!user) {\n          return null;\n        } else if (user.photoURL) {\n          return user.photoURL;\n        } else if (user.emailVerified) {\n          return this.getPhotoPath(Accounts.CHECK);\n        } else if (user.isAnonymous) {\n          return this.getPhotoPath(Accounts.OFF);\n        } else {\n          return this.getPhotoPath(Accounts.NONE);\n        }\n      })\n    );\n  }\n\n  public getPhotoPath(image: string): string {\n    return `assets/user/${image}.svg`;\n  }\n\n  public signInWithPhoneNumber() {\n    // todo: 3.1.18\n  }\n\n  async handleSuccess(userCredential: UserCredential) {\n    this.onSuccessEmitter.next(userCredential.user);\n    if (this.config.enableFirestoreSync) {\n      try {\n        await this.fireStoreService.updateUserData(this.parseUserInfo(userCredential.user));\n      } catch (e) {\n        console.error(`Error occurred while updating user data with firestore: ${e}`);\n      }\n    }\n    if (this.config.toastMessageOnAuthSuccess) {\n      const fallbackMessage = `Hello ${userCredential.user.displayName ? userCredential.user.displayName : ''}!`;\n      this.showToast(this.messageOnAuthSuccess || fallbackMessage);\n    }\n  }\n\n  handleError(error: any) {\n    this.notifyError(error);\n    console.error(error);\n  }\n\n  // Refresh user info. Can be useful for instance to get latest status regarding email verification.\n  reloadUserInfo() {\n    return this._user$.pipe(take(1)).subscribe((user: User | null) => user && user.reload());\n  }\n\n  // Search for an error message.\n  // Consumers of this library are given the possibility to provide a\n  // function in case they want to instrument message based on error properties.\n  getMessageOnAuthError(error: any) {\n    // tslint:disable-next-line:no-bitwise\n    return error.toString() || 'Sorry, something went wrong. Please retry later.';\n  }\n\n  // Show a toast using current snackbar config. If message is empty, no toast is displayed allowing to opt-out when needed.\n  // Default MatSnackBarConfig has no duration, meaning it stays visible forever.\n  // If that's the case, an action button is added to allow the end-user to dismiss the toast.\n  showToast(message: string) {\n    if (message) {\n      this.snackBar.open(message, this.matSnackBarConfig.duration ? null : 'OK');\n    }\n  }\n\n  showErrorToast(error: any) {\n    if (this.config.toastMessageOnAuthError) {\n      this.showToast(this.getMessageOnAuthError(error));\n    }\n  }\n\n  notifyError(error: any) {\n    this.onErrorEmitter.emit(error);\n    this.showErrorToast(error);\n  }\n\n}\n","import {\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n  Component,\n  EventEmitter,\n  Input,\n  OnChanges,\n  OnInit,\n  Output,\n  SimpleChanges,\n  TemplateRef,\n  ViewChild\n} from '@angular/core';\nimport {Router} from '@angular/router';\nimport {AuthProcessService} from '../../services/auth-process.service';\n\ninterface VerifyEmailContext {\n  email: string;\n  goBackURL: string;\n  verifyEmailTitleText: string;\n  verifyEmailConfirmationText: string;\n  verifyEmailGoBackText: string;\n  messageOnEmailConfirmationSuccess: string;\n  messageOnError: string;\n}\n\nconst defaultTranslations = {\n  verifyEmailTitleText: 'Confirm your e-mail address!',\n  verifyEmailConfirmationText: 'A confirmation e-mail has been sent.' +\n    ' Check your inbox and click on the link \"Confirm my e-mail\" to confirm your e-mail address.',\n  verifyEmailGoBackText: 'Go back',\n  sendNewVerificationEmailText: 'Send new confirmation e-mail',\n  signOutText: 'Sign out',\n  messageOnEmailConfirmationSuccess: 'A new confirmation e-mail has been sent. Please check your inbox.',\n};\n\n@Component({\n  selector: 'ngx-auth-firebaseui-email-confirmation',\n  templateUrl: './email-confirmation.component.html',\n  styleUrls: ['./email-confirmation.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class EmailConfirmationComponent implements OnInit, OnChanges {\n\n  @Input() email: string;\n  @Input() goBackURL: string;\n  // i18n translations to use in default template\n  @Input() verifyEmailTitleText: string;\n  @Input() verifyEmailConfirmationText: string;\n  @Input() verifyEmailGoBackText: string;\n  @Input() sendNewVerificationEmailText: string;\n  @Input() signOutText: string;\n  @Input() messageOnEmailConfirmationSuccess: string;\n\n  // Template to use in place of default template\n  @Input() template: TemplateRef<any>;\n\n  @Output() signOut = new EventEmitter();\n\n  // Final template\n  verifyEmailTemplate: TemplateRef<any>;\n  // Context hash to use for verifyEmailTemplate.\n  verifyEmailContext: VerifyEmailContext;\n\n  isLoading: boolean;\n\n  @ViewChild('defaultVerifyEmail', {static: true}) defaultTemplate: TemplateRef<any>;\n\n  constructor(public authProcess: AuthProcessService, private router: Router, private changeDetectorRef: ChangeDetectorRef) {\n  }\n\n  ngOnChanges(changes: SimpleChanges): void {\n    if (changes.verifyEmailTemplate && changes.verifyEmailTemplate.currentValue == null) {\n      this.verifyEmailTemplate = this.defaultTemplate;\n      console.log('ngOnChanges - defaultTemplate:', this.verifyEmailTemplate);\n    }\n    this.verifyEmailContext = this.createTemplateContext();\n  }\n\n  ngOnInit(): void {\n    if (!this.verifyEmailTemplate) {\n      console.log('ngOnInit - defaultTemplate');\n      this.verifyEmailTemplate = this.defaultTemplate;\n    }\n    this.verifyEmailContext = this.createTemplateContext();\n    console.log('verifyEmailTemplate:', this.verifyEmailTemplate);\n    console.log('verifyEmailContext:', this.verifyEmailContext);\n  }\n\n  async continue() {\n    try {\n      await this.authProcess.reloadUserInfo();\n      await this.router.navigate([this.goBackURL]);\n    } catch (error) {\n      this.authProcess.notifyError(error);\n    }\n  }\n\n  async sendNewVerificationEmail() {\n    try {\n      this.isLoading = true;\n      this.changeDetectorRef.markForCheck();\n      await this.authProcess.sendNewVerificationEmail();\n      this.authProcess.showToast(this.verifyEmailContext.messageOnEmailConfirmationSuccess);\n    } catch (error) {\n      this.authProcess.notifyError(error);\n    } finally {\n      this.isLoading = false;\n      this.changeDetectorRef.markForCheck();\n    }\n  }\n\n  private createTemplateContext(): any {\n    return {\n      email: this.email,\n      goBackURL: this.goBackURL,\n      verifyEmailTitleText: this.verifyEmailTitleText || defaultTranslations.verifyEmailTitleText,\n      verifyEmailConfirmationText: this.verifyEmailConfirmationText || defaultTranslations.verifyEmailConfirmationText,\n      verifyEmailGoBackText: this.verifyEmailGoBackText || defaultTranslations.verifyEmailGoBackText,\n      sendNewVerificationEmailText: this.sendNewVerificationEmailText || defaultTranslations.sendNewVerificationEmailText,\n      signOutText: this.signOutText || defaultTranslations.signOutText,\n      messageOnEmailConfirmationSuccess: this.messageOnEmailConfirmationSuccess || defaultTranslations.messageOnEmailConfirmationSuccess\n    };\n  }\n}\n","import {Component, Inject} from '@angular/core';\nimport {MAT_DIALOG_DATA, MatDialogRef} from '@angular/material/dialog';\nimport {LegalityDialogParams, LegalityDialogResult} from '../../interfaces';\n\n@Component({\n  selector: 'ngx-auth-firebaseui-legality-dialog',\n  templateUrl: './legality-dialog.component.html',\n  styleUrls: ['./legality-dialog.component.scss']\n})\nexport class LegalityDialogComponent {\n\n  checkTOS: boolean;\n  checkPrivacyPolicy: boolean;\n\n  constructor(public dialogRef: MatDialogRef<LegalityDialogComponent>,\n              @Inject(MAT_DIALOG_DATA) public data: LegalityDialogParams) {\n  }\n\n  // tslint:disable-next-line:variable-name\n  private _disableConfirmActionButton = false;\n\n  get disableConfirmActionButton(): boolean {\n    if (this.data.tosUrl && this.data.privacyPolicyUrl) {\n      this._disableConfirmActionButton = !(this.checkTOS && this.checkPrivacyPolicy);\n    } else if (this.data.tosUrl && !this.data.privacyPolicyUrl) {\n      this._disableConfirmActionButton = !this.checkTOS;\n    } else if (!this.data.tosUrl && this.data.privacyPolicyUrl) {\n      this._disableConfirmActionButton = !this.checkPrivacyPolicy;\n    }\n    return this._disableConfirmActionButton;\n  }\n\n  closeDialog() {\n    const result: LegalityDialogResult = {\n      checked: !this.disableConfirmActionButton,\n      authProvider: this.data.authProvider\n    };\n    this.dialogRef.close(result);\n  }\n\n}\n","import {animate, animateChild, animation, query, stagger, state, style, transition, trigger, useAnimation} from '@angular/animations';\n\nconst customAnimation = animation(\n  [\n    style({\n      opacity: '{{opacity}}',\n      transform: 'scale({{scale}}) translate3d({{x}}, {{y}}, {{z}})'\n    }),\n    animate('{{duration}} {{delay}} cubic-bezier(0.0, 0.0, 0.2, 1)', style('*'))\n  ],\n  {\n    params: {\n      duration: '200ms',\n      delay: '0ms',\n      opacity: '0',\n      scale: '1',\n      x: '0',\n      y: '0',\n      z: '0'\n    }\n  }\n);\n\nexport const NgxAuthFirebaseuiAnimations = [\n  trigger('animate', [transition('void => *', [useAnimation(customAnimation)])]),\n\n  trigger('animateStagger', [\n    state('50', style('*')),\n    state('100', style('*')),\n    state('200', style('*')),\n\n    transition('void => 50', query('@*', [stagger('50ms', [animateChild()])], {optional: true})),\n    transition('void => 100', query('@*', [stagger('100ms', [animateChild()])], {optional: true})),\n    transition('void => 200', query('@*', [stagger('200ms', [animateChild()])], {optional: true}))\n  ]),\n];\n","import {isPlatformBrowser} from '@angular/common';\nimport {\n  AfterViewInit,\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n  Component,\n  EventEmitter,\n  forwardRef,\n  Inject,\n  Input,\n  OnChanges,\n  OnDestroy,\n  OnInit,\n  Output,\n  PLATFORM_ID,\n  SimpleChanges,\n  TemplateRef,\n  ViewChild\n} from '@angular/core';\nimport {ActivatedRoute} from '@angular/router';\nimport {AbstractControl, FormControl, FormGroup, Validators} from '@angular/forms';\n\n// ANGULAR MATERIAL\nimport {MatTabChangeEvent, MatTabGroup} from '@angular/material/tabs';\nimport {ThemePalette} from '@angular/material/core';\nimport {MatDialog, MatDialogRef} from '@angular/material/dialog';\nimport {MatFormFieldAppearance} from '@angular/material/form-field';\n\n// ANGULAR FIRE\nimport {AngularFireAuth} from '@angular/fire/auth';\n\n// Third PARTY\nimport {MatPasswordStrengthComponent} from '@angular-material-extensions/password-strength';\n\n// RXJS\nimport {Subscription} from 'rxjs';\n\nimport {LegalityDialogComponent, Theme} from '..';\nimport {LegalityDialogParams, LegalityDialogResult, NgxAuthFirebaseUIConfig} from '../../interfaces';\nimport { AuthProcessService, AuthProvider} from '../../services/auth-process.service';\nimport {NgxAuthFirebaseuiAnimations} from '../../animations';\nimport {NgxAuthFirebaseUIConfigToken} from '../../tokens';\n\n\nexport const EMAIL_REGEX = new RegExp(['^(([^<>()[\\\\]\\\\\\.,;:\\\\s@\\\"]+(\\\\.[^<>()\\\\[\\\\]\\\\\\.,;:\\\\s@\\\"]+)*)',\n  '|(\".+\"))@((\\\\[[0-9]{1,3}\\\\.[0-9]{1,3}\\\\.[0-9]{1,3}\\\\.',\n  '[0-9]{1,3}\\])|(([a-zA-Z\\\\-0-9]+\\\\.)+',\n  '[a-zA-Z]{2,}))$'].join(''));\n\n// tslint:disable-next-line:max-line-length\nexport const PHONE_NUMBER_REGEX = new RegExp(['^[+]{0,1}[(]{0,1}[0-9]{1,4}[)]{0,1}[-\\\\s\\\\.]{0,1}[(]{0,1}[0-9]{1,4}[)]{0,1}[-\\\\s\\\\./0-9]{4,12}$'].join(''));\n\n@Component({\n  selector: 'ngx-auth-firebaseui',\n  templateUrl: 'auth.component.html',\n  styleUrls: ['auth.component.scss'],\n  animations: NgxAuthFirebaseuiAnimations,\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class AuthComponent implements OnInit, AfterViewInit, OnChanges, OnDestroy {\n\n  @ViewChild(MatTabGroup, {static: false}) matTabGroup: MatTabGroup;\n  @ViewChild(MatPasswordStrengthComponent, {static: false}) passwordStrength: MatPasswordStrengthComponent;\n\n  isLoading: boolean;\n  //  google, facebook, twitter, github as array or all as one single string\n  @Input() providers: AuthProvider[] | AuthProvider = AuthProvider.ALL;\n  @Input() providersTheme: Theme; // Classic, Stroked, etc.\n\n  @Input() appearance: MatFormFieldAppearance;\n  @Input() tabIndex: number | null;\n  @Input() registrationEnabled = true;\n  @Input() resetPasswordEnabled = true;\n  @Input() guestEnabled = true;\n  @Input() tosUrl: string;\n  @Input() privacyPolicyUrl: string;\n  @Input() goBackURL: string;\n  @Input() messageOnAuthSuccess: string;\n  @Input() messageOnAuthError: string;\n  @Input() messageOnEmailConfirmationSuccess: string;\n\n  // Events\n  // tslint:disable-next-line:no-output-on-prefix\n  @Output() onSuccess: any;\n  // tslint:disable-next-line:no-output-on-prefix\n  @Output() onError: any;\n  @Output() selectedTabChange: EventEmitter<MatTabChangeEvent> = new EventEmitter();\n\n  // Password strength api\n  @Input() enableLengthRule = true;\n  @Input() enableLowerCaseLetterRule = true;\n  @Input() enableUpperCaseLetterRule = true;\n  @Input() enableDigitRule = true;\n  @Input() enableSpecialCharRule = true;\n  @Input() min: number;\n  @Input() max: number;\n  @Input() customValidator: RegExp;\n  // tslint:disable-next-line:no-output-on-prefix\n  @Output() onStrengthChanged: EventEmitter<number> = new EventEmitter();\n\n  // Verify email template to use in place of default template.\n  // See email-confirmation component\n  @Input() verifyEmailTemplate: TemplateRef<any>;\n\n  // i18n translations to use in default template for email verification.\n  // See email-confirmation component\n  @Input() verifyEmailTitleText: string;\n  @Input() verifyEmailConfirmationText: string;\n  @Input() verifyEmailGoBackText: string;\n  @Input() sendNewVerificationEmailText: string;\n  @Input() signOutText = 'Sign out';\n\n  // Customize the text\n  // Reset Password Tab\n  @Input() resetPasswordTabText = 'Reset e-mail address to password';\n  @Input() resetPasswordInputText = 'Reset e-mail address to password';\n  @Input() resetPasswordErrorRequiredText = 'E-mail is required to reset the password!';\n  @Input() resetPasswordErrorPatternText = 'Please enter a valid e-mail address';\n  @Input() resetPasswordActionButtonText = 'Reset';\n  @Input() resetPasswordInstructionsText = 'Reset requested. Check your e-mail instructions.';\n\n  // SignIn Tab\n  @Input() signInTabText = 'Sign in';\n  @Input() signInCardTitleText = 'Signing in';\n  @Input() loginButtonText = 'Log In';\n  @Input() forgotPasswordButtonText = 'Forgot Password ?';\n\n  // Common\n  @Input() nameText = 'Name';\n  @Input() nameErrorRequiredText = 'Name is required';\n  @Input() nameErrorMinLengthText = 'The name is too short!';\n  @Input() nameErrorMaxLengthText = 'The name is too long!';\n\n  @Input() emailText = 'E-mail';\n  @Input() emailErrorRequiredText = 'E-mail is required';\n  @Input() emailErrorPatternText = 'Please enter a valid e-mail address';\n\n  @Input() passwordText = 'Password';\n  @Input() passwordErrorRequiredText = 'Password is required';\n  @Input() passwordErrorMinLengthText = 'The password is too short!';\n  @Input() passwordErrorMaxLengthText = 'The password is too long!';\n\n  // Register Tab\n  @Input() registerTabText = 'Register';\n  @Input() registerCardTitleText = 'Registration';\n  @Input() registerButtonText = 'Register';\n  @Input() guestButtonText = 'continue as guest';\n\n  // email confirmation component\n  @Input() emailConfirmationTitle = 'Confirm your e-mail address!';\n  // tslint:disable-next-line:max-line-length\n  @Input() emailConfirmationText = `A confirmation e-mail has been sent to you. Check your inbox and click on the link \"Confirm my e-mail\" to confirm your e-mail address.`;\n\n  authProvider = AuthProvider;\n  passwordResetWished: boolean;\n\n  public signInFormGroup: FormGroup;\n  public signUpFormGroup: FormGroup;\n  public resetPasswordFormGroup: FormGroup;\n\n  onErrorSubscription: Subscription;\n  authenticationError = false;\n\n  passReset = false;\n  dialogRef: MatDialogRef<LegalityDialogComponent>;\n\n  authProviders = AuthProvider;\n\n  signInEmailFormControl: AbstractControl;\n  sigInPasswordFormControl: AbstractControl;\n\n  sigUpNameFormControl: AbstractControl;\n  sigUpEmailFormControl: AbstractControl;\n  sigUpPasswordFormControl: AbstractControl;\n  sigUpPasswordConfirmationFormControl: AbstractControl;\n  resetPasswordEmailFormControl: AbstractControl;\n\n  constructor(\n    // tslint:disable-next-line:ban-types\n    @Inject(PLATFORM_ID) private platformId: Object,\n    @Inject(forwardRef(() => NgxAuthFirebaseUIConfigToken)) public config: NgxAuthFirebaseUIConfig,\n    public auth: AngularFireAuth,\n    public authProcess: AuthProcessService,\n    public dialog: MatDialog,\n    private activatedRoute: ActivatedRoute,\n    private changeDetectorRef: ChangeDetectorRef\n  ) {\n    this.onSuccess = authProcess.onSuccessEmitter;\n    this.onError = authProcess.onErrorEmitter;\n  }\n\n  get color(): string | ThemePalette {\n    return this.authenticationError ? 'warn' : 'primary';\n  }\n\n  public ngOnInit(): void {\n    if (isPlatformBrowser(this.platformId)) {\n      this.onErrorSubscription = this.onError.subscribe(() => this.authenticationError = true);\n    }\n    this.min = this.min != null ? Math.max(this.min, this.config.passwordMinLength) : this.config.passwordMinLength;\n    this.max = this.max != null ? Math.min(this.max, this.config.passwordMaxLength) : this.config.passwordMaxLength;\n\n    this.goBackURL = this.chooseBackUrl();\n\n    this.updateAuthSnackbarMessages();\n    // auth form's initialization\n    this._initSignInFormGroupBuilder();\n    this._initSignUpFormGroupBuilder();\n    this._initResetPasswordFormGroupBuilder();\n  }\n\n  ngAfterViewInit(): void {\n    if (this.passwordStrength) {\n      this.passwordStrength.onStrengthChanged.subscribe((strength: number) => {\n        this.onStrengthChanged.emit(strength);\n      });\n    }\n  }\n\n  ngOnChanges(changes: SimpleChanges): void {\n    if (changes.messageOnAuthSuccess || changes.messageOnAuthError) {\n      this.updateAuthSnackbarMessages();\n    }\n    if (changes.min) {\n      this.min = this.min != null ? Math.max(this.min, this.config.passwordMinLength) : this.config.passwordMinLength;\n    }\n    if (changes.max) {\n      this.max = this.max != null ? Math.min(this.max, this.config.passwordMaxLength) : this.config.passwordMaxLength;\n    }\n    if (changes.goBackURL) {\n      this.goBackURL = this.chooseBackUrl();\n    }\n  }\n\n  ngOnDestroy(): void {\n    if (this.onErrorSubscription) {\n      this.onErrorSubscription.unsubscribe();\n    }\n  }\n\n  onTabChange(event: MatTabChangeEvent) {\n    this.selectedTabChange.emit(event);\n    this.tabIndex = event.index;\n  }\n\n  async signOut() {\n    try {\n      this.isLoading = true;\n      this.changeDetectorRef.markForCheck();\n      await this.authProcess.signOut();\n    } finally {\n      this.isLoading = false;\n      this.tabIndex = 0;\n      this.changeDetectorRef.markForCheck();\n    }\n  }\n\n  async signIn() {\n    if (!this.signInFormGroup.valid) {\n      return;\n    }\n    try {\n      this.isLoading = true;\n      this.changeDetectorRef.markForCheck();\n      await this.authProcess.signInWith(this.authProviders.EmailAndPassword, {\n        email: this.signInFormGroup.value.email,\n        password: this.signInFormGroup.value.password\n      });\n    } finally {\n      this.isLoading = false;\n      this.changeDetectorRef.markForCheck();\n    }\n  }\n\n  updateAuthSnackbarMessages(): void {\n    this.authProcess.messageOnAuthSuccess = this.messageOnAuthSuccess;\n    this.authProcess.messageOnAuthError = this.messageOnAuthError;\n  }\n\n  createForgotPasswordTab() {\n    this.passwordResetWished = true;\n    this.tabIndex = 2;\n    this.changeDetectorRef.markForCheck();\n  }\n\n  processLegalSignUP(authProvider?: AuthProvider) {\n    if (this.tosUrl || this.privacyPolicyUrl) {\n      const params: LegalityDialogParams = {\n        tosUrl: this.tosUrl,\n        privacyPolicyUrl: this.privacyPolicyUrl,\n        authProvider\n      };\n\n      this.dialogRef = this.dialog.open(LegalityDialogComponent, {data: params});\n      this.dialogRef.afterClosed().subscribe((result: LegalityDialogResult) => {\n        if (result && result.checked) {\n          this._afterSignUpMiddleware(result.authProvider).then(() => this.signUpFormGroup.reset());\n        }\n        this.dialogRef = null;\n      });\n    } else {\n      this._afterSignUpMiddleware(authProvider).then(() => this.signUpFormGroup.reset());\n    }\n  }\n\n  async signUp() {\n    try {\n      this.isLoading = true;\n      this.changeDetectorRef.markForCheck();\n      return await this.authProcess.signUp(\n        this.signUpFormGroup.value.name,\n        {\n          email: this.signUpFormGroup.value.email,\n          password: this.signUpFormGroup.value.password\n        }\n      );\n    } finally {\n      this.isLoading = false;\n      this.changeDetectorRef.markForCheck();\n    }\n  }\n\n  async signUpAnonymously() {\n    try {\n      this.isLoading = true;\n      this.changeDetectorRef.markForCheck();\n      await this.authProcess.signInWith(this.authProvider.ANONYMOUS);\n    } finally {\n      this.isLoading = false;\n      this.changeDetectorRef.markForCheck();\n    }\n  }\n\n\n  resetPassword() {\n    this.authProcess.resetPassword(this.resetPasswordEmailFormControl.value)\n      .then(() => {\n        this.passReset = true;\n        // this.tabIndex = 2;\n        this.changeDetectorRef.markForCheck();\n      });\n  }\n\n  private chooseBackUrl() {\n    return this.activatedRoute.snapshot.queryParams.redirectUrl || this.goBackURL || '/';\n  }\n\n  private _initSignInFormGroupBuilder() {\n    this.signInFormGroup = new FormGroup({});\n    this.signInFormGroup.registerControl('email', this.signInEmailFormControl = new FormControl('',\n      [\n        Validators.required,\n        Validators.pattern(EMAIL_REGEX)\n      ]));\n    this.signInFormGroup.registerControl('password', this.sigInPasswordFormControl = new FormControl('',\n      [\n        Validators.required,\n        Validators.minLength(this.min),\n        Validators.maxLength(this.max)\n      ]));\n  }\n\n  private _initSignUpFormGroupBuilder() {\n    this.signUpFormGroup = new FormGroup({\n      name: this.sigUpNameFormControl = new FormControl('',\n        [\n          Validators.required,\n          Validators.minLength(this.config.nameMinLength),\n          Validators.maxLength(this.config.nameMaxLength)\n        ]),\n      email: this.sigUpEmailFormControl = new FormControl('',\n        [\n          Validators.required,\n          Validators.pattern(EMAIL_REGEX)\n        ]),\n      password: this.sigUpPasswordFormControl = new FormControl('',\n        [\n          Validators.required,\n          Validators.minLength(this.min),\n          Validators.maxLength(this.max),\n        ])\n    });\n  }\n\n  private _initResetPasswordFormGroupBuilder() {\n    this.resetPasswordFormGroup = new FormGroup({\n      email: this.resetPasswordEmailFormControl = new FormControl('',\n        [\n          Validators.required,\n          Validators.pattern(EMAIL_REGEX)\n        ])\n    });\n  }\n\n  private _afterSignUpMiddleware(authProvider?: AuthProvider) {\n    if (authProvider === this.authProvider.ANONYMOUS) {\n      return this.signUpAnonymously();\n    }\n    return this.signUp();\n  }\n\n}\n","import {Component, EventEmitter, Input, OnInit, Output} from '@angular/core';\nimport {AngularFireAuth} from '@angular/fire/auth';\nimport {User} from 'firebase';\nimport {Observable} from 'rxjs';\nimport {MatDialog} from '@angular/material/dialog';\nimport {UserComponent} from '..';\n\nexport interface LinkMenuItem {\n  text: string;\n  icon?: string;\n  // tslint:disable-next-line:ban-types\n  callback?: Function;\n}\n\n@Component({\n  selector: 'ngx-auth-firebaseui-avatar',\n  templateUrl: './ngx-auth-firebaseui-avatar.component.html',\n  styleUrls: ['./ngx-auth-firebaseui-avatar.component.scss']\n})\nexport class NgxAuthFirebaseuiAvatarComponent implements OnInit {\n\n  @Input()\n  layout: 'default' | 'simple' = 'default';\n\n  @Input()\n  canLogout = true;\n\n  @Input()\n  links: LinkMenuItem[];\n\n  @Input()\n  canViewAccount = true;\n\n  @Input()\n  canDeleteAccount = true;\n\n  @Input()\n  canEditAccount = true;\n\n  @Input()\n  textProfile = 'Profile';\n\n  @Input()\n  textSignOut = 'Sign Out';\n\n  // tslint:disable-next-line:no-output-on-prefix\n  @Output()\n  onSignOut: EventEmitter<void> = new EventEmitter();\n\n  user: User;\n  user$: Observable<User | null>;\n  displayNameInitials: string | null;\n\n  constructor(public afa: AngularFireAuth,\n              public dialog: MatDialog) {\n  }\n\n  ngOnInit() {\n    this.user$ = this.afa.user;\n    this.user$.subscribe((user: User) => {\n      this.user = user;\n      this.displayNameInitials = user ? this.getDisplayNameInitials(user.displayName) : null;\n    });\n  }\n\n  getDisplayNameInitials(displayName: string | null): string | null {\n    if (!displayName) {\n      return null;\n    }\n    const initialsRegExp: RegExpMatchArray = displayName.match(/\\b\\w/g) || [];\n    const initials = ((initialsRegExp.shift() || '') + (initialsRegExp.pop() || '')).toUpperCase();\n    return initials;\n  }\n\n  openProfile() {\n    const dialogRef = this.dialog.open(UserComponent);\n    const instance = dialogRef.componentInstance;\n    instance.canDeleteAccount = this.canDeleteAccount;\n    instance.canEditAccount = this.canEditAccount;\n  }\n\n  async signOut() {\n    try {\n      await this.afa.signOut();\n      // Sign-out successful.\n      this.onSignOut.emit();\n    } catch (e) {\n      // An error happened.\n      console.error('An error happened while signing out!', e);\n    }\n  }\n}\n","import {Component, EventEmitter, Inject, Input, OnInit, Output, PLATFORM_ID, ViewEncapsulation} from '@angular/core';\nimport {FormBuilder, FormGroup, Validators} from '@angular/forms';\nimport {AuthProcessService, AuthProvider} from '../../services/auth-process.service';\nimport {Subscription} from 'rxjs';\nimport {NgxAuthFirebaseuiAnimations} from '../../animations';\nimport {isPlatformBrowser} from '@angular/common';\nimport {MatFormFieldAppearance} from '@angular/material/form-field';\nimport {ThemePalette} from '@angular/material/core';\n\n@Component({\n  selector: 'ngx-auth-firebaseui-login',\n  templateUrl: './ngx-auth-firebaseui-login.component.html',\n  styleUrls: ['./ngx-auth-firebaseui-login.component.scss'],\n  encapsulation: ViewEncapsulation.None,\n  animations: NgxAuthFirebaseuiAnimations\n})\nexport class NgxAuthFirebaseuiLoginComponent implements OnInit {\n\n  @Input() logoUrl: string;\n  @Input() providers: string[] | string = AuthProvider.ALL; //  google, facebook, twitter, github as array or all as one single string\n  @Input() appearance: MatFormFieldAppearance;\n  @Input() registrationEnabled = true;\n  @Input() resetPasswordEnabled = true;\n  @Input() messageOnAuthSuccess: string;\n  @Input() messageOnAuthError: string;\n\n  // i18n\n  @Input() titleText = 'LOGIN TO YOUR ACCOUNT';\n  @Input() rememberMeText = 'Remember Me';\n  @Input() loginButtonText = 'LOGIN';\n  @Input() orLabelText = 'OR';\n  @Input() forgotPasswordText = 'Forgot Password?';\n  @Input() dontHaveAnAccountText = 'Don\\'t have an account?';\n  @Input() createAccountButtonText = 'Create an account';\n\n  // i18n email\n  @Input() emailText = 'Email';\n  @Input() emailErrorRequiredText = 'Email is required';\n  @Input() emailErrorPatternText = 'Please enter a valid email address';\n\n  // i18n password\n  @Input() passwordText = 'Password';\n  @Input() passwordErrorRequiredText = 'Password is required';\n\n  // Events\n  // tslint:disable-next-line:no-output-on-prefix\n  @Output() onSuccess: any;\n  // tslint:disable-next-line:no-output-on-prefix\n  @Output() onError: any;\n  // tslint:disable-next-line:no-output-on-prefix\n  @Output() onCreateAccountRequested: EventEmitter<void> = new EventEmitter<void>();\n  // tslint:disable-next-line:no-output-on-prefix\n  @Output() onResetPasswordRequested: EventEmitter<void> = new EventEmitter<void>();\n\n  loginForm: FormGroup;\n  authProviders = AuthProvider;\n  onErrorSubscription: Subscription;\n  authenticationError = false;\n\n  constructor(\n    // tslint:disable-next-line:ban-types\n    @Inject(PLATFORM_ID) private platformId: Object,\n    public authProcess: AuthProcessService,\n    private formBuilder: FormBuilder) {\n    this.onSuccess = authProcess.onSuccessEmitter;\n    this.onError = authProcess.onErrorEmitter;\n  }\n\n  get color(): string | ThemePalette {\n    return this.authenticationError ? 'warn' : 'primary';\n  }\n\n  get colorAccent(): string | ThemePalette {\n    return this.authenticationError ? 'warn' : 'accent';\n  }\n\n  ngOnInit() {\n\n    if (isPlatformBrowser(this.platformId)) {\n      this.onErrorSubscription = this.onError.subscribe(() => this.authenticationError = true);\n    }\n\n    this.updateAuthSnackbarMessages();\n\n    this.loginForm = this.formBuilder.group({\n      email: ['', [Validators.required, Validators.email]],\n      password: ['', Validators.required]\n    });\n  }\n\n  public updateAuthSnackbarMessages(): void {\n    this.authProcess.messageOnAuthSuccess = this.messageOnAuthSuccess;\n    this.authProcess.messageOnAuthError = this.messageOnAuthError;\n  }\n\n  async login() {\n    return await this.authProcess.signInWith(this.authProviders.EmailAndPassword,\n      {\n        email: this.loginForm.controls.email.value,\n        password: this.loginForm.controls.password.value\n      }\n    );\n  }\n}\n","import {Component, EventEmitter, Inject, Input, OnDestroy, OnInit, Output, PLATFORM_ID, ViewEncapsulation} from '@angular/core';\nimport {AbstractControl, FormBuilder, FormGroup, ValidationErrors, ValidatorFn, Validators} from '@angular/forms';\nimport {Subject, Subscription} from 'rxjs';\nimport {takeUntil} from 'rxjs/operators';\n\nimport {NgxAuthFirebaseuiAnimations} from '../../animations';\nimport {AuthProcessService} from '../../services/auth-process.service';\nimport {isPlatformBrowser} from '@angular/common';\nimport {MatFormFieldAppearance} from '@angular/material/form-field';\nimport {ThemePalette} from '@angular/material/core';\n\nexport const confirmPasswordValidator: ValidatorFn = (control: AbstractControl): ValidationErrors | null => {\n  if (!control.parent || !control) {\n    return null;\n  }\n\n  const password = control.parent.get('password');\n  const passwordConfirm = control.parent.get('passwordConfirm');\n\n  if (!password || !passwordConfirm) {\n    return null;\n  }\n\n  if (passwordConfirm.value === '') {\n    return null;\n  }\n\n  if (password.value === passwordConfirm.value) {\n    return null;\n  }\n\n  return {passwordsNotMatching: true};\n};\n\n@Component({\n  selector: 'ngx-auth-firebaseui-register',\n  templateUrl: './ngx-auth-firebaseui-register.component.html',\n  styleUrls: ['./ngx-auth-firebaseui-register.component.scss'],\n  encapsulation: ViewEncapsulation.None,\n  animations: NgxAuthFirebaseuiAnimations\n})\nexport class NgxAuthFirebaseuiRegisterComponent implements OnInit, OnDestroy {\n\n  @Input() logoUrl: string;\n  @Input() appearance: MatFormFieldAppearance;\n  @Input() tosUrl: string;\n  @Input() privacyPolicyUrl: string;\n\n  // i18n common\n  @Input() titleText = 'CREATE AN ACCOUNT';\n  @Input() readAndAcceptText = 'I read and accept the';\n  @Input() termsAndConditionsText = 'terms and conditions';\n  @Input() privacyPolicyText = 'privacy policy';\n  @Input() createAccountButtonText = 'CREATE AN ACCOUNT';\n  @Input() alreadyHaveAccountText = 'Already have an account?';\n  @Input() loginButtonText = 'LOGIN';\n\n  // i18n name\n  @Input() nameText = 'Name';\n  @Input() nameErrorRequiredText = 'Name is required';\n\n  // i18n email\n  @Input() emailText = 'Email';\n  @Input() emailErrorRequiredText = 'Email is required';\n  @Input() emailErrorPatternText = 'Please enter a valid email address';\n\n  // i18n password\n  @Input() passwordText = 'Password';\n  @Input() passwordErrorRequiredText = 'Password is required';\n  @Input() passwordConfirmationText = 'Password Confirmation';\n  @Input() passwordConfirmationErrorRequiredText = 'Password confirmation is required';\n  @Input() passwordErrorMatchText = 'Password must match';\n\n  // Events\n  // tslint:disable-next-line:no-output-on-prefix\n  @Output() onSuccess: any;\n  // tslint:disable-next-line:no-output-on-prefix\n  @Output() onError: any;\n  // tslint:disable-next-line:no-output-on-prefix\n  @Output() onLoginRequested: EventEmitter<void> = new EventEmitter<void>();\n\n  registerForm: FormGroup;\n  onErrorSubscription: Subscription;\n  authenticationError = false;\n\n  // Private\n  private unsubscribeAll: Subject<any>;\n\n  // tslint:disable-next-line:ban-types\n  constructor(@Inject(PLATFORM_ID) private platformId: Object,\n              private formBuilder: FormBuilder,\n              public authProcess: AuthProcessService) {\n    // Configure the layout\n\n    // Set the private defaults\n    this.unsubscribeAll = new Subject();\n    this.onSuccess = authProcess.onSuccessEmitter;\n    this.onError = authProcess.onErrorEmitter;\n  }\n\n  get color(): string | ThemePalette {\n    return this.authenticationError ? 'warn' : 'primary';\n  }\n\n  get colorAccent(): string | ThemePalette {\n    return this.authenticationError ? 'warn' : 'accent';\n  }\n\n  ngOnInit(): void {\n    if (isPlatformBrowser(this.platformId)) {\n      this.onErrorSubscription = this.onError.subscribe(() => this.authenticationError = true);\n    }\n    this.registerForm = this.formBuilder.group({\n      name: ['', Validators.required],\n      email: ['', [Validators.required, Validators.email]],\n      password: ['', Validators.required],\n      passwordConfirm: ['', [Validators.required, confirmPasswordValidator]],\n      tos: [''],\n      privacyPolicy: ['']\n    });\n\n    // If tos or privacy policy url set, ensure that the two form items are required\n    if (this.tosUrl) {\n      this.registerForm.controls.tos.setValidators(Validators.requiredTrue);\n    }\n\n    if (this.privacyPolicyUrl) {\n      this.registerForm.controls.privacyPolicy.setValidators(Validators.requiredTrue);\n    }\n\n    // Update the validity of the 'passwordConfirm' field\n    // when the 'password' field changes\n    this.registerForm\n      .controls\n      .password\n      .valueChanges.pipe(takeUntil(this.unsubscribeAll))\n      .subscribe(() => {\n        this.registerForm.controls.passwordConfirm.updateValueAndValidity();\n      });\n  }\n\n  /**\n   * On destroy\n   */\n  ngOnDestroy(): void {\n    // Unsubscribe from all subscriptions\n    this.unsubscribeAll.next();\n    this.unsubscribeAll.complete();\n  }\n\n  async createAccount() {\n    return await this.authProcess.signUp(\n      this.registerForm.controls.name.value,\n      {\n        email: this.registerForm.controls.email.value,\n        password: this.registerForm.controls.password.value\n      }\n    );\n  }\n}\n","import {Component, EventEmitter, forwardRef, Inject, Input, Output} from '@angular/core';\nimport {AngularFireAuth} from '@angular/fire/auth';\nimport {FormControl, FormGroup, Validators} from '@angular/forms';\nimport {User} from 'firebase';\nimport {EMAIL_REGEX, PHONE_NUMBER_REGEX} from '..';\nimport {MatFormFieldAppearance} from '@angular/material/form-field';\nimport {NgxAuthFirebaseUIConfigToken} from '../../tokens';\nimport {NgxAuthFirebaseUIConfig} from '../../interfaces';\nimport { AuthProcessService } from '../../services/auth-process.service';\nimport { FirestoreSyncService } from '../../services/firestore-sync.service';\nimport { map, take } from 'rxjs/operators';\nimport { Observable } from 'rxjs';\n\n@Component({\n  selector: 'ngx-auth-firebaseui-user',\n  templateUrl: './user.component.html',\n  styleUrls: ['./user.component.scss']\n})\nexport class UserComponent {\n\n  @Input()\n  editMode: boolean;\n\n  @Input()\n  canLogout = true;\n\n  @Input()\n  canEditAccount = true;\n\n  @Input()\n  canDeleteAccount = true;\n\n  @Input()\n  appearance: MatFormFieldAppearance;\n\n  // tslint:disable-next-line:no-output-on-prefix\n  @Output()\n  onSignOut: EventEmitter<void> = new EventEmitter();\n\n  // tslint:disable-next-line:no-output-on-prefix\n  @Output()\n  onAccountEdited: EventEmitter<void> = new EventEmitter();\n\n  // tslint:disable-next-line:no-output-on-prefix\n  @Output()\n  onAccountDeleted: EventEmitter<void> = new EventEmitter();\n\n  updateFormGroup: FormGroup;\n  updateNameFormControl: FormControl;\n  updateEmailFormControl: FormControl;\n  updatePhoneNumberFormControl: FormControl;\n\n  constructor(\n    public auth: AngularFireAuth,\n    public authProcess: AuthProcessService,\n    private fireStoreService: FirestoreSyncService,\n    @Inject(forwardRef(() => NgxAuthFirebaseUIConfigToken)) public config: NgxAuthFirebaseUIConfig\n  ) {\n  }\n\n  changeEditMode() {\n    if (this.editMode) {\n      this.reset();\n      this.editMode = false;\n    } else {\n      this.initUpdateFormGroup().subscribe((updateFormGroup: FormGroup) => {\n        this.updateFormGroup = updateFormGroup;\n        this.editMode = true;\n      });\n    }\n  }\n\n  reset() {\n    this.updateFormGroup.reset();\n    this.updateFormGroup.disable();\n    this.updateFormGroup = null;\n  }\n\n  async save() {\n    if (this.updateFormGroup.dirty) {\n      this.editMode = false;\n      const user = this.authProcess.user;\n      // ngx-auth-firebaseui-user.updateProfile()\n      // ngx-auth-firebaseui-user.updateEmail()\n      // console.log('form = ', this.updateFormGroup);\n\n      const snackBarMsg: string[] = [];\n\n      try {\n        if (this.updateNameFormControl.dirty) {\n          await user.updateProfile({displayName: this.updateNameFormControl.value});\n          snackBarMsg.push(`your name has been updated to ${user.displayName}`);\n        }\n\n        if (this.updateEmailFormControl.dirty) {\n          await user.updateEmail(this.updateEmailFormControl.value);\n          snackBarMsg.push(`your email has been updated to ${user.email}`);\n        }\n\n        if (this.updatePhoneNumberFormControl.dirty) {\n          await user.updatePhoneNumber(this.updatePhoneNumberFormControl.value);\n          console.log('phone number = ', this.updatePhoneNumberFormControl.value);\n          snackBarMsg.push(`your phone number has been updated to ${user.phoneNumber}`);\n        }\n\n        if (this.config.enableFirestoreSync) {\n          await this.fireStoreService.updateUserData(this.authProcess.parseUserInfo(user));\n        }\n\n      } catch (error) {\n        this.authProcess.showToast(error && error.message ? error.message : error);\n        console.error(error);\n      }\n\n\n      if (snackBarMsg.length > 0) {\n        this.authProcess.showToast(snackBarMsg.join('\\\\n'));\n      }\n      this.updateFormGroup.reset();\n    }\n  }\n\n  signOut() {\n    this.auth.signOut()\n      .then(() => this.onSignOut.emit())\n      .catch(e => console.error('An error happened while signing out!', e));\n  }\n\n  /**\n   * Delete the account of the current firebase ngx-auth-firebaseui-user\n   *\n   * On Success, emit the <onAccountDeleted> event and toast a msg!#\n   * Otherwise, log the and toast and error msg!\n   *\n   */\n  async deleteAccount() {\n    try {\n      const user = this.authProcess.user;\n\n      // await this.authProcess.deleteAccount();\n      await this.authProcess.user.delete();\n      // if (this.config.enableFirestoreSync) {\n      await this.fireStoreService.deleteUserData(user.uid);\n      // }\n      this.onAccountDeleted.emit();\n      this.editMode = false;\n      console.log('Your account has been successfully deleted!');\n      this.authProcess.showToast('Your account has been successfully deleted!');\n    } catch (error) {\n      console.log('Error while delete user account', error);\n      this.authProcess.showToast(`Error occurred while deleting your account: ${error.message}`);\n    }\n  }\n\n  protected initUpdateFormGroup(): Observable<FormGroup> {\n    return this.authProcess.user$.pipe(\n      take(1),\n      map((currentUser: User) => {\n      const updateFormGroup = new FormGroup({\n        name: this.updateNameFormControl = new FormControl(\n          {value: currentUser.displayName, disabled: this.editMode},\n          [\n            Validators.required,\n            Validators.minLength(this.config.nameMinLength),\n            Validators.maxLength(this.config.nameMaxLength)\n          ]\n        ),\n\n        email: this.updateEmailFormControl = new FormControl(\n          {value: currentUser.email, disabled: this.editMode},\n          [\n            Validators.required,\n            Validators.pattern(EMAIL_REGEX)\n          ]),\n\n        phoneNumber: this.updatePhoneNumberFormControl = new FormControl(\n          {value: currentUser.phoneNumber, disabled: this.editMode},\n          [Validators.pattern(PHONE_NUMBER_REGEX)])\n      });\n\n      updateFormGroup.enable();\n      return updateFormGroup;\n      })\n    );\n  }\n}\n","import {Component, Input, Output} from '@angular/core';\nimport {AuthProcessService, AuthProvider} from '../../services/auth-process.service';\nimport {NgxAuthFirebaseuiAnimations} from '../../animations';\nimport {LegalityDialogComponent} from '..';\nimport {LegalityDialogParams, LegalityDialogResult} from '../../interfaces';\nimport {MatDialog, MatDialogRef} from '@angular/material/dialog';\n\nexport enum Theme {\n  DEFAULT = 'default',\n  CLASSIC = 'classic',\n  STROKED = 'stroked',\n  FAB = 'fab',\n  MINI_FAB = 'mini-fab',\n  RAISED = 'raised',\n}\n\nexport enum Layout {\n  ROW = 'row',\n  COLUMN = 'column'\n}\n\n@Component({\n  selector: 'ngx-auth-firebaseui-providers',\n  templateUrl: 'auth.providers.component.html',\n  styleUrls: ['auth.providers.component.scss'],\n  animations: NgxAuthFirebaseuiAnimations\n})\nexport class AuthProvidersComponent {\n\n  @Input() theme: Theme; // theme: string = Theme.DEFAULT;\n  @Input() layout: string = Layout.ROW;\n  @Input() providers: AuthProvider[] | AuthProvider = AuthProvider.ALL; //  google, facebook, twitter, github, microsoft, yahoo\n\n  @Output() onSuccess: any;\n  @Output() onError: any;\n\n  @Input() tosUrl: string;\n  @Input() privacyPolicyUrl: string;\n  dialogRef: MatDialogRef<LegalityDialogComponent>;\n\n  themes = Theme;\n  authProvider = AuthProvider;\n\n  constructor(public authProcess: AuthProcessService, public dialog: MatDialog) {\n    this.onSuccess = authProcess.onSuccessEmitter;\n    this.onError = authProcess.onErrorEmitter;\n  }\n\n  processLegalSignUP(authProvider?: AuthProvider) {\n    if (this.tosUrl || this.privacyPolicyUrl) {\n      const params: LegalityDialogParams = {\n        tosUrl: this.tosUrl,\n        privacyPolicyUrl: this.privacyPolicyUrl,\n        authProvider\n      };\n\n      this.dialogRef = this.dialog.open(LegalityDialogComponent, {data: params});\n      this.dialogRef.afterClosed().subscribe((result: LegalityDialogResult) => {\n        if (result && result.checked) {\n          // this._afterSignUpMiddleware(result.authProvider).then(() => this.signUpFormGroup.reset());\n          this.authProcess.signInWith(authProvider);\n        }\n        this.dialogRef = null;\n      });\n    } else {\n      // this._afterSignUpMiddleware(authProvider).then(() => this.signUpFormGroup.reset());\n      this.authProcess.signInWith(authProvider);\n    }\n  }\n\n}\n","// import * as firebase from 'firebase';\n\nexport interface NgxAuthFirebaseUIConfig {\n  // authNextURL?: string, // popup or redirect\n  // tosUrl?: string, // term of services url\n  // ppUrl?: string, // privacy policy url\n  // authProviders?: Array<AuthProvider>,\n  // languageCode?: string, // todo: 28.3.18\n  authGuardFallbackURL?: string;\n  authGuardLoggedInURL?: string;\n  enableFirestoreSync?: boolean;\n\n  // Toasts\n  toastMessageOnAuthSuccess?: boolean;\n  toastMessageOnAuthError?: boolean;\n\n  // Password length min/max in forms independently of each componenet min/max.\n  // `min/max` input parameters in components should be within this range.\n  passwordMaxLength?: number;\n  passwordMinLength?: number;\n\n  // Same as password but for the name\n  nameMaxLength?: number;\n  nameMinLength?: number;\n\n  // If set, sign-in/up form is not available until email has been verified.\n  // Plus protected routes are still protected even though user is connected.\n  guardProtectedRoutesUntilEmailIsVerified?: boolean;\n\n  // Control whether or not email verification is used\n  enableEmailVerification?: boolean;\n}\n\nexport const defaultAuthFirebaseUIConfig: NgxAuthFirebaseUIConfig = {\n  // authMethod: 'redirect',\n  // authProviders: [new GoogleAuthProvider(), new FacebookAuthProvider(), new TwitterAuthProvider(), new GithubAuthProvider()],\n  enableFirestoreSync: true,\n  toastMessageOnAuthSuccess: true,\n  toastMessageOnAuthError: true,\n  authGuardFallbackURL: '/',\n  authGuardLoggedInURL: '/',\n\n  // Password length min/max in forms independently of each componenet min/max.\n  // `min/max` input parameters in components should be within this range.\n  passwordMaxLength: 60,\n  passwordMinLength: 8,\n\n  // Same as password but for the name\n  nameMaxLength: 50,\n  nameMinLength: 2,\n\n  // If set, sign-in/up form is not available until email has been verified.\n  // Plus protected routes are still protected even though user is connected.\n  guardProtectedRoutesUntilEmailIsVerified: true,\n\n  // Default to email verification on\n  enableEmailVerification: true\n};\n\n// Merge default config with user provided config.\nexport function ngxAuthFirebaseUIConfigFactory(userProvidedConfig: NgxAuthFirebaseUIConfig): NgxAuthFirebaseUIConfig {\n  return Object.assign({}, defaultAuthFirebaseUIConfig, userProvidedConfig);\n}\n","import {Inject, Injectable} from '@angular/core';\nimport {ActivatedRouteSnapshot, CanActivate, Router, RouterStateSnapshot} from '@angular/router';\nimport {Observable} from 'rxjs';\nimport {map} from 'rxjs/operators';\nimport {NgxAuthFirebaseUIConfig} from '../interfaces';\nimport {NgxAuthFirebaseUIConfigToken} from '../tokens';\nimport {AuthProcessService} from '../services/auth-process.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class LoggedInGuard implements CanActivate {\n  constructor(\n    @Inject(NgxAuthFirebaseUIConfigToken)\n    private config: NgxAuthFirebaseUIConfig,\n    private router: Router,\n    private authProcess: AuthProcessService\n  ) {\n  }\n\n  canActivate(route: ActivatedRouteSnapshot, state: RouterStateSnapshot): Observable<boolean> {\n    return this.authProcess.afa.user.pipe(\n      map(user => {\n        if (user) {\n          if (this.config.guardProtectedRoutesUntilEmailIsVerified && !user.emailVerified && !user.isAnonymous) {\n            if (this.config.authGuardFallbackURL) {\n              this.router.navigate([`${this.config.authGuardFallbackURL}`], {queryParams: {redirectUrl: state.url}});\n            }\n            return false;\n          } else {\n            return true;\n          }\n        } else {\n          if (this.config.authGuardFallbackURL) {\n            this.router.navigate([`/${this.config.authGuardFallbackURL}`], {queryParams: {redirectUrl: state.url}});\n          }\n          return false;\n        }\n      })\n    );\n  }\n}\n","// @angular/*\nimport {CommonModule} from '@angular/common';\nimport {ModuleWithProviders, NgModule} from '@angular/core';\nimport {FormsModule, ReactiveFormsModule} from '@angular/forms';\nimport {HttpClientModule} from '@angular/common/http';\nimport {RouterModule} from '@angular/router';\nimport {FlexLayoutModule} from '@angular/flex-layout';\n// @angular/fire\nimport {FIREBASE_APP_NAME, FIREBASE_OPTIONS, FirebaseAppConfig} from '@angular/fire';\nimport {AngularFireAuthModule} from '@angular/fire/auth';\nimport {AngularFirestoreModule} from '@angular/fire/firestore';\n// @angular/material\nimport {MatButtonModule} from '@angular/material/button';\nimport {MatCardModule} from '@angular/material/card';\nimport {MatCheckboxModule} from '@angular/material/checkbox';\nimport {MatChipsModule} from '@angular/material/chips';\nimport {MatDialogModule} from '@angular/material/dialog';\nimport {MatDividerModule} from '@angular/material/divider';\nimport {MatIconModule, MatIconRegistry} from '@angular/material/icon';\nimport {MatInputModule} from '@angular/material/input';\nimport {MatMenuModule} from '@angular/material/menu';\nimport {MatProgressBarModule} from '@angular/material/progress-bar';\nimport {MatProgressSpinnerModule} from '@angular/material/progress-spinner';\nimport {MatSnackBarModule} from '@angular/material/snack-bar';\nimport {MatTabsModule} from '@angular/material/tabs';\nimport {MatTooltipModule} from '@angular/material/tooltip';\n\nimport {MatPasswordStrengthModule} from '@angular-material-extensions/password-strength';\n\n\nimport {NgxAuthFirebaseuiLoginComponent} from './components/ngx-auth-firebaseui-login/ngx-auth-firebaseui-login.component';\nimport {NgxAuthFirebaseuiRegisterComponent} from './components/ngx-auth-firebaseui-register/ngx-auth-firebaseui-register.component';\n\n\nimport {DomSanitizer} from '@angular/platform-browser';\n// ngx-auth-firebaseui\n// components\nimport {AuthComponent} from './components/ngx-auth-firebaseui/auth.component';\nimport {UserComponent} from './components/ngx-auth-firebaseui-user/user.component';\nimport {AuthProvidersComponent} from './components/providers/auth.providers.component';\nimport {EmailConfirmationComponent} from './components/email-confirmation/email-confirmation.component';\nimport {NgxAuthFirebaseUIConfig, ngxAuthFirebaseUIConfigFactory} from './interfaces/config.interface';\nimport {NgxAuthFirebaseuiAvatarComponent} from './components/ngx-auth-firebaseui-avatar/ngx-auth-firebaseui-avatar.component';\nimport {LegalityDialogComponent} from './components/legality-dialog/legality-dialog.component';\n// guards\nimport {LoggedInGuard} from './guards/logged-in.guard';\n// services\nimport {FirestoreSyncService} from './services/firestore-sync.service';\nimport {AuthProcessService} from './services/auth-process.service';\nimport {NgxAuthFirebaseUIConfigToken, UserProvidedConfigToken} from './tokens';\n// interfaces\n// ###################################################################################################\n// Export module's public API\n// components\nexport {LegalityDialogComponent} from './components/legality-dialog/legality-dialog.component';\nexport {LinkMenuItem, NgxAuthFirebaseuiAvatarComponent} from './components/ngx-auth-firebaseui-avatar/ngx-auth-firebaseui-avatar.component';\nexport {UserComponent} from './components/ngx-auth-firebaseui-user/user.component';\nexport {AuthComponent} from './components/ngx-auth-firebaseui/auth.component';\nexport {AuthProvidersComponent, Layout, Theme} from './components/providers/auth.providers.component';\nexport {NgxAuthFirebaseuiLoginComponent} from './components/ngx-auth-firebaseui-login/ngx-auth-firebaseui-login.component';\nexport {NgxAuthFirebaseuiRegisterComponent} from './components/ngx-auth-firebaseui-register/ngx-auth-firebaseui-register.component';\n\n\n// guards\nexport {LoggedInGuard} from './guards/logged-in.guard';\n// interfaces\nexport {NgxAuthFirebaseUIConfig} from './interfaces/config.interface';\n// services\nexport {AuthProcessService, AuthProvider} from './services/auth-process.service';\nexport {FirestoreSyncService} from './services/firestore-sync.service';\n\n\n@NgModule({\n  imports: [\n    CommonModule,\n    // HTTP\n    RouterModule,\n    HttpClientModule,\n    // FLEX_LAYOUT\n    FlexLayoutModule,\n    // FORMS\n    FormsModule,\n    ReactiveFormsModule,\n    // MATERIAL2\n    MatTabsModule,\n    MatCardModule,\n    MatInputModule,\n    MatButtonModule,\n    MatIconModule,\n    MatSnackBarModule,\n    MatDividerModule,\n    MatChipsModule,\n    MatTooltipModule,\n    MatDialogModule,\n    MatCheckboxModule,\n    MatProgressSpinnerModule,\n    MatProgressBarModule,\n    MatDialogModule,\n    MatMenuModule,\n    // ANGULAR MATERIAL EXTENSIONS\n    MatPasswordStrengthModule,\n    // ANGULARFIRE2\n    AngularFireAuthModule,\n    AngularFirestoreModule,\n  ],\n  exports: [\n    AuthComponent,\n    UserComponent,\n    NgxAuthFirebaseuiAvatarComponent,\n    AuthProvidersComponent,\n    EmailConfirmationComponent,\n    // LoggedInGuard,\n    AngularFireAuthModule,\n    AngularFirestoreModule,\n    NgxAuthFirebaseuiLoginComponent,\n    NgxAuthFirebaseuiRegisterComponent\n  ],\n  declarations: [\n    AuthComponent,\n    UserComponent,\n    NgxAuthFirebaseuiAvatarComponent,\n    AuthProvidersComponent,\n    EmailConfirmationComponent,\n    LegalityDialogComponent,\n    NgxAuthFirebaseuiLoginComponent,\n    NgxAuthFirebaseuiRegisterComponent\n  ],\n  entryComponents: [\n    UserComponent,\n    LegalityDialogComponent\n  ]\n})\nexport class NgxAuthFirebaseUIModule {\n  constructor(private iconRegistry: MatIconRegistry, private sanitizer: DomSanitizer, auth: AuthProcessService) {\n    auth.listenToUserEvents();\n    this.registerProviderIcons();\n  }\n\n  static forRoot(\n    configFactory: FirebaseAppConfig,\n    appNameFactory: () => string | undefined = () => undefined,\n    config: NgxAuthFirebaseUIConfig = {}\n  ): ModuleWithProviders {\n    return {\n      ngModule: NgxAuthFirebaseUIModule,\n      providers:\n        [\n          {\n            provide: FIREBASE_OPTIONS,\n            useValue: configFactory\n          },\n          {\n            provide: FIREBASE_APP_NAME,\n            useFactory: appNameFactory\n          },\n          {provide: UserProvidedConfigToken, useValue: config},\n          {\n            provide: NgxAuthFirebaseUIConfigToken,\n            useFactory: ngxAuthFirebaseUIConfigFactory,\n            deps: [UserProvidedConfigToken]\n          },\n          AuthProcessService,\n          FirestoreSyncService,\n          LoggedInGuard\n        ]\n    };\n  }\n\n  registerProviderIcons() {\n    this.iconRegistry\n      .addSvgIcon('google', this.sanitizer.bypassSecurityTrustResourceUrl('/assets/mdi/google.svg'))\n      .addSvgIcon('apple', this.sanitizer.bypassSecurityTrustResourceUrl('/assets/mdi/apple.svg'))\n      .addSvgIcon('google-colored', this.sanitizer.bypassSecurityTrustResourceUrl('/assets/google.svg'))\n      .addSvgIcon('facebook', this.sanitizer.bypassSecurityTrustResourceUrl('/assets/mdi/facebook.svg'))\n      .addSvgIcon('twitter', this.sanitizer.bypassSecurityTrustResourceUrl('/assets/mdi/twitter.svg'))\n      .addSvgIcon('github', this.sanitizer.bypassSecurityTrustResourceUrl('/assets/mdi/github-circle.svg'))\n      .addSvgIcon('microsoft', this.sanitizer.bypassSecurityTrustResourceUrl('/assets/mdi/microsoft.svg'))\n      .addSvgIcon('yahoo', this.sanitizer.bypassSecurityTrustResourceUrl('/assets/mdi/yahoo.svg'))\n      .addSvgIcon('phone', this.sanitizer.bypassSecurityTrustResourceUrl('/assets/phone.svg'));\n  }\n}\n","/*\n * Public API Surface of ngx-auth-firebaseui\n */\n\nexport * from './lib/components';\nexport * from './lib/enums';\nexport * from './lib/interfaces';\nexport * from './lib/guards';\nexport * from './lib/tokens';\nexport * from './lib/services/auth-process.service';\nexport * from './lib/services/firestore-sync.service';\nexport * from './lib/ngx-auth-firebaseui.module';\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public-api';\n\nexport {NgxAuthFirebaseuiAnimations as ɵd} from './lib/animations';\nexport {EmailConfirmationComponent as ɵe} from './lib/components/email-confirmation/email-confirmation.component';\nexport {LegalityDialogParams as ɵf,NgxAuthFirebaseUIConfig as ɵc} from './lib/interfaces';\nexport {defaultAuthFirebaseUIConfig as ɵa,ngxAuthFirebaseUIConfigFactory as ɵb} from './lib/interfaces/config.interface';"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;IAAY;AAAZ,WAAY,QAAQ;IAClB,4BAAgB,CAAA;IAChB,mCAAuB,CAAA;IACvB,iCAAqB,CAAA;IACrB,+BAAmB,CAAA;IACnB,qCAAyB,CAAA;AAC3B,CAAC,EANW,QAAQ,KAAR,QAAQ;;MCIP,WAAW,GAAG;IACzB,KAAK,EAAE,OAAO;EACd;IAKW,oBAAoB,GAAjC,MAAa,oBAAoB;IAE/B,YAAmB,GAAqB;QAArB,QAAG,GAAH,GAAG,CAAkB;;KAEvC;;;;IAMM,kBAAkB,CAAC,GAAW;QACnC,OAAO,IAAI,CAAC,GAAG,CAAC,GAAG,CAAC,GAAG,WAAW,CAAC,KAAK,IAAI,GAAG,EAAE,CAAC,CAAC;KACpD;IAEM,cAAc,CAAC,GAAW;QAC/B,MAAM,OAAO,GAAuC,IAAI,CAAC,kBAAkB,CAAC,GAAG,CAAC,CAAC;QACjF,OAAO,OAAO,CAAC,MAAM,EAAE,CAAC;KACzB;IAGM,cAAc,CAAC,IAAc;;QAElC,MAAM,OAAO,GAAuC,IAAI,CAAC,kBAAkB,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;QACtF,MAAM,IAAI,GAAa;YACrB,GAAG,EAAE,IAAI,CAAC,GAAG;YACb,KAAK,EAAE,IAAI,CAAC,KAAK;YACjB,WAAW,EAAE,IAAI,CAAC,WAAW;YAC7B,QAAQ,EAAE,IAAI,CAAC,QAAQ;YACvB,WAAW,EAAE,IAAI,CAAC,WAAW;YAC7B,UAAU,EAAE,IAAI,CAAC,UAAU;SAC5B,CAAC;QACF,OAAO,OAAO,CAAC,GAAG,CAAC,IAAI,EAAE,EAAC,KAAK,EAAE,IAAI,EAAC,CAAC,CAAC;KACzC;EACF;;YA/ByB,gBAAgB;;;AAF7B,oBAAoB;IAHhC,UAAU,CAAC;QACV,UAAU,EAAE,MAAM;KACnB,CAAC;GACW,oBAAoB,CAiChC;;AC5CD;MAIa,4BAA4B,GAAG,IAAI,cAAc,CAA0B,8BAA8B,EAAE;AACxH;MACa,uBAAuB,GAAG,IAAI,cAAc,CAA0B,yBAAyB;;MCQ/F,oBAAoB,GAAG,IAAI,QAAQ,CAAC,IAAI,CAAC,oBAAoB,GAAG;MAChE,kBAAkB,GAAG,IAAI,QAAQ,CAAC,IAAI,CAAC,kBAAkB,GAAG;MAC5D,iBAAiB,GAAG,IAAI,QAAQ,CAAC,IAAI,CAAC,aAAa,CAAC,WAAW,EAAE;MACjE,mBAAmB,GAAG,IAAI,QAAQ,CAAC,IAAI,CAAC,mBAAmB,GAAG;MAC9D,kBAAkB,GAAG,IAAI,QAAQ,CAAC,IAAI,CAAC,kBAAkB,GAAG;MAC5D,qBAAqB,GAAG,IAAI,QAAQ,CAAC,IAAI,CAAC,aAAa,CAAC,eAAe,EAAE;MACzE,iBAAiB,GAAG,IAAI,QAAQ,CAAC,IAAI,CAAC,aAAa,CAAC,WAAW,EAAE;IAElE;AAAZ,WAAY,YAAY;IACtB,2BAAW,CAAA;IACX,uCAAuB,CAAA;IACvB,6CAA6B,CAAA;IAC7B,iCAAiB,CAAA;IACjB,+BAAe,CAAA;IACf,qCAAqB,CAAA;IACrB,mCAAmB,CAAA;IACnB,iCAAiB,CAAA;IACjB,uCAAuB,CAAA;IACvB,+BAAe,CAAA;IACf,2CAA2B,CAAA;AAC7B,CAAC,EAZW,YAAY,KAAZ,YAAY,QAYvB;IAKY,kBAAkB,GAA/B,MAAa,kBAAkB;IAyB7B,YACS,GAAoB,EACoC,MAA+B,EACtF,QAAqB,EACrB,gBAAsC,EACC,iBAAoC;QAJ5E,QAAG,GAAH,GAAG,CAAiB;QACoC,WAAM,GAAN,MAAM,CAAyB;QACtF,aAAQ,GAAR,QAAQ,CAAa;QACrB,qBAAgB,GAAhB,gBAAgB,CAAsB;QACC,sBAAiB,GAAjB,iBAAiB,CAAmB;QA7BrF,qBAAgB,GAAsB,IAAI,YAAY,EAAO,CAAC;QAC9D,mBAAc,GAAsB,IAAI,YAAY,EAAO,CAAC;;;QAIpD,WAAM,GAAG,IAAI,eAAe,CAAuB,IAAI,CAAC,CAAC;KA0BhE;IAzBD,IAAI,KAAK;QACP,OAAO,IAAI,CAAC,MAAM,CAAC,YAAY,EAAE,CAAC;KACnC;IAyBD,kBAAkB;QAChB,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC,IAA0B;YACjD,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;YACvB,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC;SAClB,CAAC,CAAC;KACJ;;;;;;IAOY,aAAa,CAAC,KAAa;;YACtC,IAAI;gBACF,OAAO,CAAC,GAAG,CAAC,2BAA2B,CAAC,CAAC;gBACzC,OAAO,MAAM,IAAI,CAAC,GAAG,CAAC,sBAAsB,CAAC,KAAK,CAAC,CAAC;aACrD;YAAC,OAAO,KAAK,EAAE;gBACd,OAAO,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC,CAAC;aAChC;SACF;KAAA;;;;;;;;;IAUY,UAAU,CAAC,QAAsB,EAAE,WAA0B;;YACxE,IAAI;gBACF,IAAI,YAAkC,CAAC;gBAEvC,QAAQ,QAAQ;oBACd,KAAK,YAAY,CAAC,SAAS;wBACzB,YAAY,IAAG,MAAM,IAAI,CAAC,GAAG,CAAC,iBAAiB,EAAoB,CAAA,CAAC;wBACpE,MAAM;oBAER,KAAK,YAAY,CAAC,gBAAgB;wBAChC,YAAY,IAAG,MAAM,IAAI,CAAC,GAAG,CAAC,0BAA0B,CAAC,WAAW,CAAC,KAAK,EAAE,WAAW,CAAC,QAAQ,CAAmB,CAAA,CAAC;wBACpH,MAAM;oBAER,KAAK,YAAY,CAAC,MAAM;wBACtB,YAAY,IAAG,MAAM,IAAI,CAAC,GAAG,CAAC,eAAe,CAAC,kBAAkB,CAAmB,CAAA,CAAC;wBACpF,MAAM;oBAER,KAAK,YAAY,CAAC,KAAK;wBACrB,YAAY,IAAG,MAAM,IAAI,CAAC,GAAG,CAAC,eAAe,CAAC,iBAAiB,CAAmB,CAAA,CAAC;wBACnF,MAAM;oBAER,KAAK,YAAY,CAAC,QAAQ;wBACxB,YAAY,IAAG,MAAM,IAAI,CAAC,GAAG,CAAC,eAAe,CAAC,oBAAoB,CAAmB,CAAA,CAAC;wBACtF,MAAM;oBAER,KAAK,YAAY,CAAC,OAAO;wBACvB,YAAY,IAAG,MAAM,IAAI,CAAC,GAAG,CAAC,eAAe,CAAC,mBAAmB,CAAmB,CAAA,CAAC;wBACrF,MAAM;oBAER,KAAK,YAAY,CAAC,MAAM;wBACtB,YAAY,IAAG,MAAM,IAAI,CAAC,GAAG,CAAC,eAAe,CAAC,kBAAkB,CAAmB,CAAA,CAAC;wBACpF,MAAM;oBAER,KAAK,YAAY,CAAC,SAAS;wBACzB,YAAY,IAAG,MAAM,IAAI,CAAC,GAAG,CAAC,eAAe,CAAC,qBAAqB,CAAmB,CAAA,CAAC;wBACvF,MAAM;oBAER,KAAK,YAAY,CAAC,KAAK;wBACrB,YAAY,IAAG,MAAM,IAAI,CAAC,GAAG,CAAC,eAAe,CAAC,iBAAiB,CAAmB,CAAA,CAAC;wBACnF,MAAM;oBAER,KAAK,YAAY,CAAC,WAAW;;wBAE3B,MAAM;oBAER;wBACE,MAAM,IAAI,KAAK,CAAC,GAAG,YAAY,CAAC,QAAQ,CAAC,oCAAoC,CAAC,CAAC;iBAClF;gBACD,MAAM,IAAI,CAAC,aAAa,CAAC,YAAY,CAAC,CAAC;aACxC;YAAC,OAAO,GAAG,EAAE;gBACZ,IAAI,CAAC,WAAW,CAAC,GAAG,CAAC,CAAC;aACvB;SACF;KAAA;;;;;;;;;IAUY,MAAM,CAAC,WAAmB,EAAE,WAAyB;;YAChE,IAAI;gBACF,MAAM,cAAc,GAAmB,MAAM,IAAI,CAAC,GAAG,CAAC,8BAA8B,CAAC,WAAW,CAAC,KAAK,EAAE,WAAW,CAAC,QAAQ,CAAC,CAAC;gBAC9H,MAAM,IAAI,GAAG,cAAc,CAAC,IAAI,CAAC;gBACjC,MAAM,IAAI,CAAC,aAAa,CAAC,WAAW,EAAE,IAAI,CAAC,QAAQ,CAAC,CAAC;gBAErD,IAAI,IAAI,CAAC,MAAM,CAAC,mBAAmB,EAAE;oBACnC,MAAM,IAAI,CAAC,gBAAgB;yBACxB,kBAAkB,CAAC,IAAI,CAAC,GAAG,CAAC;yBAC5B,GAAG,CAAC;wBACH,GAAG,EAAE,IAAI,CAAC,GAAG;wBACb,WAAW;wBACX,KAAK,EAAE,IAAI,CAAC,KAAK;wBACjB,QAAQ,EAAE,IAAI,CAAC,QAAQ;qBAChB,CAAC,CAAC;iBACd;gBAED,IAAI,IAAI,CAAC,MAAM,CAAC,uBAAuB,EAAE;oBACvC,MAAM,IAAI,CAAC,qBAAqB,EAAE,CAAC;iBACpC;;gBAGD,IAAI,CAAC,qBAAqB,GAAG,IAAI,CAAC;gBAClC,IAAI,CAAC,cAAc,GAAG,WAAW,CAAC,KAAK,CAAC;gBAExC,MAAM,IAAI,CAAC,aAAa,CAAC,cAAc,CAAC,CAAC;aAC1C;YAAC,OAAO,GAAG,EAAE;gBACZ,IAAI,CAAC,WAAW,CAAC,GAAG,CAAC,CAAC;aACvB;SACF;KAAA;IAEK,wBAAwB;;YAC5B,IAAI,CAAC,IAAI,CAAC,IAAI,EAAE;gBACd,OAAO,OAAO,CAAC,MAAM,CAAC,IAAI,KAAK,CAAC,mBAAmB,CAAC,CAAC,CAAC;aACvD;YACD,OAAO,IAAI,CAAC,IAAI,CAAC,qBAAqB,EAAE,CAAC;SAC1C;KAAA;IAEK,OAAO;;YACX,IAAI;gBACF,MAAM,IAAI,CAAC,GAAG,CAAC,OAAO,EAAE,CAAC;aAC1B;YAAC,OAAO,KAAK,EAAE;gBACd,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC,CAAC;aACzB;SACF;KAAA;;;;;;;;;IAUM,aAAa,CAAC,IAAY,EAAE,QAAgB;QACjD,OAAO,IAAI,CAAC,GAAG,CAAC,WAAW,CAAC,IAAI,CAAC,CAAC,IAAU;YAC1C,IAAI,CAAC,QAAQ,EAAE;gBACb,OAAO,IAAI,CAAC,aAAa,CAAC,EAAC,WAAW,EAAE,IAAI,EAAC,CAAC,CAAC;aAChD;iBAAM;gBACL,OAAO,IAAI,CAAC,aAAa,CAAC,EAAC,WAAW,EAAE,IAAI,EAAE,QAAQ,EAAC,CAAC,CAAC;aAC1D;SACF,CAAC,CAAC;KACJ;IAEM,aAAa,CAAC,IAAU;QAC7B,OAAO;YACL,GAAG,EAAE,IAAI,CAAC,GAAG;YACb,WAAW,EAAE,IAAI,CAAC,WAAW;YAC7B,KAAK,EAAE,IAAI,CAAC,KAAK;YACjB,WAAW,EAAE,IAAI,CAAC,WAAW;YAC7B,QAAQ,EAAE,IAAI,CAAC,QAAQ;YACvB,UAAU,EAAE,IAAI,CAAC,YAAY,CAAC,MAAM,GAAG,CAAC,GAAG,IAAI,CAAC,YAAY,CAAC,CAAC,CAAC,CAAC,UAAU,GAAG,IAAI;SAClF,CAAC;KACH;IAEM,eAAe;QACpB,OAAO,IAAI,CAAC,MAAM,CAAC,IAAI,CACrB,GAAG,CAAC,CAAC,IAA0B;YAC7B,IAAI,CAAC,IAAI,EAAE;gBACT,OAAO,IAAI,CAAC;aACb;iBAAM,IAAI,IAAI,CAAC,QAAQ,EAAE;gBACxB,OAAO,IAAI,CAAC,QAAQ,CAAC;aACtB;iBAAM,IAAI,IAAI,CAAC,aAAa,EAAE;gBAC7B,OAAO,IAAI,CAAC,YAAY,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC;aAC1C;iBAAM,IAAI,IAAI,CAAC,WAAW,EAAE;gBAC3B,OAAO,IAAI,CAAC,YAAY,CAAC,QAAQ,CAAC,GAAG,CAAC,CAAC;aACxC;iBAAM;gBACL,OAAO,IAAI,CAAC,YAAY,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC;aACzC;SACF,CAAC,CACH,CAAC;KACH;IAEM,YAAY,CAAC,KAAa;QAC/B,OAAO,eAAe,KAAK,MAAM,CAAC;KACnC;IAEM,qBAAqB;;KAE3B;IAEK,aAAa,CAAC,cAA8B;;YAChD,IAAI,CAAC,gBAAgB,CAAC,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,CAAC;YAChD,IAAI,IAAI,CAAC,MAAM,CAAC,mBAAmB,EAAE;gBACnC,IAAI;oBACF,MAAM,IAAI,CAAC,gBAAgB,CAAC,cAAc,CAAC,IAAI,CAAC,aAAa,CAAC,cAAc,CAAC,IAAI,CAAC,CAAC,CAAC;iBACrF;gBAAC,OAAO,CAAC,EAAE;oBACV,OAAO,CAAC,KAAK,CAAC,2DAA2D,CAAC,EAAE,CAAC,CAAC;iBAC/E;aACF;YACD,IAAI,IAAI,CAAC,MAAM,CAAC,yBAAyB,EAAE;gBACzC,MAAM,eAAe,GAAG,SAAS,cAAc,CAAC,IAAI,CAAC,WAAW,GAAG,cAAc,CAAC,IAAI,CAAC,WAAW,GAAG,EAAE,GAAG,CAAC;gBAC3G,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,oBAAoB,IAAI,eAAe,CAAC,CAAC;aAC9D;SACF;KAAA;IAED,WAAW,CAAC,KAAU;QACpB,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC,CAAC;QACxB,OAAO,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC;KACtB;;IAGD,cAAc;QACZ,OAAO,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,SAAS,CAAC,CAAC,IAAiB,KAAK,IAAI,IAAI,IAAI,CAAC,MAAM,EAAE,CAAC,CAAC;KAC1F;;;;IAKD,qBAAqB,CAAC,KAAU;;QAE9B,OAAO,KAAK,CAAC,QAAQ,EAAE,IAAI,kDAAkD,CAAC;KAC/E;;;;IAKD,SAAS,CAAC,OAAe;QACvB,IAAI,OAAO,EAAE;YACX,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,OAAO,EAAE,IAAI,CAAC,iBAAiB,CAAC,QAAQ,GAAG,IAAI,GAAG,IAAI,CAAC,CAAC;SAC5E;KACF;IAED,cAAc,CAAC,KAAU;QACvB,IAAI,IAAI,CAAC,MAAM,CAAC,uBAAuB,EAAE;YACvC,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,qBAAqB,CAAC,KAAK,CAAC,CAAC,CAAC;SACnD;KACF;IAED,WAAW,CAAC,KAAU;QACpB,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;QAChC,IAAI,CAAC,cAAc,CAAC,KAAK,CAAC,CAAC;KAC5B;EAEF;;YA7Pe,eAAe;4CAC1B,MAAM,SAAC,UAAU,CAAC,MAAM,4BAA4B,CAAC;YACpC,WAAW;YACH,oBAAoB;YACoB,iBAAiB,uBAAlF,MAAM,SAAC,6BAA6B;;;AA9B5B,kBAAkB;IAH9B,UAAU,CAAC;QACV,UAAU,EAAE,MAAM;KACnB,CAAC;IA4BG,WAAA,MAAM,CAAC,UAAU,CAAC,MAAM,4BAA4B,CAAC,CAAC,CAAA;IAGtD,WAAA,MAAM,CAAC,6BAA6B,CAAC,CAAA;GA9B7B,kBAAkB,CAuR9B;;ACpSD,MAAM,mBAAmB,GAAG;IAC1B,oBAAoB,EAAE,8BAA8B;IACpD,2BAA2B,EAAE,sCAAsC;QACjE,6FAA6F;IAC/F,qBAAqB,EAAE,SAAS;IAChC,4BAA4B,EAAE,8BAA8B;IAC5D,WAAW,EAAE,UAAU;IACvB,iCAAiC,EAAE,mEAAmE;CACvG,CAAC;IAQW,0BAA0B,GAAvC,MAAa,0BAA0B;IA0BrC,YAAmB,WAA+B,EAAU,MAAc,EAAU,iBAAoC;QAArG,gBAAW,GAAX,WAAW,CAAoB;QAAU,WAAM,GAAN,MAAM,CAAQ;QAAU,sBAAiB,GAAjB,iBAAiB,CAAmB;QAX9G,YAAO,GAAG,IAAI,YAAY,EAAE,CAAC;KAYtC;IAED,WAAW,CAAC,OAAsB;QAChC,IAAI,OAAO,CAAC,mBAAmB,IAAI,OAAO,CAAC,mBAAmB,CAAC,YAAY,IAAI,IAAI,EAAE;YACnF,IAAI,CAAC,mBAAmB,GAAG,IAAI,CAAC,eAAe,CAAC;YAChD,OAAO,CAAC,GAAG,CAAC,gCAAgC,EAAE,IAAI,CAAC,mBAAmB,CAAC,CAAC;SACzE;QACD,IAAI,CAAC,kBAAkB,GAAG,IAAI,CAAC,qBAAqB,EAAE,CAAC;KACxD;IAED,QAAQ;QACN,IAAI,CAAC,IAAI,CAAC,mBAAmB,EAAE;YAC7B,OAAO,CAAC,GAAG,CAAC,4BAA4B,CAAC,CAAC;YAC1C,IAAI,CAAC,mBAAmB,GAAG,IAAI,CAAC,eAAe,CAAC;SACjD;QACD,IAAI,CAAC,kBAAkB,GAAG,IAAI,CAAC,qBAAqB,EAAE,CAAC;QACvD,OAAO,CAAC,GAAG,CAAC,sBAAsB,EAAE,IAAI,CAAC,mBAAmB,CAAC,CAAC;QAC9D,OAAO,CAAC,GAAG,CAAC,qBAAqB,EAAE,IAAI,CAAC,kBAAkB,CAAC,CAAC;KAC7D;IAEK,QAAQ;;YACZ,IAAI;gBACF,MAAM,IAAI,CAAC,WAAW,CAAC,cAAc,EAAE,CAAC;gBACxC,MAAM,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC;aAC9C;YAAC,OAAO,KAAK,EAAE;gBACd,IAAI,CAAC,WAAW,CAAC,WAAW,CAAC,KAAK,CAAC,CAAC;aACrC;SACF;KAAA;IAEK,wBAAwB;;YAC5B,IAAI;gBACF,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC;gBACtB,IAAI,CAAC,iBAAiB,CAAC,YAAY,EAAE,CAAC;gBACtC,MAAM,IAAI,CAAC,WAAW,CAAC,wBAAwB,EAAE,CAAC;gBAClD,IAAI,CAAC,WAAW,CAAC,SAAS,CAAC,IAAI,CAAC,kBAAkB,CAAC,iCAAiC,CAAC,CAAC;aACvF;YAAC,OAAO,KAAK,EAAE;gBACd,IAAI,CAAC,WAAW,CAAC,WAAW,CAAC,KAAK,CAAC,CAAC;aACrC;oBAAS;gBACR,IAAI,CAAC,SAAS,GAAG,KAAK,CAAC;gBACvB,IAAI,CAAC,iBAAiB,CAAC,YAAY,EAAE,CAAC;aACvC;SACF;KAAA;IAEO,qBAAqB;QAC3B,OAAO;YACL,KAAK,EAAE,IAAI,CAAC,KAAK;YACjB,SAAS,EAAE,IAAI,CAAC,SAAS;YACzB,oBAAoB,EAAE,IAAI,CAAC,oBAAoB,IAAI,mBAAmB,CAAC,oBAAoB;YAC3F,2BAA2B,EAAE,IAAI,CAAC,2BAA2B,IAAI,mBAAmB,CAAC,2BAA2B;YAChH,qBAAqB,EAAE,IAAI,CAAC,qBAAqB,IAAI,mBAAmB,CAAC,qBAAqB;YAC9F,4BAA4B,EAAE,IAAI,CAAC,4BAA4B,IAAI,mBAAmB,CAAC,4BAA4B;YACnH,WAAW,EAAE,IAAI,CAAC,WAAW,IAAI,mBAAmB,CAAC,WAAW;YAChE,iCAAiC,EAAE,IAAI,CAAC,iCAAiC,IAAI,mBAAmB,CAAC,iCAAiC;SACnI,CAAC;KACH;EACF;;YAxDiC,kBAAkB;YAAkB,MAAM;YAA6B,iBAAiB;;AAxB/G;IAAR,KAAK,EAAE;yDAAe;AACd;IAAR,KAAK,EAAE;6DAAmB;AAElB;IAAR,KAAK,EAAE;wEAA8B;AAC7B;IAAR,KAAK,EAAE;+EAAqC;AACpC;IAAR,KAAK,EAAE;yEAA+B;AAC9B;IAAR,KAAK,EAAE;gFAAsC;AACrC;IAAR,KAAK,EAAE;+DAAqB;AACpB;IAAR,KAAK,EAAE;qFAA2C;AAG1C;IAAR,KAAK,EAAE;4DAA4B;AAE1B;IAAT,MAAM,EAAE;2DAA8B;AASU;IAAhD,SAAS,CAAC,oBAAoB,EAAE,EAAC,MAAM,EAAE,IAAI,EAAC,CAAC;mEAAmC;AAxBxE,0BAA0B;IANtC,SAAS,CAAC;QACT,QAAQ,EAAE,wCAAwC;QAClD,6qDAAkD;QAElD,eAAe,EAAE,uBAAuB,CAAC,MAAM;;KAChD,CAAC;GACW,0BAA0B,CAkFtC;;ICnHY,uBAAuB,GAApC,MAAa,uBAAuB;IAKlC,YAAmB,SAAgD,EACvB,IAA0B;QADnD,cAAS,GAAT,SAAS,CAAuC;QACvB,SAAI,GAAJ,IAAI,CAAsB;;QAI9D,gCAA2B,GAAG,KAAK,CAAC;KAH3C;IAKD,IAAI,0BAA0B;QAC5B,IAAI,IAAI,CAAC,IAAI,CAAC,MAAM,IAAI,IAAI,CAAC,IAAI,CAAC,gBAAgB,EAAE;YAClD,IAAI,CAAC,2BAA2B,GAAG,EAAE,IAAI,CAAC,QAAQ,IAAI,IAAI,CAAC,kBAAkB,CAAC,CAAC;SAChF;aAAM,IAAI,IAAI,CAAC,IAAI,CAAC,MAAM,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,gBAAgB,EAAE;YAC1D,IAAI,CAAC,2BAA2B,GAAG,CAAC,IAAI,CAAC,QAAQ,CAAC;SACnD;aAAM,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,MAAM,IAAI,IAAI,CAAC,IAAI,CAAC,gBAAgB,EAAE;YAC1D,IAAI,CAAC,2BAA2B,GAAG,CAAC,IAAI,CAAC,kBAAkB,CAAC;SAC7D;QACD,OAAO,IAAI,CAAC,2BAA2B,CAAC;KACzC;IAED,WAAW;QACT,MAAM,MAAM,GAAyB;YACnC,OAAO,EAAE,CAAC,IAAI,CAAC,0BAA0B;YACzC,YAAY,EAAE,IAAI,CAAC,IAAI,CAAC,YAAY;SACrC,CAAC;QACF,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC;KAC9B;EAEF;;YA1B+B,YAAY;4CAC7B,MAAM,SAAC,eAAe;;AANxB,uBAAuB;IALnC,SAAS,CAAC;QACT,QAAQ,EAAE,qCAAqC;QAC/C,6lCAA+C;;KAEhD,CAAC;IAOa,WAAA,MAAM,CAAC,eAAe,CAAC,CAAA;GANzB,uBAAuB,CA+BnC;;ACtCD,MAAM,eAAe,GAAG,SAAS,CAC/B;IACE,KAAK,CAAC;QACJ,OAAO,EAAE,aAAa;QACtB,SAAS,EAAE,mDAAmD;KAC/D,CAAC;IACF,OAAO,CAAC,uDAAuD,EAAE,KAAK,CAAC,GAAG,CAAC,CAAC;CAC7E,EACD;IACE,MAAM,EAAE;QACN,QAAQ,EAAE,OAAO;QACjB,KAAK,EAAE,KAAK;QACZ,OAAO,EAAE,GAAG;QACZ,KAAK,EAAE,GAAG;QACV,CAAC,EAAE,GAAG;QACN,CAAC,EAAE,GAAG;QACN,CAAC,EAAE,GAAG;KACP;CACF,CACF,CAAC;MAEW,2BAA2B,GAAG;IACzC,OAAO,CAAC,SAAS,EAAE,CAAC,UAAU,CAAC,WAAW,EAAE,CAAC,YAAY,CAAC,eAAe,CAAC,CAAC,CAAC,CAAC,CAAC;IAE9E,OAAO,CAAC,gBAAgB,EAAE;QACxB,KAAK,CAAC,IAAI,EAAE,KAAK,CAAC,GAAG,CAAC,CAAC;QACvB,KAAK,CAAC,KAAK,EAAE,KAAK,CAAC,GAAG,CAAC,CAAC;QACxB,KAAK,CAAC,KAAK,EAAE,KAAK,CAAC,GAAG,CAAC,CAAC;QAExB,UAAU,CAAC,YAAY,EAAE,KAAK,CAAC,IAAI,EAAE,CAAC,OAAO,CAAC,MAAM,EAAE,CAAC,YAAY,EAAE,CAAC,CAAC,CAAC,EAAE,EAAC,QAAQ,EAAE,IAAI,EAAC,CAAC,CAAC;QAC5F,UAAU,CAAC,aAAa,EAAE,KAAK,CAAC,IAAI,EAAE,CAAC,OAAO,CAAC,OAAO,EAAE,CAAC,YAAY,EAAE,CAAC,CAAC,CAAC,EAAE,EAAC,QAAQ,EAAE,IAAI,EAAC,CAAC,CAAC;QAC9F,UAAU,CAAC,aAAa,EAAE,KAAK,CAAC,IAAI,EAAE,CAAC,OAAO,CAAC,OAAO,EAAE,CAAC,YAAY,EAAE,CAAC,CAAC,CAAC,EAAE,EAAC,QAAQ,EAAE,IAAI,EAAC,CAAC,CAAC;KAC/F,CAAC;;;MCUS,WAAW,GAAG,IAAI,MAAM,CAAC,CAAC,gEAAgE;IACrG,uDAAuD;IACvD,sCAAsC;IACtC,iBAAiB,CAAC,CAAC,IAAI,CAAC,EAAE,CAAC,EAAE;AAE/B;MACa,kBAAkB,GAAG,IAAI,MAAM,CAAC,CAAC,iGAAiG,CAAC,CAAC,IAAI,CAAC,EAAE,CAAC,EAAE;IAS9I,aAAa,GAA1B,MAAa,aAAa;IAsHxB;;IAE+B,UAAkB,EACgB,MAA+B,EACvF,IAAqB,EACrB,WAA+B,EAC/B,MAAiB,EAChB,cAA8B,EAC9B,iBAAoC;QANf,eAAU,GAAV,UAAU,CAAQ;QACgB,WAAM,GAAN,MAAM,CAAyB;QACvF,SAAI,GAAJ,IAAI,CAAiB;QACrB,gBAAW,GAAX,WAAW,CAAoB;QAC/B,WAAM,GAAN,MAAM,CAAW;QAChB,mBAAc,GAAd,cAAc,CAAgB;QAC9B,sBAAiB,GAAjB,iBAAiB,CAAmB;;QAvHrC,cAAS,GAAkC,YAAY,CAAC,GAAG,CAAC;QAK5D,wBAAmB,GAAG,IAAI,CAAC;QAC3B,yBAAoB,GAAG,IAAI,CAAC;QAC5B,iBAAY,GAAG,IAAI,CAAC;QAanB,sBAAiB,GAAoC,IAAI,YAAY,EAAE,CAAC;;QAGzE,qBAAgB,GAAG,IAAI,CAAC;QACxB,8BAAyB,GAAG,IAAI,CAAC;QACjC,8BAAyB,GAAG,IAAI,CAAC;QACjC,oBAAe,GAAG,IAAI,CAAC;QACvB,0BAAqB,GAAG,IAAI,CAAC;;QAK5B,sBAAiB,GAAyB,IAAI,YAAY,EAAE,CAAC;QAY9D,gBAAW,GAAG,UAAU,CAAC;;;QAIzB,yBAAoB,GAAG,kCAAkC,CAAC;QAC1D,2BAAsB,GAAG,kCAAkC,CAAC;QAC5D,mCAA8B,GAAG,2CAA2C,CAAC;QAC7E,kCAA6B,GAAG,qCAAqC,CAAC;QACtE,kCAA6B,GAAG,OAAO,CAAC;QACxC,kCAA6B,GAAG,kDAAkD,CAAC;;QAGnF,kBAAa,GAAG,SAAS,CAAC;QAC1B,wBAAmB,GAAG,YAAY,CAAC;QACnC,oBAAe,GAAG,QAAQ,CAAC;QAC3B,6BAAwB,GAAG,mBAAmB,CAAC;;QAG/C,aAAQ,GAAG,MAAM,CAAC;QAClB,0BAAqB,GAAG,kBAAkB,CAAC;QAC3C,2BAAsB,GAAG,wBAAwB,CAAC;QAClD,2BAAsB,GAAG,uBAAuB,CAAC;QAEjD,cAAS,GAAG,QAAQ,CAAC;QACrB,2BAAsB,GAAG,oBAAoB,CAAC;QAC9C,0BAAqB,GAAG,qCAAqC,CAAC;QAE9D,iBAAY,GAAG,UAAU,CAAC;QAC1B,8BAAyB,GAAG,sBAAsB,CAAC;QACnD,+BAA0B,GAAG,4BAA4B,CAAC;QAC1D,+BAA0B,GAAG,2BAA2B,CAAC;;QAGzD,oBAAe,GAAG,UAAU,CAAC;QAC7B,0BAAqB,GAAG,cAAc,CAAC;QACvC,uBAAkB,GAAG,UAAU,CAAC;QAChC,oBAAe,GAAG,mBAAmB,CAAC;;QAGtC,2BAAsB,GAAG,8BAA8B,CAAC;;QAExD,0BAAqB,GAAG,wIAAwI,CAAC;QAE1K,iBAAY,GAAG,YAAY,CAAC;QAQ5B,wBAAmB,GAAG,KAAK,CAAC;QAE5B,cAAS,GAAG,KAAK,CAAC;QAGlB,kBAAa,GAAG,YAAY,CAAC;QAqB3B,IAAI,CAAC,SAAS,GAAG,WAAW,CAAC,gBAAgB,CAAC;QAC9C,IAAI,CAAC,OAAO,GAAG,WAAW,CAAC,cAAc,CAAC;KAC3C;IAED,IAAI,KAAK;QACP,OAAO,IAAI,CAAC,mBAAmB,GAAG,MAAM,GAAG,SAAS,CAAC;KACtD;IAEM,QAAQ;QACb,IAAI,iBAAiB,CAAC,IAAI,CAAC,UAAU,CAAC,EAAE;YACtC,IAAI,CAAC,mBAAmB,GAAG,IAAI,CAAC,OAAO,CAAC,SAAS,CAAC,MAAM,IAAI,CAAC,mBAAmB,GAAG,IAAI,CAAC,CAAC;SAC1F;QACD,IAAI,CAAC,GAAG,GAAG,IAAI,CAAC,GAAG,IAAI,IAAI,GAAG,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,GAAG,EAAE,IAAI,CAAC,MAAM,CAAC,iBAAiB,CAAC,GAAG,IAAI,CAAC,MAAM,CAAC,iBAAiB,CAAC;QAChH,IAAI,CAAC,GAAG,GAAG,IAAI,CAAC,GAAG,IAAI,IAAI,GAAG,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,GAAG,EAAE,IAAI,CAAC,MAAM,CAAC,iBAAiB,CAAC,GAAG,IAAI,CAAC,MAAM,CAAC,iBAAiB,CAAC;QAEhH,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,aAAa,EAAE,CAAC;QAEtC,IAAI,CAAC,0BAA0B,EAAE,CAAC;;QAElC,IAAI,CAAC,2BAA2B,EAAE,CAAC;QACnC,IAAI,CAAC,2BAA2B,EAAE,CAAC;QACnC,IAAI,CAAC,kCAAkC,EAAE,CAAC;KAC3C;IAED,eAAe;QACb,IAAI,IAAI,CAAC,gBAAgB,EAAE;YACzB,IAAI,CAAC,gBAAgB,CAAC,iBAAiB,CAAC,SAAS,CAAC,CAAC,QAAgB;gBACjE,IAAI,CAAC,iBAAiB,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;aACvC,CAAC,CAAC;SACJ;KACF;IAED,WAAW,CAAC,OAAsB;QAChC,IAAI,OAAO,CAAC,oBAAoB,IAAI,OAAO,CAAC,kBAAkB,EAAE;YAC9D,IAAI,CAAC,0BAA0B,EAAE,CAAC;SACnC;QACD,IAAI,OAAO,CAAC,GAAG,EAAE;YACf,IAAI,CAAC,GAAG,GAAG,IAAI,CAAC,GAAG,IAAI,IAAI,GAAG,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,GAAG,EAAE,IAAI,CAAC,MAAM,CAAC,iBAAiB,CAAC,GAAG,IAAI,CAAC,MAAM,CAAC,iBAAiB,CAAC;SACjH;QACD,IAAI,OAAO,CAAC,GAAG,EAAE;YACf,IAAI,CAAC,GAAG,GAAG,IAAI,CAAC,GAAG,IAAI,IAAI,GAAG,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,GAAG,EAAE,IAAI,CAAC,MAAM,CAAC,iBAAiB,CAAC,GAAG,IAAI,CAAC,MAAM,CAAC,iBAAiB,CAAC;SACjH;QACD,IAAI,OAAO,CAAC,SAAS,EAAE;YACrB,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,aAAa,EAAE,CAAC;SACvC;KACF;IAED,WAAW;QACT,IAAI,IAAI,CAAC,mBAAmB,EAAE;YAC5B,IAAI,CAAC,mBAAmB,CAAC,WAAW,EAAE,CAAC;SACxC;KACF;IAED,WAAW,CAAC,KAAwB;QAClC,IAAI,CAAC,iBAAiB,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;QACnC,IAAI,CAAC,QAAQ,GAAG,KAAK,CAAC,KAAK,CAAC;KAC7B;IAEK,OAAO;;YACX,IAAI;gBACF,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC;gBACtB,IAAI,CAAC,iBAAiB,CAAC,YAAY,EAAE,CAAC;gBACtC,MAAM,IAAI,CAAC,WAAW,CAAC,OAAO,EAAE,CAAC;aAClC;oBAAS;gBACR,IAAI,CAAC,SAAS,GAAG,KAAK,CAAC;gBACvB,IAAI,CAAC,QAAQ,GAAG,CAAC,CAAC;gBAClB,IAAI,CAAC,iBAAiB,CAAC,YAAY,EAAE,CAAC;aACvC;SACF;KAAA;IAEK,MAAM;;YACV,IAAI,CAAC,IAAI,CAAC,eAAe,CAAC,KAAK,EAAE;gBAC/B,OAAO;aACR;YACD,IAAI;gBACF,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC;gBACtB,IAAI,CAAC,iBAAiB,CAAC,YAAY,EAAE,CAAC;gBACtC,MAAM,IAAI,CAAC,WAAW,CAAC,UAAU,CAAC,IAAI,CAAC,aAAa,CAAC,gBAAgB,EAAE;oBACrE,KAAK,EAAE,IAAI,CAAC,eAAe,CAAC,KAAK,CAAC,KAAK;oBACvC,QAAQ,EAAE,IAAI,CAAC,eAAe,CAAC,KAAK,CAAC,QAAQ;iBAC9C,CAAC,CAAC;aACJ;oBAAS;gBACR,IAAI,CAAC,SAAS,GAAG,KAAK,CAAC;gBACvB,IAAI,CAAC,iBAAiB,CAAC,YAAY,EAAE,CAAC;aACvC;SACF;KAAA;IAED,0BAA0B;QACxB,IAAI,CAAC,WAAW,CAAC,oBAAoB,GAAG,IAAI,CAAC,oBAAoB,CAAC;QAClE,IAAI,CAAC,WAAW,CAAC,kBAAkB,GAAG,IAAI,CAAC,kBAAkB,CAAC;KAC/D;IAED,uBAAuB;QACrB,IAAI,CAAC,mBAAmB,GAAG,IAAI,CAAC;QAChC,IAAI,CAAC,QAAQ,GAAG,CAAC,CAAC;QAClB,IAAI,CAAC,iBAAiB,CAAC,YAAY,EAAE,CAAC;KACvC;IAED,kBAAkB,CAAC,YAA2B;QAC5C,IAAI,IAAI,CAAC,MAAM,IAAI,IAAI,CAAC,gBAAgB,EAAE;YACxC,MAAM,MAAM,GAAyB;gBACnC,MAAM,EAAE,IAAI,CAAC,MAAM;gBACnB,gBAAgB,EAAE,IAAI,CAAC,gBAAgB;gBACvC,YAAY;aACb,CAAC;YAEF,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,uBAAuB,EAAE,EAAC,IAAI,EAAE,MAAM,EAAC,CAAC,CAAC;YAC3E,IAAI,CAAC,SAAS,CAAC,WAAW,EAAE,CAAC,SAAS,CAAC,CAAC,MAA4B;gBAClE,IAAI,MAAM,IAAI,MAAM,CAAC,OAAO,EAAE;oBAC5B,IAAI,CAAC,sBAAsB,CAAC,MAAM,CAAC,YAAY,CAAC,CAAC,IAAI,CAAC,MAAM,IAAI,CAAC,eAAe,CAAC,KAAK,EAAE,CAAC,CAAC;iBAC3F;gBACD,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC;aACvB,CAAC,CAAC;SACJ;aAAM;YACL,IAAI,CAAC,sBAAsB,CAAC,YAAY,CAAC,CAAC,IAAI,CAAC,MAAM,IAAI,CAAC,eAAe,CAAC,KAAK,EAAE,CAAC,CAAC;SACpF;KACF;IAEK,MAAM;;YACV,IAAI;gBACF,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC;gBACtB,IAAI,CAAC,iBAAiB,CAAC,YAAY,EAAE,CAAC;gBACtC,OAAO,MAAM,IAAI,CAAC,WAAW,CAAC,MAAM,CAClC,IAAI,CAAC,eAAe,CAAC,KAAK,CAAC,IAAI,EAC/B;oBACE,KAAK,EAAE,IAAI,CAAC,eAAe,CAAC,KAAK,CAAC,KAAK;oBACvC,QAAQ,EAAE,IAAI,CAAC,eAAe,CAAC,KAAK,CAAC,QAAQ;iBAC9C,CACF,CAAC;aACH;oBAAS;gBACR,IAAI,CAAC,SAAS,GAAG,KAAK,CAAC;gBACvB,IAAI,CAAC,iBAAiB,CAAC,YAAY,EAAE,CAAC;aACvC;SACF;KAAA;IAEK,iBAAiB;;YACrB,IAAI;gBACF,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC;gBACtB,IAAI,CAAC,iBAAiB,CAAC,YAAY,EAAE,CAAC;gBACtC,MAAM,IAAI,CAAC,WAAW,CAAC,UAAU,CAAC,IAAI,CAAC,YAAY,CAAC,SAAS,CAAC,CAAC;aAChE;oBAAS;gBACR,IAAI,CAAC,SAAS,GAAG,KAAK,CAAC;gBACvB,IAAI,CAAC,iBAAiB,CAAC,YAAY,EAAE,CAAC;aACvC;SACF;KAAA;IAGD,aAAa;QACX,IAAI,CAAC,WAAW,CAAC,aAAa,CAAC,IAAI,CAAC,6BAA6B,CAAC,KAAK,CAAC;aACrE,IAAI,CAAC;YACJ,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC;;YAEtB,IAAI,CAAC,iBAAiB,CAAC,YAAY,EAAE,CAAC;SACvC,CAAC,CAAC;KACN;IAEO,aAAa;QACnB,OAAO,IAAI,CAAC,cAAc,CAAC,QAAQ,CAAC,WAAW,CAAC,WAAW,IAAI,IAAI,CAAC,SAAS,IAAI,GAAG,CAAC;KACtF;IAEO,2BAA2B;QACjC,IAAI,CAAC,eAAe,GAAG,IAAI,SAAS,CAAC,EAAE,CAAC,CAAC;QACzC,IAAI,CAAC,eAAe,CAAC,eAAe,CAAC,OAAO,EAAE,IAAI,CAAC,sBAAsB,GAAG,IAAI,WAAW,CAAC,EAAE,EAC5F;YACE,UAAU,CAAC,QAAQ;YACnB,UAAU,CAAC,OAAO,CAAC,WAAW,CAAC;SAChC,CAAC,CAAC,CAAC;QACN,IAAI,CAAC,eAAe,CAAC,eAAe,CAAC,UAAU,EAAE,IAAI,CAAC,wBAAwB,GAAG,IAAI,WAAW,CAAC,EAAE,EACjG;YACE,UAAU,CAAC,QAAQ;YACnB,UAAU,CAAC,SAAS,CAAC,IAAI,CAAC,GAAG,CAAC;YAC9B,UAAU,CAAC,SAAS,CAAC,IAAI,CAAC,GAAG,CAAC;SAC/B,CAAC,CAAC,CAAC;KACP;IAEO,2BAA2B;QACjC,IAAI,CAAC,eAAe,GAAG,IAAI,SAAS,CAAC;YACnC,IAAI,EAAE,IAAI,CAAC,oBAAoB,GAAG,IAAI,WAAW,CAAC,EAAE,EAClD;gBACE,UAAU,CAAC,QAAQ;gBACnB,UAAU,CAAC,SAAS,CAAC,IAAI,CAAC,MAAM,CAAC,aAAa,CAAC;gBAC/C,UAAU,CAAC,SAAS,CAAC,IAAI,CAAC,MAAM,CAAC,aAAa,CAAC;aAChD,CAAC;YACJ,KAAK,EAAE,IAAI,CAAC,qBAAqB,GAAG,IAAI,WAAW,CAAC,EAAE,EACpD;gBACE,UAAU,CAAC,QAAQ;gBACnB,UAAU,CAAC,OAAO,CAAC,WAAW,CAAC;aAChC,CAAC;YACJ,QAAQ,EAAE,IAAI,CAAC,wBAAwB,GAAG,IAAI,WAAW,CAAC,EAAE,EAC1D;gBACE,UAAU,CAAC,QAAQ;gBACnB,UAAU,CAAC,SAAS,CAAC,IAAI,CAAC,GAAG,CAAC;gBAC9B,UAAU,CAAC,SAAS,CAAC,IAAI,CAAC,GAAG,CAAC;aAC/B,CAAC;SACL,CAAC,CAAC;KACJ;IAEO,kCAAkC;QACxC,IAAI,CAAC,sBAAsB,GAAG,IAAI,SAAS,CAAC;YAC1C,KAAK,EAAE,IAAI,CAAC,6BAA6B,GAAG,IAAI,WAAW,CAAC,EAAE,EAC5D;gBACE,UAAU,CAAC,QAAQ;gBACnB,UAAU,CAAC,OAAO,CAAC,WAAW,CAAC;aAChC,CAAC;SACL,CAAC,CAAC;KACJ;IAEO,sBAAsB,CAAC,YAA2B;QACxD,IAAI,YAAY,KAAK,IAAI,CAAC,YAAY,CAAC,SAAS,EAAE;YAChD,OAAO,IAAI,CAAC,iBAAiB,EAAE,CAAC;SACjC;QACD,OAAO,IAAI,CAAC,MAAM,EAAE,CAAC;KACtB;EAEF;;YA9N4C,MAAM,uBAA9C,MAAM,SAAC,WAAW;4CAClB,MAAM,SAAC,UAAU,CAAC,MAAM,4BAA4B,CAAC;YACzC,eAAe;YACR,kBAAkB;YACvB,SAAS;YACA,cAAc;YACX,iBAAiB;;AA5HL;IAAxC,SAAS,CAAC,WAAW,EAAE,EAAC,MAAM,EAAE,KAAK,EAAC,CAAC;kDAA0B;AACR;IAAzD,SAAS,CAAC,4BAA4B,EAAE,EAAC,MAAM,EAAE,KAAK,EAAC,CAAC;uDAAgD;AAIhG;IAAR,KAAK,EAAE;gDAA6D;AAC5D;IAAR,KAAK,EAAE;qDAAuB;AAEtB;IAAR,KAAK,EAAE;iDAAoC;AACnC;IAAR,KAAK,EAAE;+CAAyB;AACxB;IAAR,KAAK,EAAE;0DAA4B;AAC3B;IAAR,KAAK,EAAE;2DAA6B;AAC5B;IAAR,KAAK,EAAE;mDAAqB;AACpB;IAAR,KAAK,EAAE;6CAAgB;AACf;IAAR,KAAK,EAAE;uDAA0B;AACzB;IAAR,KAAK,EAAE;gDAAmB;AAClB;IAAR,KAAK,EAAE;2DAA8B;AAC7B;IAAR,KAAK,EAAE;yDAA4B;AAC3B;IAAR,KAAK,EAAE;wEAA2C;AAIzC;IAAT,MAAM,EAAE;gDAAgB;AAEf;IAAT,MAAM,EAAE;8CAAc;AACb;IAAT,MAAM,EAAE;wDAAyE;AAGzE;IAAR,KAAK,EAAE;uDAAyB;AACxB;IAAR,KAAK,EAAE;gEAAkC;AACjC;IAAR,KAAK,EAAE;gEAAkC;AACjC;IAAR,KAAK,EAAE;sDAAwB;AACvB;IAAR,KAAK,EAAE;4DAA8B;AAC7B;IAAR,KAAK,EAAE;0CAAa;AACZ;IAAR,KAAK,EAAE;0CAAa;AACZ;IAAR,KAAK,EAAE;sDAAyB;AAEvB;IAAT,MAAM,EAAE;wDAA8D;AAI9D;IAAR,KAAK,EAAE;0DAAuC;AAItC;IAAR,KAAK,EAAE;2DAA8B;AAC7B;IAAR,KAAK,EAAE;kEAAqC;AACpC;IAAR,KAAK,EAAE;4DAA+B;AAC9B;IAAR,KAAK,EAAE;mEAAsC;AACrC;IAAR,KAAK,EAAE;kDAA0B;AAIzB;IAAR,KAAK,EAAE;2DAA2D;AAC1D;IAAR,KAAK,EAAE;6DAA6D;AAC5D;IAAR,KAAK,EAAE;qEAA8E;AAC7E;IAAR,KAAK,EAAE;oEAAuE;AACtE;IAAR,KAAK,EAAE;oEAAyC;AACxC;IAAR,KAAK,EAAE;oEAAoF;AAGnF;IAAR,KAAK,EAAE;oDAA2B;AAC1B;IAAR,KAAK,EAAE;0DAAoC;AACnC;IAAR,KAAK,EAAE;sDAA4B;AAC3B;IAAR,KAAK,EAAE;+DAAgD;AAG/C;IAAR,KAAK,EAAE;+CAAmB;AAClB;IAAR,KAAK,EAAE;4DAA4C;AAC3C;IAAR,KAAK,EAAE;6DAAmD;AAClD;IAAR,KAAK,EAAE;6DAAkD;AAEjD;IAAR,KAAK,EAAE;gDAAsB;AACrB;IAAR,KAAK,EAAE;6DAA+C;AAC9C;IAAR,KAAK,EAAE;4DAA+D;AAE9D;IAAR,KAAK,EAAE;mDAA2B;AAC1B;IAAR,KAAK,EAAE;gEAAoD;AACnD;IAAR,KAAK,EAAE;iEAA2D;AAC1D;IAAR,KAAK,EAAE;iEAA0D;AAGzD;IAAR,KAAK,EAAE;sDAA8B;AAC7B;IAAR,KAAK,EAAE;4DAAwC;AACvC;IAAR,KAAK,EAAE;yDAAiC;AAChC;IAAR,KAAK,EAAE;sDAAuC;AAGtC;IAAR,KAAK,EAAE;6DAAyD;AAExD;IAAR,KAAK,EAAE;4DAAkK;AA5F/J,aAAa;IAPzB,SAAS,CAAC;QACT,QAAQ,EAAE,qBAAqB;QAC/B,82cAAkC;QAElC,UAAU,EAAE,2BAA2B;QACvC,eAAe,EAAE,uBAAuB,CAAC,MAAM;;KAChD,CAAC;IAyHG,WAAA,MAAM,CAAC,WAAW,CAAC,CAAA;IACnB,WAAA,MAAM,CAAC,UAAU,CAAC,MAAM,4BAA4B,CAAC,CAAC,CAAA;GAzH9C,aAAa,CAsVzB;;IC9XY,gCAAgC,GAA7C,MAAa,gCAAgC;IAkC3C,YAAmB,GAAoB,EACpB,MAAiB;QADjB,QAAG,GAAH,GAAG,CAAiB;QACpB,WAAM,GAAN,MAAM,CAAW;QAhCpC,WAAM,GAAyB,SAAS,CAAC;QAGzC,cAAS,GAAG,IAAI,CAAC;QAMjB,mBAAc,GAAG,IAAI,CAAC;QAGtB,qBAAgB,GAAG,IAAI,CAAC;QAGxB,mBAAc,GAAG,IAAI,CAAC;QAGtB,gBAAW,GAAG,SAAS,CAAC;QAGxB,gBAAW,GAAG,UAAU,CAAC;;QAIzB,cAAS,GAAuB,IAAI,YAAY,EAAE,CAAC;KAQlD;IAED,QAAQ;QACN,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC;QAC3B,IAAI,CAAC,KAAK,CAAC,SAAS,CAAC,CAAC,IAAU;YAC9B,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC;YACjB,IAAI,CAAC,mBAAmB,GAAG,IAAI,GAAG,IAAI,CAAC,sBAAsB,CAAC,IAAI,CAAC,WAAW,CAAC,GAAG,IAAI,CAAC;SACxF,CAAC,CAAC;KACJ;IAED,sBAAsB,CAAC,WAA0B;QAC/C,IAAI,CAAC,WAAW,EAAE;YAChB,OAAO,IAAI,CAAC;SACb;QACD,MAAM,cAAc,GAAqB,WAAW,CAAC,KAAK,CAAC,OAAO,CAAC,IAAI,EAAE,CAAC;QAC1E,MAAM,QAAQ,GAAG,CAAC,CAAC,cAAc,CAAC,KAAK,EAAE,IAAI,EAAE,KAAK,cAAc,CAAC,GAAG,EAAE,IAAI,EAAE,CAAC,EAAE,WAAW,EAAE,CAAC;QAC/F,OAAO,QAAQ,CAAC;KACjB;IAED,WAAW;QACT,MAAM,SAAS,GAAG,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,aAAa,CAAC,CAAC;QAClD,MAAM,QAAQ,GAAG,SAAS,CAAC,iBAAiB,CAAC;QAC7C,QAAQ,CAAC,gBAAgB,GAAG,IAAI,CAAC,gBAAgB,CAAC;QAClD,QAAQ,CAAC,cAAc,GAAG,IAAI,CAAC,cAAc,CAAC;KAC/C;IAEK,OAAO;;YACX,IAAI;gBACF,MAAM,IAAI,CAAC,GAAG,CAAC,OAAO,EAAE,CAAC;;gBAEzB,IAAI,CAAC,SAAS,CAAC,IAAI,EAAE,CAAC;aACvB;YAAC,OAAO,CAAC,EAAE;;gBAEV,OAAO,CAAC,KAAK,CAAC,sCAAsC,EAAE,CAAC,CAAC,CAAC;aAC1D;SACF;KAAA;EACF;;YAtCyB,eAAe;YACZ,SAAS;;AAhCpC;IADC,KAAK,EAAE;gEACiC;AAGzC;IADC,KAAK,EAAE;mEACS;AAGjB;IADC,KAAK,EAAE;+DACc;AAGtB;IADC,KAAK,EAAE;wEACc;AAGtB;IADC,KAAK,EAAE;0EACgB;AAGxB;IADC,KAAK,EAAE;wEACc;AAGtB;IADC,KAAK,EAAE;qEACgB;AAGxB;IADC,KAAK,EAAE;qEACiB;AAIzB;IADC,MAAM,EAAE;mEAC0C;AA5BxC,gCAAgC;IAL5C,SAAS,CAAC;QACT,QAAQ,EAAE,4BAA4B;QACtC,y2DAA0D;;KAE3D,CAAC;GACW,gCAAgC,CAwE5C;;IC3EY,+BAA+B,GAA5C,MAAa,+BAA+B;IA2C1C;;IAE+B,UAAkB,EACxC,WAA+B,EAC9B,WAAwB;QAFH,eAAU,GAAV,UAAU,CAAQ;QACxC,gBAAW,GAAX,WAAW,CAAoB;QAC9B,gBAAW,GAAX,WAAW,CAAa;QA5CzB,cAAS,GAAsB,YAAY,CAAC,GAAG,CAAC;QAEhD,wBAAmB,GAAG,IAAI,CAAC;QAC3B,yBAAoB,GAAG,IAAI,CAAC;;QAK5B,cAAS,GAAG,uBAAuB,CAAC;QACpC,mBAAc,GAAG,aAAa,CAAC;QAC/B,oBAAe,GAAG,OAAO,CAAC;QAC1B,gBAAW,GAAG,IAAI,CAAC;QACnB,uBAAkB,GAAG,kBAAkB,CAAC;QACxC,0BAAqB,GAAG,yBAAyB,CAAC;QAClD,4BAAuB,GAAG,mBAAmB,CAAC;;QAG9C,cAAS,GAAG,OAAO,CAAC;QACpB,2BAAsB,GAAG,mBAAmB,CAAC;QAC7C,0BAAqB,GAAG,oCAAoC,CAAC;;QAG7D,iBAAY,GAAG,UAAU,CAAC;QAC1B,8BAAyB,GAAG,sBAAsB,CAAC;;QAQlD,6BAAwB,GAAuB,IAAI,YAAY,EAAQ,CAAC;;QAExE,6BAAwB,GAAuB,IAAI,YAAY,EAAQ,CAAC;QAGlF,kBAAa,GAAG,YAAY,CAAC;QAE7B,wBAAmB,GAAG,KAAK,CAAC;QAO1B,IAAI,CAAC,SAAS,GAAG,WAAW,CAAC,gBAAgB,CAAC;QAC9C,IAAI,CAAC,OAAO,GAAG,WAAW,CAAC,cAAc,CAAC;KAC3C;IAED,IAAI,KAAK;QACP,OAAO,IAAI,CAAC,mBAAmB,GAAG,MAAM,GAAG,SAAS,CAAC;KACtD;IAED,IAAI,WAAW;QACb,OAAO,IAAI,CAAC,mBAAmB,GAAG,MAAM,GAAG,QAAQ,CAAC;KACrD;IAED,QAAQ;QAEN,IAAI,iBAAiB,CAAC,IAAI,CAAC,UAAU,CAAC,EAAE;YACtC,IAAI,CAAC,mBAAmB,GAAG,IAAI,CAAC,OAAO,CAAC,SAAS,CAAC,MAAM,IAAI,CAAC,mBAAmB,GAAG,IAAI,CAAC,CAAC;SAC1F;QAED,IAAI,CAAC,0BAA0B,EAAE,CAAC;QAElC,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC;YACtC,KAAK,EAAE,CAAC,EAAE,EAAE,CAAC,UAAU,CAAC,QAAQ,EAAE,UAAU,CAAC,KAAK,CAAC,CAAC;YACpD,QAAQ,EAAE,CAAC,EAAE,EAAE,UAAU,CAAC,QAAQ,CAAC;SACpC,CAAC,CAAC;KACJ;IAEM,0BAA0B;QAC/B,IAAI,CAAC,WAAW,CAAC,oBAAoB,GAAG,IAAI,CAAC,oBAAoB,CAAC;QAClE,IAAI,CAAC,WAAW,CAAC,kBAAkB,GAAG,IAAI,CAAC,kBAAkB,CAAC;KAC/D;IAEK,KAAK;;YACT,OAAO,MAAM,IAAI,CAAC,WAAW,CAAC,UAAU,CAAC,IAAI,CAAC,aAAa,CAAC,gBAAgB,EAC1E;gBACE,KAAK,EAAE,IAAI,CAAC,SAAS,CAAC,QAAQ,CAAC,KAAK,CAAC,KAAK;gBAC1C,QAAQ,EAAE,IAAI,CAAC,SAAS,CAAC,QAAQ,CAAC,QAAQ,CAAC,KAAK;aACjD,CACF,CAAC;SACH;KAAA;EACF;;YA1C4C,MAAM,uBAA9C,MAAM,SAAC,WAAW;YACC,kBAAkB;YACjB,WAAW;;AA7CzB;IAAR,KAAK,EAAE;gEAAiB;AAChB;IAAR,KAAK,EAAE;kEAAiD;AAChD;IAAR,KAAK,EAAE;mEAAoC;AACnC;IAAR,KAAK,EAAE;4EAA4B;AAC3B;IAAR,KAAK,EAAE;6EAA6B;AAC5B;IAAR,KAAK,EAAE;6EAA8B;AAC7B;IAAR,KAAK,EAAE;2EAA4B;AAG3B;IAAR,KAAK,EAAE;kEAAqC;AACpC;IAAR,KAAK,EAAE;uEAAgC;AAC/B;IAAR,KAAK,EAAE;wEAA2B;AAC1B;IAAR,KAAK,EAAE;oEAAoB;AACnB;IAAR,KAAK,EAAE;2EAAyC;AACxC;IAAR,KAAK,EAAE;8EAAmD;AAClD;IAAR,KAAK,EAAE;gFAA+C;AAG9C;IAAR,KAAK,EAAE;kEAAqB;AACpB;IAAR,KAAK,EAAE;+EAA8C;AAC7C;IAAR,KAAK,EAAE;8EAA8D;AAG7D;IAAR,KAAK,EAAE;qEAA2B;AAC1B;IAAR,KAAK,EAAE;kFAAoD;AAIlD;IAAT,MAAM,EAAE;kEAAgB;AAEf;IAAT,MAAM,EAAE;gEAAc;AAEb;IAAT,MAAM,EAAE;iFAAyE;AAExE;IAAT,MAAM,EAAE;iFAAyE;AApCvE,+BAA+B;IAP3C,SAAS,CAAC;QACT,QAAQ,EAAE,2BAA2B;QACrC,m9HAAyD;QAEzD,aAAa,EAAE,iBAAiB,CAAC,IAAI;QACrC,UAAU,EAAE,2BAA2B;;KACxC,CAAC;IA8CG,WAAA,MAAM,CAAC,WAAW,CAAC,CAAA;GA7CX,+BAA+B,CAuF3C;;MC5FY,wBAAwB,GAAgB,CAAC,OAAwB;IAC5E,IAAI,CAAC,OAAO,CAAC,MAAM,IAAI,CAAC,OAAO,EAAE;QAC/B,OAAO,IAAI,CAAC;KACb;IAED,MAAM,QAAQ,GAAG,OAAO,CAAC,MAAM,CAAC,GAAG,CAAC,UAAU,CAAC,CAAC;IAChD,MAAM,eAAe,GAAG,OAAO,CAAC,MAAM,CAAC,GAAG,CAAC,iBAAiB,CAAC,CAAC;IAE9D,IAAI,CAAC,QAAQ,IAAI,CAAC,eAAe,EAAE;QACjC,OAAO,IAAI,CAAC;KACb;IAED,IAAI,eAAe,CAAC,KAAK,KAAK,EAAE,EAAE;QAChC,OAAO,IAAI,CAAC;KACb;IAED,IAAI,QAAQ,CAAC,KAAK,KAAK,eAAe,CAAC,KAAK,EAAE;QAC5C,OAAO,IAAI,CAAC;KACb;IAED,OAAO,EAAC,oBAAoB,EAAE,IAAI,EAAC,CAAC;AACtC,EAAE;IASW,kCAAkC,GAA/C,MAAa,kCAAkC;;IAgD7C,YAAyC,UAAkB,EACvC,WAAwB,EACzB,WAA+B;;QAFT,eAAU,GAAV,UAAU,CAAQ;QACvC,gBAAW,GAAX,WAAW,CAAa;QACzB,gBAAW,GAAX,WAAW,CAAoB;;QA1CzC,cAAS,GAAG,mBAAmB,CAAC;QAChC,sBAAiB,GAAG,uBAAuB,CAAC;QAC5C,2BAAsB,GAAG,sBAAsB,CAAC;QAChD,sBAAiB,GAAG,gBAAgB,CAAC;QACrC,4BAAuB,GAAG,mBAAmB,CAAC;QAC9C,2BAAsB,GAAG,0BAA0B,CAAC;QACpD,oBAAe,GAAG,OAAO,CAAC;;QAG1B,aAAQ,GAAG,MAAM,CAAC;QAClB,0BAAqB,GAAG,kBAAkB,CAAC;;QAG3C,cAAS,GAAG,OAAO,CAAC;QACpB,2BAAsB,GAAG,mBAAmB,CAAC;QAC7C,0BAAqB,GAAG,oCAAoC,CAAC;;QAG7D,iBAAY,GAAG,UAAU,CAAC;QAC1B,8BAAyB,GAAG,sBAAsB,CAAC;QACnD,6BAAwB,GAAG,uBAAuB,CAAC;QACnD,0CAAqC,GAAG,mCAAmC,CAAC;QAC5E,2BAAsB,GAAG,qBAAqB,CAAC;;QAQ9C,qBAAgB,GAAuB,IAAI,YAAY,EAAQ,CAAC;QAI1E,wBAAmB,GAAG,KAAK,CAAC;;QAY1B,IAAI,CAAC,cAAc,GAAG,IAAI,OAAO,EAAE,CAAC;QACpC,IAAI,CAAC,SAAS,GAAG,WAAW,CAAC,gBAAgB,CAAC;QAC9C,IAAI,CAAC,OAAO,GAAG,WAAW,CAAC,cAAc,CAAC;KAC3C;IAED,IAAI,KAAK;QACP,OAAO,IAAI,CAAC,mBAAmB,GAAG,MAAM,GAAG,SAAS,CAAC;KACtD;IAED,IAAI,WAAW;QACb,OAAO,IAAI,CAAC,mBAAmB,GAAG,MAAM,GAAG,QAAQ,CAAC;KACrD;IAED,QAAQ;QACN,IAAI,iBAAiB,CAAC,IAAI,CAAC,UAAU,CAAC,EAAE;YACtC,IAAI,CAAC,mBAAmB,GAAG,IAAI,CAAC,OAAO,CAAC,SAAS,CAAC,MAAM,IAAI,CAAC,mBAAmB,GAAG,IAAI,CAAC,CAAC;SAC1F;QACD,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC;YACzC,IAAI,EAAE,CAAC,EAAE,EAAE,UAAU,CAAC,QAAQ,CAAC;YAC/B,KAAK,EAAE,CAAC,EAAE,EAAE,CAAC,UAAU,CAAC,QAAQ,EAAE,UAAU,CAAC,KAAK,CAAC,CAAC;YACpD,QAAQ,EAAE,CAAC,EAAE,EAAE,UAAU,CAAC,QAAQ,CAAC;YACnC,eAAe,EAAE,CAAC,EAAE,EAAE,CAAC,UAAU,CAAC,QAAQ,EAAE,wBAAwB,CAAC,CAAC;YACtE,GAAG,EAAE,CAAC,EAAE,CAAC;YACT,aAAa,EAAE,CAAC,EAAE,CAAC;SACpB,CAAC,CAAC;;QAGH,IAAI,IAAI,CAAC,MAAM,EAAE;YACf,IAAI,CAAC,YAAY,CAAC,QAAQ,CAAC,GAAG,CAAC,aAAa,CAAC,UAAU,CAAC,YAAY,CAAC,CAAC;SACvE;QAED,IAAI,IAAI,CAAC,gBAAgB,EAAE;YACzB,IAAI,CAAC,YAAY,CAAC,QAAQ,CAAC,aAAa,CAAC,aAAa,CAAC,UAAU,CAAC,YAAY,CAAC,CAAC;SACjF;;;QAID,IAAI,CAAC,YAAY;aACd,QAAQ;aACR,QAAQ;aACR,YAAY,CAAC,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,cAAc,CAAC,CAAC;aACjD,SAAS,CAAC;YACT,IAAI,CAAC,YAAY,CAAC,QAAQ,CAAC,eAAe,CAAC,sBAAsB,EAAE,CAAC;SACrE,CAAC,CAAC;KACN;;;;IAKD,WAAW;;QAET,IAAI,CAAC,cAAc,CAAC,IAAI,EAAE,CAAC;QAC3B,IAAI,CAAC,cAAc,CAAC,QAAQ,EAAE,CAAC;KAChC;IAEK,aAAa;;YACjB,OAAO,MAAM,IAAI,CAAC,WAAW,CAAC,MAAM,CAClC,IAAI,CAAC,YAAY,CAAC,QAAQ,CAAC,IAAI,CAAC,KAAK,EACrC;gBACE,KAAK,EAAE,IAAI,CAAC,YAAY,CAAC,QAAQ,CAAC,KAAK,CAAC,KAAK;gBAC7C,QAAQ,EAAE,IAAI,CAAC,YAAY,CAAC,QAAQ,CAAC,QAAQ,CAAC,KAAK;aACpD,CACF,CAAC;SACH;KAAA;EACF;;YAtEsD,MAAM,uBAA9C,MAAM,SAAC,WAAW;YACE,WAAW;YACZ,kBAAkB;;AAhDzC;IAAR,KAAK,EAAE;mEAAiB;AAChB;IAAR,KAAK,EAAE;sEAAoC;AACnC;IAAR,KAAK,EAAE;kEAAgB;AACf;IAAR,KAAK,EAAE;4EAA0B;AAGzB;IAAR,KAAK,EAAE;qEAAiC;AAChC;IAAR,KAAK,EAAE;6EAA6C;AAC5C;IAAR,KAAK,EAAE;kFAAiD;AAChD;IAAR,KAAK,EAAE;6EAAsC;AACrC;IAAR,KAAK,EAAE;mFAA+C;AAC9C;IAAR,KAAK,EAAE;kFAAqD;AACpD;IAAR,KAAK,EAAE;2EAA2B;AAG1B;IAAR,KAAK,EAAE;oEAAmB;AAClB;IAAR,KAAK,EAAE;iFAA4C;AAG3C;IAAR,KAAK,EAAE;qEAAqB;AACpB;IAAR,KAAK,EAAE;kFAA8C;AAC7C;IAAR,KAAK,EAAE;iFAA8D;AAG7D;IAAR,KAAK,EAAE;wEAA2B;AAC1B;IAAR,KAAK,EAAE;qFAAoD;AACnD;IAAR,KAAK,EAAE;oFAAoD;AACnD;IAAR,KAAK,EAAE;iGAA6E;AAC5E;IAAR,KAAK,EAAE;kFAAgD;AAI9C;IAAT,MAAM,EAAE;qEAAgB;AAEf;IAAT,MAAM,EAAE;mEAAc;AAEb;IAAT,MAAM,EAAE;4EAAiE;AAtC/D,kCAAkC;IAP9C,SAAS,CAAC;QACT,QAAQ,EAAE,8BAA8B;QACxC,46IAA4D;QAE5D,aAAa,EAAE,iBAAiB,CAAC,IAAI;QACrC,UAAU,EAAE,2BAA2B;;KACxC,CAAC;IAiDa,WAAA,MAAM,CAAC,WAAW,CAAC,CAAA;GAhDrB,kCAAkC,CAsH9C;;IC7IY,aAAa,GAA1B,MAAa,aAAa;IAkCxB,YACS,IAAqB,EACrB,WAA+B,EAC9B,gBAAsC,EACiB,MAA+B;QAHvF,SAAI,GAAJ,IAAI,CAAiB;QACrB,gBAAW,GAAX,WAAW,CAAoB;QAC9B,qBAAgB,GAAhB,gBAAgB,CAAsB;QACiB,WAAM,GAAN,MAAM,CAAyB;QAhChG,cAAS,GAAG,IAAI,CAAC;QAGjB,mBAAc,GAAG,IAAI,CAAC;QAGtB,qBAAgB,GAAG,IAAI,CAAC;;QAOxB,cAAS,GAAuB,IAAI,YAAY,EAAE,CAAC;;QAInD,oBAAe,GAAuB,IAAI,YAAY,EAAE,CAAC;;QAIzD,qBAAgB,GAAuB,IAAI,YAAY,EAAE,CAAC;KAazD;IAED,cAAc;QACZ,IAAI,IAAI,CAAC,QAAQ,EAAE;YACjB,IAAI,CAAC,KAAK,EAAE,CAAC;YACb,IAAI,CAAC,QAAQ,GAAG,KAAK,CAAC;SACvB;aAAM;YACL,IAAI,CAAC,mBAAmB,EAAE,CAAC,SAAS,CAAC,CAAC,eAA0B;gBAC9D,IAAI,CAAC,eAAe,GAAG,eAAe,CAAC;gBACvC,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC;aACtB,CAAC,CAAC;SACJ;KACF;IAED,KAAK;QACH,IAAI,CAAC,eAAe,CAAC,KAAK,EAAE,CAAC;QAC7B,IAAI,CAAC,eAAe,CAAC,OAAO,EAAE,CAAC;QAC/B,IAAI,CAAC,eAAe,GAAG,IAAI,CAAC;KAC7B;IAEK,IAAI;;YACR,IAAI,IAAI,CAAC,eAAe,CAAC,KAAK,EAAE;gBAC9B,IAAI,CAAC,QAAQ,GAAG,KAAK,CAAC;gBACtB,MAAM,IAAI,GAAG,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC;;;;gBAKnC,MAAM,WAAW,GAAa,EAAE,CAAC;gBAEjC,IAAI;oBACF,IAAI,IAAI,CAAC,qBAAqB,CAAC,KAAK,EAAE;wBACpC,MAAM,IAAI,CAAC,aAAa,CAAC,EAAC,WAAW,EAAE,IAAI,CAAC,qBAAqB,CAAC,KAAK,EAAC,CAAC,CAAC;wBAC1E,WAAW,CAAC,IAAI,CAAC,iCAAiC,IAAI,CAAC,WAAW,EAAE,CAAC,CAAC;qBACvE;oBAED,IAAI,IAAI,CAAC,sBAAsB,CAAC,KAAK,EAAE;wBACrC,MAAM,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,sBAAsB,CAAC,KAAK,CAAC,CAAC;wBAC1D,WAAW,CAAC,IAAI,CAAC,kCAAkC,IAAI,CAAC,KAAK,EAAE,CAAC,CAAC;qBAClE;oBAED,IAAI,IAAI,CAAC,4BAA4B,CAAC,KAAK,EAAE;wBAC3C,MAAM,IAAI,CAAC,iBAAiB,CAAC,IAAI,CAAC,4BAA4B,CAAC,KAAK,CAAC,CAAC;wBACtE,OAAO,CAAC,GAAG,CAAC,iBAAiB,EAAE,IAAI,CAAC,4BAA4B,CAAC,KAAK,CAAC,CAAC;wBACxE,WAAW,CAAC,IAAI,CAAC,yCAAyC,IAAI,CAAC,WAAW,EAAE,CAAC,CAAC;qBAC/E;oBAED,IAAI,IAAI,CAAC,MAAM,CAAC,mBAAmB,EAAE;wBACnC,MAAM,IAAI,CAAC,gBAAgB,CAAC,cAAc,CAAC,IAAI,CAAC,WAAW,CAAC,aAAa,CAAC,IAAI,CAAC,CAAC,CAAC;qBAClF;iBAEF;gBAAC,OAAO,KAAK,EAAE;oBACd,IAAI,CAAC,WAAW,CAAC,SAAS,CAAC,KAAK,IAAI,KAAK,CAAC,OAAO,GAAG,KAAK,CAAC,OAAO,GAAG,KAAK,CAAC,CAAC;oBAC3E,OAAO,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC;iBACtB;gBAGD,IAAI,WAAW,CAAC,MAAM,GAAG,CAAC,EAAE;oBAC1B,IAAI,CAAC,WAAW,CAAC,SAAS,CAAC,WAAW,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC;iBACrD;gBACD,IAAI,CAAC,eAAe,CAAC,KAAK,EAAE,CAAC;aAC9B;SACF;KAAA;IAED,OAAO;QACL,IAAI,CAAC,IAAI,CAAC,OAAO,EAAE;aAChB,IAAI,CAAC,MAAM,IAAI,CAAC,SAAS,CAAC,IAAI,EAAE,CAAC;aACjC,KAAK,CAAC,CAAC,IAAI,OAAO,CAAC,KAAK,CAAC,sCAAsC,EAAE,CAAC,CAAC,CAAC,CAAC;KACzE;;;;;;;;IASK,aAAa;;YACjB,IAAI;gBACF,MAAM,IAAI,GAAG,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC;;gBAGnC,MAAM,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,MAAM,EAAE,CAAC;;gBAErC,MAAM,IAAI,CAAC,gBAAgB,CAAC,cAAc,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;;gBAErD,IAAI,CAAC,gBAAgB,CAAC,IAAI,EAAE,CAAC;gBAC7B,IAAI,CAAC,QAAQ,GAAG,KAAK,CAAC;gBACtB,OAAO,CAAC,GAAG,CAAC,6CAA6C,CAAC,CAAC;gBAC3D,IAAI,CAAC,WAAW,CAAC,SAAS,CAAC,6CAA6C,CAAC,CAAC;aAC3E;YAAC,OAAO,KAAK,EAAE;gBACd,OAAO,CAAC,GAAG,CAAC,iCAAiC,EAAE,KAAK,CAAC,CAAC;gBACtD,IAAI,CAAC,WAAW,CAAC,SAAS,CAAC,+CAA+C,KAAK,CAAC,OAAO,EAAE,CAAC,CAAC;aAC5F;SACF;KAAA;IAES,mBAAmB;QAC3B,OAAO,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC,IAAI,CAChC,IAAI,CAAC,CAAC,CAAC,EACP,GAAG,CAAC,CAAC,WAAiB;YACtB,MAAM,eAAe,GAAG,IAAI,SAAS,CAAC;gBACpC,IAAI,EAAE,IAAI,CAAC,qBAAqB,GAAG,IAAI,WAAW,CAChD,EAAC,KAAK,EAAE,WAAW,CAAC,WAAW,EAAE,QAAQ,EAAE,IAAI,CAAC,QAAQ,EAAC,EACzD;oBACE,UAAU,CAAC,QAAQ;oBACnB,UAAU,CAAC,SAAS,CAAC,IAAI,CAAC,MAAM,CAAC,aAAa,CAAC;oBAC/C,UAAU,CAAC,SAAS,CAAC,IAAI,CAAC,MAAM,CAAC,aAAa,CAAC;iBAChD,CACF;gBAED,KAAK,EAAE,IAAI,CAAC,sBAAsB,GAAG,IAAI,WAAW,CAClD,EAAC,KAAK,EAAE,WAAW,CAAC,KAAK,EAAE,QAAQ,EAAE,IAAI,CAAC,QAAQ,EAAC,EACnD;oBACE,UAAU,CAAC,QAAQ;oBACnB,UAAU,CAAC,OAAO,CAAC,WAAW,CAAC;iBAChC,CAAC;gBAEJ,WAAW,EAAE,IAAI,CAAC,4BAA4B,GAAG,IAAI,WAAW,CAC9D,EAAC,KAAK,EAAE,WAAW,CAAC,WAAW,EAAE,QAAQ,EAAE,IAAI,CAAC,QAAQ,EAAC,EACzD,CAAC,UAAU,CAAC,OAAO,CAAC,kBAAkB,CAAC,CAAC,CAAC;aAC5C,CAAC,CAAC;YAEH,eAAe,CAAC,MAAM,EAAE,CAAC;YACzB,OAAO,eAAe,CAAC;SACtB,CAAC,CACH,CAAC;KACH;EACF;;YApIgB,eAAe;YACR,kBAAkB;YACZ,oBAAoB;4CAC7C,MAAM,SAAC,UAAU,CAAC,MAAM,4BAA4B,CAAC;;AAnCxD;IADC,KAAK,EAAE;+CACU;AAGlB;IADC,KAAK,EAAE;gDACS;AAGjB;IADC,KAAK,EAAE;qDACc;AAGtB;IADC,KAAK,EAAE;uDACgB;AAGxB;IADC,KAAK,EAAE;iDAC2B;AAInC;IADC,MAAM,EAAE;gDAC0C;AAInD;IADC,MAAM,EAAE;sDACgD;AAIzD;IADC,MAAM,EAAE;uDACiD;AA3B/C,aAAa;IALzB,SAAS,CAAC;QACT,QAAQ,EAAE,0BAA0B;QACpC,2nMAAoC;;KAErC,CAAC;IAuCG,WAAA,MAAM,CAAC,UAAU,CAAC,MAAM,4BAA4B,CAAC,CAAC,CAAA;GAtC9C,aAAa,CAuKzB;;IClLW;AAAZ,WAAY,KAAK;IACf,4BAAmB,CAAA;IACnB,4BAAmB,CAAA;IACnB,4BAAmB,CAAA;IACnB,oBAAW,CAAA;IACX,8BAAqB,CAAA;IACrB,0BAAiB,CAAA;AACnB,CAAC,EAPW,KAAK,KAAL,KAAK,QAOhB;IAEW;AAAZ,WAAY,MAAM;IAChB,qBAAW,CAAA;IACX,2BAAiB,CAAA;AACnB,CAAC,EAHW,MAAM,KAAN,MAAM,QAGjB;IAQY,sBAAsB,GAAnC,MAAa,sBAAsB;IAgBjC,YAAmB,WAA+B,EAAS,MAAiB;QAAzD,gBAAW,GAAX,WAAW,CAAoB;QAAS,WAAM,GAAN,MAAM,CAAW;QAbnE,WAAM,GAAW,MAAM,CAAC,GAAG,CAAC;QAC5B,cAAS,GAAkC,YAAY,CAAC,GAAG,CAAC;QASrE,WAAM,GAAG,KAAK,CAAC;QACf,iBAAY,GAAG,YAAY,CAAC;QAG1B,IAAI,CAAC,SAAS,GAAG,WAAW,CAAC,gBAAgB,CAAC;QAC9C,IAAI,CAAC,OAAO,GAAG,WAAW,CAAC,cAAc,CAAC;KAC3C;IAED,kBAAkB,CAAC,YAA2B;QAC5C,IAAI,IAAI,CAAC,MAAM,IAAI,IAAI,CAAC,gBAAgB,EAAE;YACxC,MAAM,MAAM,GAAyB;gBACnC,MAAM,EAAE,IAAI,CAAC,MAAM;gBACnB,gBAAgB,EAAE,IAAI,CAAC,gBAAgB;gBACvC,YAAY;aACb,CAAC;YAEF,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,uBAAuB,EAAE,EAAC,IAAI,EAAE,MAAM,EAAC,CAAC,CAAC;YAC3E,IAAI,CAAC,SAAS,CAAC,WAAW,EAAE,CAAC,SAAS,CAAC,CAAC,MAA4B;gBAClE,IAAI,MAAM,IAAI,MAAM,CAAC,OAAO,EAAE;;oBAE5B,IAAI,CAAC,WAAW,CAAC,UAAU,CAAC,YAAY,CAAC,CAAC;iBAC3C;gBACD,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC;aACvB,CAAC,CAAC;SACJ;aAAM;;YAEL,IAAI,CAAC,WAAW,CAAC,UAAU,CAAC,YAAY,CAAC,CAAC;SAC3C;KACF;EAEF;;YA3BiC,kBAAkB;YAAiB,SAAS;;AAdnE;IAAR,KAAK,EAAE;qDAAc;AACb;IAAR,KAAK,EAAE;sDAA6B;AAC5B;IAAR,KAAK,EAAE;yDAA6D;AAE3D;IAAT,MAAM,EAAE;yDAAgB;AACf;IAAT,MAAM,EAAE;uDAAc;AAEd;IAAR,KAAK,EAAE;sDAAgB;AACf;IAAR,KAAK,EAAE;gEAA0B;AAVvB,sBAAsB;IANlC,SAAS,CAAC;QACT,QAAQ,EAAE,+BAA+B;QACzC,o0iBAA4C;QAE5C,UAAU,EAAE,2BAA2B;;KACxC,CAAC;GACW,sBAAsB,CA2ClC;;ACtED;MAiCa,2BAA2B,GAA4B;;;IAGlE,mBAAmB,EAAE,IAAI;IACzB,yBAAyB,EAAE,IAAI;IAC/B,uBAAuB,EAAE,IAAI;IAC7B,oBAAoB,EAAE,GAAG;IACzB,oBAAoB,EAAE,GAAG;;;IAIzB,iBAAiB,EAAE,EAAE;IACrB,iBAAiB,EAAE,CAAC;;IAGpB,aAAa,EAAE,EAAE;IACjB,aAAa,EAAE,CAAC;;;IAIhB,wCAAwC,EAAE,IAAI;;IAG9C,uBAAuB,EAAE,IAAI;EAC7B;AAEF;SACgB,8BAA8B,CAAC,kBAA2C;IACxF,OAAO,MAAM,CAAC,MAAM,CAAC,EAAE,EAAE,2BAA2B,EAAE,kBAAkB,CAAC,CAAC;AAC5E;;ICnDa,aAAa,GAA1B,MAAa,aAAa;IACxB,YAEU,MAA+B,EAC/B,MAAc,EACd,WAA+B;QAF/B,WAAM,GAAN,MAAM,CAAyB;QAC/B,WAAM,GAAN,MAAM,CAAQ;QACd,gBAAW,GAAX,WAAW,CAAoB;KAExC;IAED,WAAW,CAAC,KAA6B,EAAE,KAA0B;QACnE,OAAO,IAAI,CAAC,WAAW,CAAC,GAAG,CAAC,IAAI,CAAC,IAAI,CACnC,GAAG,CAAC,IAAI;YACN,IAAI,IAAI,EAAE;gBACR,IAAI,IAAI,CAAC,MAAM,CAAC,wCAAwC,IAAI,CAAC,IAAI,CAAC,aAAa,IAAI,CAAC,IAAI,CAAC,WAAW,EAAE;oBACpG,IAAI,IAAI,CAAC,MAAM,CAAC,oBAAoB,EAAE;wBACpC,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,GAAG,IAAI,CAAC,MAAM,CAAC,oBAAoB,EAAE,CAAC,EAAE,EAAC,WAAW,EAAE,EAAC,WAAW,EAAE,KAAK,CAAC,GAAG,EAAC,EAAC,CAAC,CAAC;qBACxG;oBACD,OAAO,KAAK,CAAC;iBACd;qBAAM;oBACL,OAAO,IAAI,CAAC;iBACb;aACF;iBAAM;gBACL,IAAI,IAAI,CAAC,MAAM,CAAC,oBAAoB,EAAE;oBACpC,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,IAAI,IAAI,CAAC,MAAM,CAAC,oBAAoB,EAAE,CAAC,EAAE,EAAC,WAAW,EAAE,EAAC,WAAW,EAAE,KAAK,CAAC,GAAG,EAAC,EAAC,CAAC,CAAC;iBACzG;gBACD,OAAO,KAAK,CAAC;aACd;SACF,CAAC,CACH,CAAC;KACH;EACF;;4CA5BI,MAAM,SAAC,4BAA4B;YAEpB,MAAM;YACD,kBAAkB;;;AAL9B,aAAa;IAHzB,UAAU,CAAC;QACV,UAAU,EAAE,MAAM;KACnB,CAAC;IAGG,WAAA,MAAM,CAAC,4BAA4B,CAAC,CAAA;GAF5B,aAAa,CA8BzB;;;IC2FY,uBAAuB,+BAApC,MAAa,uBAAuB;IAClC,YAAoB,YAA6B,EAAU,SAAuB,EAAE,IAAwB;QAAxF,iBAAY,GAAZ,YAAY,CAAiB;QAAU,cAAS,GAAT,SAAS,CAAc;QAChF,IAAI,CAAC,kBAAkB,EAAE,CAAC;QAC1B,IAAI,CAAC,qBAAqB,EAAE,CAAC;KAC9B;IAED,OAAO,OAAO,CACZ,aAAgC,EAChC,iBAA2C,MAAM,SAAS,EAC1D,SAAkC,EAAE;QAEpC,OAAO;YACL,QAAQ,EAAE,yBAAuB;YACjC,SAAS,EACP;gBACE;oBACE,OAAO,EAAE,gBAAgB;oBACzB,QAAQ,EAAE,aAAa;iBACxB;gBACD;oBACE,OAAO,EAAE,iBAAiB;oBAC1B,UAAU,EAAE,cAAc;iBAC3B;gBACD,EAAC,OAAO,EAAE,uBAAuB,EAAE,QAAQ,EAAE,MAAM,EAAC;gBACpD;oBACE,OAAO,EAAE,4BAA4B;oBACrC,UAAU,EAAE,8BAA8B;oBAC1C,IAAI,EAAE,CAAC,uBAAuB,CAAC;iBAChC;gBACD,kBAAkB;gBAClB,oBAAoB;gBACpB,aAAa;aACd;SACJ,CAAC;KACH;IAED,qBAAqB;QACnB,IAAI,CAAC,YAAY;aACd,UAAU,CAAC,QAAQ,EAAE,IAAI,CAAC,SAAS,CAAC,8BAA8B,CAAC,wBAAwB,CAAC,CAAC;aAC7F,UAAU,CAAC,OAAO,EAAE,IAAI,CAAC,SAAS,CAAC,8BAA8B,CAAC,uBAAuB,CAAC,CAAC;aAC3F,UAAU,CAAC,gBAAgB,EAAE,IAAI,CAAC,SAAS,CAAC,8BAA8B,CAAC,oBAAoB,CAAC,CAAC;aACjG,UAAU,CAAC,UAAU,EAAE,IAAI,CAAC,SAAS,CAAC,8BAA8B,CAAC,0BAA0B,CAAC,CAAC;aACjG,UAAU,CAAC,SAAS,EAAE,IAAI,CAAC,SAAS,CAAC,8BAA8B,CAAC,yBAAyB,CAAC,CAAC;aAC/F,UAAU,CAAC,QAAQ,EAAE,IAAI,CAAC,SAAS,CAAC,8BAA8B,CAAC,+BAA+B,CAAC,CAAC;aACpG,UAAU,CAAC,WAAW,EAAE,IAAI,CAAC,SAAS,CAAC,8BAA8B,CAAC,2BAA2B,CAAC,CAAC;aACnG,UAAU,CAAC,OAAO,EAAE,IAAI,CAAC,SAAS,CAAC,8BAA8B,CAAC,uBAAuB,CAAC,CAAC;aAC3F,UAAU,CAAC,OAAO,EAAE,IAAI,CAAC,SAAS,CAAC,8BAA8B,CAAC,mBAAmB,CAAC,CAAC,CAAC;KAC5F;EACF;;YA/CmC,eAAe;YAAqB,YAAY;YAAQ,kBAAkB;;AADjG,uBAAuB;IA5DnC,QAAQ,CAAC;QACR,OAAO,EAAE;YACP,YAAY;;YAEZ,YAAY;YACZ,gBAAgB;;YAEhB,gBAAgB;;YAEhB,WAAW;YACX,mBAAmB;;YAEnB,aAAa;YACb,aAAa;YACb,cAAc;YACd,eAAe;YACf,aAAa;YACb,iBAAiB;YACjB,gBAAgB;YAChB,cAAc;YACd,gBAAgB;YAChB,eAAe;YACf,iBAAiB;YACjB,wBAAwB;YACxB,oBAAoB;YACpB,eAAe;YACf,aAAa;;YAEb,yBAAyB;;YAEzB,qBAAqB;YACrB,sBAAsB;SACvB;QACD,OAAO,EAAE;YACP,aAAa;YACb,aAAa;YACb,gCAAgC;YAChC,sBAAsB;YACtB,0BAA0B;;YAE1B,qBAAqB;YACrB,sBAAsB;YACtB,+BAA+B;YAC/B,kCAAkC;SACnC;QACD,YAAY,EAAE;YACZ,aAAa;YACb,aAAa;YACb,gCAAgC;YAChC,sBAAsB;YACtB,0BAA0B;YAC1B,uBAAuB;YACvB,+BAA+B;YAC/B,kCAAkC;SACnC;QACD,eAAe,EAAE;YACf,aAAa;YACb,uBAAuB;SACxB;KACF,CAAC;GACW,uBAAuB,CAgDnC;;ACpLD;;;;ACAA;;;;;;"}
{"version":3,"sources":["webpack:///node_modules/@ionic/core/dist/esm/ion-radio_2.entry.js"],"names":["radioIosCss","radioMdCss","Radio","hostRef","ionStyle","ionFocus","ionBlur","inputId","radioButtonIds","radioGroup","checked","buttonTabindex","name","disabled","updateState","value","onFocus","emit","onBlur","buttonEl","focus","undefined","el","closest","addEventListener","removeEventListener","emitStyle","color","mode","labelId","label","id","role","part","ref","btnEl","type","tabindex","style","ios","md","RadioGroup","ionChange","radioGroupIds","allowEmptySelection","setRadioTabindex","radios","getRadios","first","find","radio","focusable","setButtonTabindex","onClick","ev","selectedRadio","target","currentValue","newValue","header","querySelector","Array","from","querySelectorAll","contains","filter","includes","index","findIndex","next","key","length","setFocus"],"mappings":"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","file":"24-es5.js","sourcesContent":["import { r as registerInstance, e as createEvent, h, H as Host, i as getElement } from './index-92848855.js';\nimport { b as getIonMode } from './ionic-global-23e7365a.js';\nimport { f as findItemLabel } from './helpers-5c745fbd.js';\nimport { c as createColorClasses, h as hostContext } from './theme-5641d27f.js';\n\nconst radioIosCss = \":host{--inner-border-radius:50%;display:inline-block;position:relative;-webkit-box-sizing:border-box;box-sizing:border-box;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;z-index:2}:host(.radio-disabled){pointer-events:none}.radio-icon{display:-ms-flexbox;display:flex;-ms-flex-align:center;align-items:center;-ms-flex-pack:center;justify-content:center;width:100%;height:100%;contain:layout size style}button{left:0;top:0;margin-left:0;margin-right:0;margin-top:0;margin-bottom:0;position:absolute;width:100%;height:100%;border:0;background:transparent;cursor:pointer;-webkit-appearance:none;-moz-appearance:none;appearance:none;outline:none}[dir=rtl] button,:host-context([dir=rtl]) button{left:unset;right:unset;right:0}button::-moz-focus-inner{border:0}.radio-icon,.radio-inner{-webkit-box-sizing:border-box;box-sizing:border-box}:host{--color-checked:var(--ion-color-primary, #3880ff);width:15px;height:24px}:host(.ion-color.radio-checked) .radio-inner{border-color:var(--ion-color-base)}.item-radio.item-ios ion-label{margin-left:0}@supports ((-webkit-margin-start: 0) or (margin-inline-start: 0)) or (-webkit-margin-start: 0){.item-radio.item-ios ion-label{margin-left:unset;-webkit-margin-start:0;margin-inline-start:0}}.radio-inner{width:33%;height:50%}:host(.radio-checked) .radio-inner{-webkit-transform:rotate(45deg);transform:rotate(45deg);border-width:2px;border-top-width:0;border-left-width:0;border-style:solid;border-color:var(--color-checked)}:host(.radio-disabled){opacity:0.3}:host(.ion-focused) .radio-icon::after{border-radius:var(--inner-border-radius);left:-9px;top:-8px;display:block;position:absolute;width:36px;height:36px;background:var(--ion-color-primary-tint, #4c8dff);content:\\\"\\\";opacity:0.2}:host-context([dir=rtl]):host(.ion-focused) .radio-icon::after,:host-context([dir=rtl]).ion-focused .radio-icon::after{left:unset;right:unset;right:-9px}:host(.in-item){margin-left:10px;margin-right:11px;margin-top:8px;margin-bottom:8px;display:block;position:static}@supports ((-webkit-margin-start: 0) or (margin-inline-start: 0)) or (-webkit-margin-start: 0){:host(.in-item){margin-left:unset;margin-right:unset;-webkit-margin-start:10px;margin-inline-start:10px;-webkit-margin-end:11px;margin-inline-end:11px}}:host(.in-item[slot=start]){margin-left:3px;margin-right:21px;margin-top:8px;margin-bottom:8px}@supports ((-webkit-margin-start: 0) or (margin-inline-start: 0)) or (-webkit-margin-start: 0){:host(.in-item[slot=start]){margin-left:unset;margin-right:unset;-webkit-margin-start:3px;margin-inline-start:3px;-webkit-margin-end:21px;margin-inline-end:21px}}\";\n\nconst radioMdCss = \":host{--inner-border-radius:50%;display:inline-block;position:relative;-webkit-box-sizing:border-box;box-sizing:border-box;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;z-index:2}:host(.radio-disabled){pointer-events:none}.radio-icon{display:-ms-flexbox;display:flex;-ms-flex-align:center;align-items:center;-ms-flex-pack:center;justify-content:center;width:100%;height:100%;contain:layout size style}button{left:0;top:0;margin-left:0;margin-right:0;margin-top:0;margin-bottom:0;position:absolute;width:100%;height:100%;border:0;background:transparent;cursor:pointer;-webkit-appearance:none;-moz-appearance:none;appearance:none;outline:none}[dir=rtl] button,:host-context([dir=rtl]) button{left:unset;right:unset;right:0}button::-moz-focus-inner{border:0}.radio-icon,.radio-inner{-webkit-box-sizing:border-box;box-sizing:border-box}:host{--color:var(--ion-color-step-400, #999999);--color-checked:var(--ion-color-primary, #3880ff);--border-width:2px;--border-style:solid;--border-radius:50%;width:20px;height:20px}:host(.ion-color) .radio-inner{background:var(--ion-color-base)}:host(.ion-color.radio-checked) .radio-icon{border-color:var(--ion-color-base)}.radio-icon{margin-left:0;margin-right:0;margin-top:0;margin-bottom:0;border-radius:var(--border-radius);border-width:var(--border-width);border-style:var(--border-style);border-color:var(--color)}.radio-inner{border-radius:var(--inner-border-radius);width:calc(50% + var(--border-width));height:calc(50% + var(--border-width));-webkit-transform:scale3d(0, 0, 0);transform:scale3d(0, 0, 0);-webkit-transition:-webkit-transform 280ms cubic-bezier(0.4, 0, 0.2, 1);transition:-webkit-transform 280ms cubic-bezier(0.4, 0, 0.2, 1);transition:transform 280ms cubic-bezier(0.4, 0, 0.2, 1);transition:transform 280ms cubic-bezier(0.4, 0, 0.2, 1), -webkit-transform 280ms cubic-bezier(0.4, 0, 0.2, 1);background:var(--color-checked)}:host(.radio-checked) .radio-icon{border-color:var(--color-checked)}:host(.radio-checked) .radio-inner{-webkit-transform:scale3d(1, 1, 1);transform:scale3d(1, 1, 1)}:host(.radio-disabled){opacity:0.3}:host(.ion-focused) .radio-icon::after{border-radius:var(--inner-border-radius);left:-12px;top:-12px;display:block;position:absolute;width:36px;height:36px;background:var(--ion-color-primary-tint, #4c8dff);content:\\\"\\\";opacity:0.2}:host-context([dir=rtl]):host(.ion-focused) .radio-icon::after,:host-context([dir=rtl]).ion-focused .radio-icon::after{left:unset;right:unset;right:-12px}:host(.in-item){margin-left:0;margin-right:0;margin-top:9px;margin-bottom:9px;display:block;position:static}:host(.in-item[slot=start]){margin-left:4px;margin-right:36px;margin-top:11px;margin-bottom:10px}@supports ((-webkit-margin-start: 0) or (margin-inline-start: 0)) or (-webkit-margin-start: 0){:host(.in-item[slot=start]){margin-left:unset;margin-right:unset;-webkit-margin-start:4px;margin-inline-start:4px;-webkit-margin-end:36px;margin-inline-end:36px}}\";\n\nconst Radio = class {\n    constructor(hostRef) {\n        registerInstance(this, hostRef);\n        this.ionStyle = createEvent(this, \"ionStyle\", 7);\n        this.ionFocus = createEvent(this, \"ionFocus\", 7);\n        this.ionBlur = createEvent(this, \"ionBlur\", 7);\n        this.inputId = `ion-rb-${radioButtonIds++}`;\n        this.radioGroup = null;\n        /**\n         * If `true`, the radio is selected.\n         */\n        this.checked = false;\n        /**\n         * The tabindex of the radio button.\n         * @internal\n         */\n        this.buttonTabindex = -1;\n        /**\n         * The name of the control, which is submitted with the form data.\n         */\n        this.name = this.inputId;\n        /**\n         * If `true`, the user cannot interact with the radio.\n         */\n        this.disabled = false;\n        this.updateState = () => {\n            if (this.radioGroup) {\n                this.checked = this.radioGroup.value === this.value;\n            }\n        };\n        this.onFocus = () => {\n            this.ionFocus.emit();\n        };\n        this.onBlur = () => {\n            this.ionBlur.emit();\n        };\n    }\n    /** @internal */\n    async setFocus() {\n        if (this.buttonEl) {\n            this.buttonEl.focus();\n        }\n    }\n    /** @internal */\n    async setButtonTabindex(value) {\n        this.buttonTabindex = value;\n    }\n    connectedCallback() {\n        if (this.value === undefined) {\n            this.value = this.inputId;\n        }\n        const radioGroup = this.radioGroup = this.el.closest('ion-radio-group');\n        if (radioGroup) {\n            this.updateState();\n            radioGroup.addEventListener('ionChange', this.updateState);\n        }\n    }\n    disconnectedCallback() {\n        const radioGroup = this.radioGroup;\n        if (radioGroup) {\n            radioGroup.removeEventListener('ionChange', this.updateState);\n            this.radioGroup = null;\n        }\n    }\n    componentWillLoad() {\n        this.emitStyle();\n    }\n    emitStyle() {\n        this.ionStyle.emit({\n            'radio-checked': this.checked,\n            'interactive-disabled': this.disabled,\n        });\n    }\n    render() {\n        const { inputId, disabled, checked, color, el, buttonTabindex } = this;\n        const mode = getIonMode(this);\n        const labelId = inputId + '-lbl';\n        const label = findItemLabel(el);\n        if (label) {\n            label.id = labelId;\n        }\n        return (h(Host, { role: \"radio\", \"aria-disabled\": disabled ? 'true' : null, \"aria-checked\": `${checked}`, \"aria-labelledby\": labelId, class: createColorClasses(color, {\n                [mode]: true,\n                'in-item': hostContext('ion-item', el),\n                'interactive': true,\n                'radio-checked': checked,\n                'radio-disabled': disabled,\n            }) }, h(\"div\", { class: \"radio-icon\", part: \"container\" }, h(\"div\", { class: \"radio-inner\", part: \"mark\" })), h(\"button\", { ref: btnEl => this.buttonEl = btnEl, type: \"button\", onFocus: this.onFocus, onBlur: this.onBlur, disabled: disabled, tabindex: buttonTabindex })));\n    }\n    get el() { return getElement(this); }\n    static get watchers() { return {\n        \"color\": [\"emitStyle\"],\n        \"checked\": [\"emitStyle\"],\n        \"disabled\": [\"emitStyle\"]\n    }; }\n};\nlet radioButtonIds = 0;\nRadio.style = {\n    ios: radioIosCss,\n    md: radioMdCss\n};\n\nconst RadioGroup = class {\n    constructor(hostRef) {\n        registerInstance(this, hostRef);\n        this.ionChange = createEvent(this, \"ionChange\", 7);\n        this.inputId = `ion-rg-${radioGroupIds++}`;\n        this.labelId = `${this.inputId}-lbl`;\n        /**\n         * If `true`, the radios can be deselected.\n         */\n        this.allowEmptySelection = false;\n        /**\n         * The name of the control, which is submitted with the form data.\n         */\n        this.name = this.inputId;\n        this.setRadioTabindex = (value) => {\n            const radios = this.getRadios();\n            // Get the first radio that is not disabled and the checked one\n            const first = radios.find(radio => !radio.disabled);\n            const checked = radios.find(radio => (radio.value === value && !radio.disabled));\n            if (!first && !checked) {\n                return;\n            }\n            // If an enabled checked radio exists, set it to be the focusable radio\n            // otherwise we default to focus the first radio\n            const focusable = checked || first;\n            for (const radio of radios) {\n                const tabindex = radio === focusable ? 0 : -1;\n                radio.setButtonTabindex(tabindex);\n            }\n        };\n        this.onClick = (ev) => {\n            const selectedRadio = ev.target && ev.target.closest('ion-radio');\n            if (selectedRadio) {\n                const currentValue = this.value;\n                const newValue = selectedRadio.value;\n                if (newValue !== currentValue) {\n                    this.value = newValue;\n                }\n                else if (this.allowEmptySelection) {\n                    this.value = undefined;\n                }\n            }\n        };\n    }\n    valueChanged(value) {\n        this.setRadioTabindex(value);\n        this.ionChange.emit({ value });\n    }\n    componentDidLoad() {\n        this.setRadioTabindex(this.value);\n    }\n    async connectedCallback() {\n        // Get the list header if it exists and set the id\n        // this is used to set aria-labelledby\n        const el = this.el;\n        const header = el.querySelector('ion-list-header') || el.querySelector('ion-item-divider');\n        if (header) {\n            const label = header.querySelector('ion-label');\n            if (label) {\n                this.labelId = label.id = this.name + '-lbl';\n            }\n        }\n    }\n    getRadios() {\n        return Array.from(this.el.querySelectorAll('ion-radio'));\n    }\n    onKeydown(ev) {\n        if (ev.target && !this.el.contains(ev.target)) {\n            return;\n        }\n        // Get all radios inside of the radio group and then\n        // filter out disabled radios since we need to skip those\n        const radios = Array.from(this.el.querySelectorAll('ion-radio')).filter(radio => !radio.disabled);\n        // Only move the radio if the current focus is in the radio group\n        if (ev.target && radios.includes(ev.target)) {\n            const index = radios.findIndex(radio => radio === ev.target);\n            let next;\n            // If hitting arrow down or arrow right, move to the next radio\n            // If we're on the last radio, move to the first radio\n            if (['ArrowDown', 'ArrowRight'].includes(ev.key)) {\n                next = (index === radios.length - 1)\n                    ? radios[0]\n                    : radios[index + 1];\n            }\n            // If hitting arrow up or arrow left, move to the previous radio\n            // If we're on the first radio, move to the last radio\n            if (['ArrowUp', 'ArrowLeft'].includes(ev.key)) {\n                next = (index === 0)\n                    ? radios[radios.length - 1]\n                    : radios[index - 1];\n            }\n            if (next && radios.includes(next)) {\n                next.setFocus();\n                this.value = next.value;\n            }\n        }\n    }\n    render() {\n        return (h(Host, { role: \"radiogroup\", \"aria-labelledby\": this.labelId, onClick: this.onClick, class: getIonMode(this) }));\n    }\n    get el() { return getElement(this); }\n    static get watchers() { return {\n        \"value\": [\"valueChanged\"]\n    }; }\n};\nlet radioGroupIds = 0;\n\nexport { Radio as ion_radio, RadioGroup as ion_radio_group };\n"]}
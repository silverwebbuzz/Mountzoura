{"version":3,"sources":["webpack:///node_modules/@ionic/core/dist/esm/ion-input.entry.js"],"names":["inputIosCss","inputMdCss","Input","hostRef","ionInput","ionChange","ionBlur","ionFocus","ionStyle","inputId","inputIds","didBlurAfterEdit","fireFocusEvents","hasFocus","autocapitalize","autocomplete","autocorrect","autofocus","clearInput","debounce","disabled","name","readonly","required","spellcheck","type","value","onInput","ev","input","target","emit","onBlur","focusChanged","emitStyle","onFocus","onKeydown","shouldClearOnEdit","hasValue","key","clearTextInput","clearTextOnEnter","preventDefault","stopPropagation","setFocus","nativeInput","toString","el","hasAttribute","tabindex","getAttribute","undefined","removeAttribute","debounceChanged","document","dispatchEvent","CustomEvent","detail","focus","blur","Promise","resolve","clearOnEdit","placeholder","getValue","length","mode","labelId","label","id","color","ref","accept","autoCapitalize","autoComplete","autoCorrect","autoFocus","enterKeyHint","enterkeyhint","inputMode","inputmode","min","max","minLength","minlength","maxLength","maxlength","multiple","pattern","readOnly","step","size","onKeyDown","onTouchStart","onMouseDown","style","ios","md"],"mappings":"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","file":"15-es5.js","sourcesContent":["import { r as registerInstance, e as createEvent, h, H as Host, i as getElement } from './index-92848855.js';\nimport { b as getIonMode } from './ionic-global-23e7365a.js';\nimport { d as debounceEvent, f as findItemLabel } from './helpers-5c745fbd.js';\nimport { c as createColorClasses } from './theme-5641d27f.js';\n\nconst inputIosCss = \".sc-ion-input-ios-h{--placeholder-color:initial;--placeholder-font-style:initial;--placeholder-font-weight:initial;--placeholder-opacity:.5;--padding-top:0;--padding-end:0;--padding-bottom:0;--padding-start:0;--background:transparent;--color:initial;display:-ms-flexbox;display:flex;position:relative;-ms-flex:1;flex:1;-ms-flex-align:center;align-items:center;width:100%;padding:0 !important;background:var(--background);color:var(--color);font-family:var(--ion-font-family, inherit);z-index:2}ion-item.sc-ion-input-ios-h:not(.item-label),ion-item:not(.item-label) .sc-ion-input-ios-h{--padding-start:0}.ion-color.sc-ion-input-ios-h{color:var(--ion-color-base)}.native-input.sc-ion-input-ios{border-radius:var(--border-radius);padding-left:var(--padding-start);padding-right:var(--padding-end);padding-top:var(--padding-top);padding-bottom:var(--padding-bottom);font-family:inherit;font-size:inherit;font-style:inherit;font-weight:inherit;letter-spacing:inherit;text-decoration:inherit;text-indent:inherit;text-overflow:inherit;text-transform:inherit;text-align:inherit;white-space:inherit;color:inherit;display:inline-block;-ms-flex:1;flex:1;width:100%;max-width:100%;max-height:100%;border:0;outline:none;background:transparent;-webkit-box-sizing:border-box;box-sizing:border-box;-webkit-appearance:none;-moz-appearance:none;appearance:none}@supports ((-webkit-margin-start: 0) or (margin-inline-start: 0)) or (-webkit-margin-start: 0){.native-input.sc-ion-input-ios{padding-left:unset;padding-right:unset;-webkit-padding-start:var(--padding-start);padding-inline-start:var(--padding-start);-webkit-padding-end:var(--padding-end);padding-inline-end:var(--padding-end)}}.native-input.sc-ion-input-ios::-webkit-input-placeholder{color:var(--placeholder-color);font-family:inherit;font-style:var(--placeholder-font-style);font-weight:var(--placeholder-font-weight);opacity:var(--placeholder-opacity)}.native-input.sc-ion-input-ios::-moz-placeholder{color:var(--placeholder-color);font-family:inherit;font-style:var(--placeholder-font-style);font-weight:var(--placeholder-font-weight);opacity:var(--placeholder-opacity)}.native-input.sc-ion-input-ios:-ms-input-placeholder{color:var(--placeholder-color);font-family:inherit;font-style:var(--placeholder-font-style);font-weight:var(--placeholder-font-weight);opacity:var(--placeholder-opacity)}.native-input.sc-ion-input-ios::-ms-input-placeholder{color:var(--placeholder-color);font-family:inherit;font-style:var(--placeholder-font-style);font-weight:var(--placeholder-font-weight);opacity:var(--placeholder-opacity)}.native-input.sc-ion-input-ios::placeholder{color:var(--placeholder-color);font-family:inherit;font-style:var(--placeholder-font-style);font-weight:var(--placeholder-font-weight);opacity:var(--placeholder-opacity)}.native-input.sc-ion-input-ios:-webkit-autofill{background-color:transparent}.native-input.sc-ion-input-ios:invalid{-webkit-box-shadow:none;box-shadow:none}.native-input.sc-ion-input-ios::-ms-clear{display:none}.native-input[disabled].sc-ion-input-ios{opacity:0.4}.cloned-input.sc-ion-input-ios{left:0;top:0;position:absolute;pointer-events:none}[dir=rtl].sc-ion-input-ios .cloned-input.sc-ion-input-ios,[dir=rtl].sc-ion-input-ios-h .cloned-input.sc-ion-input-ios,[dir=rtl] .sc-ion-input-ios-h .cloned-input.sc-ion-input-ios{left:unset;right:unset;right:0}.input-clear-icon.sc-ion-input-ios{margin-left:0;margin-right:0;margin-top:0;margin-bottom:0;padding-left:0;padding-right:0;padding-top:0;padding-bottom:0;background-position:center;border:0;outline:none;background-color:transparent;background-repeat:no-repeat;visibility:hidden;-webkit-appearance:none;-moz-appearance:none;appearance:none}.input-clear-icon.sc-ion-input-ios:focus{opacity:0.5}.has-value.sc-ion-input-ios-h .input-clear-icon.sc-ion-input-ios{visibility:visible}.has-focus.sc-ion-input-ios-h{pointer-events:none}.has-focus.sc-ion-input-ios-h input.sc-ion-input-ios,.has-focus.sc-ion-input-ios-h a.sc-ion-input-ios,.has-focus.sc-ion-input-ios-h button.sc-ion-input-ios{pointer-events:auto}.sc-ion-input-ios-h{--padding-top:10px;--padding-end:10px;--padding-bottom:10px;--padding-start:0;font-size:inherit}.item-label-stacked.sc-ion-input-ios-h,.item-label-stacked .sc-ion-input-ios-h,.item-label-floating.sc-ion-input-ios-h,.item-label-floating .sc-ion-input-ios-h{--padding-top:8px;--padding-bottom:8px;--padding-start:0px}.input-clear-icon.sc-ion-input-ios{background-image:url(\\\"data:image/svg+xml;charset=utf-8,<svg%20xmlns='http://www.w3.org/2000/svg'%20viewBox='0%200%20512%20512'><path%20fill='var(--ion-color-step-600,%20%23666666)'%20d='M403.1,108.9c-81.2-81.2-212.9-81.2-294.2,0s-81.2,212.9,0,294.2c81.2,81.2,212.9,81.2,294.2,0S484.3,190.1,403.1,108.9z%20M352,340.2L340.2,352l-84.4-84.2l-84,83.8L160,339.8l84-83.8l-84-83.8l11.8-11.8l84,83.8l84.4-84.2l11.8,11.8L267.6,256L352,340.2z'/></svg>\\\");width:30px;height:30px;background-size:18px}\";\n\nconst inputMdCss = \".sc-ion-input-md-h{--placeholder-color:initial;--placeholder-font-style:initial;--placeholder-font-weight:initial;--placeholder-opacity:.5;--padding-top:0;--padding-end:0;--padding-bottom:0;--padding-start:0;--background:transparent;--color:initial;display:-ms-flexbox;display:flex;position:relative;-ms-flex:1;flex:1;-ms-flex-align:center;align-items:center;width:100%;padding:0 !important;background:var(--background);color:var(--color);font-family:var(--ion-font-family, inherit);z-index:2}ion-item.sc-ion-input-md-h:not(.item-label),ion-item:not(.item-label) .sc-ion-input-md-h{--padding-start:0}.ion-color.sc-ion-input-md-h{color:var(--ion-color-base)}.native-input.sc-ion-input-md{border-radius:var(--border-radius);padding-left:var(--padding-start);padding-right:var(--padding-end);padding-top:var(--padding-top);padding-bottom:var(--padding-bottom);font-family:inherit;font-size:inherit;font-style:inherit;font-weight:inherit;letter-spacing:inherit;text-decoration:inherit;text-indent:inherit;text-overflow:inherit;text-transform:inherit;text-align:inherit;white-space:inherit;color:inherit;display:inline-block;-ms-flex:1;flex:1;width:100%;max-width:100%;max-height:100%;border:0;outline:none;background:transparent;-webkit-box-sizing:border-box;box-sizing:border-box;-webkit-appearance:none;-moz-appearance:none;appearance:none}@supports ((-webkit-margin-start: 0) or (margin-inline-start: 0)) or (-webkit-margin-start: 0){.native-input.sc-ion-input-md{padding-left:unset;padding-right:unset;-webkit-padding-start:var(--padding-start);padding-inline-start:var(--padding-start);-webkit-padding-end:var(--padding-end);padding-inline-end:var(--padding-end)}}.native-input.sc-ion-input-md::-webkit-input-placeholder{color:var(--placeholder-color);font-family:inherit;font-style:var(--placeholder-font-style);font-weight:var(--placeholder-font-weight);opacity:var(--placeholder-opacity)}.native-input.sc-ion-input-md::-moz-placeholder{color:var(--placeholder-color);font-family:inherit;font-style:var(--placeholder-font-style);font-weight:var(--placeholder-font-weight);opacity:var(--placeholder-opacity)}.native-input.sc-ion-input-md:-ms-input-placeholder{color:var(--placeholder-color);font-family:inherit;font-style:var(--placeholder-font-style);font-weight:var(--placeholder-font-weight);opacity:var(--placeholder-opacity)}.native-input.sc-ion-input-md::-ms-input-placeholder{color:var(--placeholder-color);font-family:inherit;font-style:var(--placeholder-font-style);font-weight:var(--placeholder-font-weight);opacity:var(--placeholder-opacity)}.native-input.sc-ion-input-md::placeholder{color:var(--placeholder-color);font-family:inherit;font-style:var(--placeholder-font-style);font-weight:var(--placeholder-font-weight);opacity:var(--placeholder-opacity)}.native-input.sc-ion-input-md:-webkit-autofill{background-color:transparent}.native-input.sc-ion-input-md:invalid{-webkit-box-shadow:none;box-shadow:none}.native-input.sc-ion-input-md::-ms-clear{display:none}.native-input[disabled].sc-ion-input-md{opacity:0.4}.cloned-input.sc-ion-input-md{left:0;top:0;position:absolute;pointer-events:none}[dir=rtl].sc-ion-input-md .cloned-input.sc-ion-input-md,[dir=rtl].sc-ion-input-md-h .cloned-input.sc-ion-input-md,[dir=rtl] .sc-ion-input-md-h .cloned-input.sc-ion-input-md{left:unset;right:unset;right:0}.input-clear-icon.sc-ion-input-md{margin-left:0;margin-right:0;margin-top:0;margin-bottom:0;padding-left:0;padding-right:0;padding-top:0;padding-bottom:0;background-position:center;border:0;outline:none;background-color:transparent;background-repeat:no-repeat;visibility:hidden;-webkit-appearance:none;-moz-appearance:none;appearance:none}.input-clear-icon.sc-ion-input-md:focus{opacity:0.5}.has-value.sc-ion-input-md-h .input-clear-icon.sc-ion-input-md{visibility:visible}.has-focus.sc-ion-input-md-h{pointer-events:none}.has-focus.sc-ion-input-md-h input.sc-ion-input-md,.has-focus.sc-ion-input-md-h a.sc-ion-input-md,.has-focus.sc-ion-input-md-h button.sc-ion-input-md{pointer-events:auto}.sc-ion-input-md-h{--padding-top:10px;--padding-end:0;--padding-bottom:10px;--padding-start:8px;font-size:inherit}.item-label-stacked.sc-ion-input-md-h,.item-label-stacked .sc-ion-input-md-h,.item-label-floating.sc-ion-input-md-h,.item-label-floating .sc-ion-input-md-h{--padding-top:8px;--padding-bottom:8px;--padding-start:0}.input-clear-icon.sc-ion-input-md{background-image:url(\\\"data:image/svg+xml;charset=utf-8,<svg%20xmlns='http://www.w3.org/2000/svg'%20viewBox='0%200%20512%20512'><polygon%20fill='var(--ion-color-step-600,%20%23666666)'%20points='405,136.798%20375.202,107%20256,226.202%20136.798,107%20107,136.798%20226.202,256%20107,375.202%20136.798,405%20256,285.798%20375.202,405%20405,375.202%20285.798,256'/></svg>\\\");width:30px;height:30px;background-size:22px}\";\n\nconst Input = class {\n    constructor(hostRef) {\n        registerInstance(this, hostRef);\n        this.ionInput = createEvent(this, \"ionInput\", 7);\n        this.ionChange = createEvent(this, \"ionChange\", 7);\n        this.ionBlur = createEvent(this, \"ionBlur\", 7);\n        this.ionFocus = createEvent(this, \"ionFocus\", 7);\n        this.ionStyle = createEvent(this, \"ionStyle\", 7);\n        this.inputId = `ion-input-${inputIds++}`;\n        this.didBlurAfterEdit = false;\n        /**\n         * This is required for a WebKit bug which requires us to\n         * blur and focus an input to properly focus the input in\n         * an item with delegatesFocus. It will no longer be needed\n         * with iOS 14.\n         *\n         * @internal\n         */\n        this.fireFocusEvents = true;\n        this.hasFocus = false;\n        /**\n         * Indicates whether and how the text value should be automatically capitalized as it is entered/edited by the user.\n         */\n        this.autocapitalize = 'off';\n        /**\n         * Indicates whether the value of the control can be automatically completed by the browser.\n         */\n        this.autocomplete = 'off';\n        /**\n         * Whether auto correction should be enabled when the user is entering/editing the text value.\n         */\n        this.autocorrect = 'off';\n        /**\n         * This Boolean attribute lets you specify that a form control should have input focus when the page loads.\n         */\n        this.autofocus = false;\n        /**\n         * If `true`, a clear icon will appear in the input when there is a value. Clicking it clears the input.\n         */\n        this.clearInput = false;\n        /**\n         * Set the amount of time, in milliseconds, to wait to trigger the `ionChange` event after each keystroke.\n         */\n        this.debounce = 0;\n        /**\n         * If `true`, the user cannot interact with the input.\n         */\n        this.disabled = false;\n        /**\n         * The name of the control, which is submitted with the form data.\n         */\n        this.name = this.inputId;\n        /**\n         * If `true`, the user cannot modify the value.\n         */\n        this.readonly = false;\n        /**\n         * If `true`, the user must fill in a value before submitting a form.\n         */\n        this.required = false;\n        /**\n         * If `true`, the element will have its spelling and grammar checked.\n         */\n        this.spellcheck = false;\n        /**\n         * The type of control to display. The default type is text.\n         */\n        this.type = 'text';\n        /**\n         * The value of the input.\n         */\n        this.value = '';\n        this.onInput = (ev) => {\n            const input = ev.target;\n            if (input) {\n                this.value = input.value || '';\n            }\n            this.ionInput.emit(ev);\n        };\n        this.onBlur = (ev) => {\n            this.hasFocus = false;\n            this.focusChanged();\n            this.emitStyle();\n            if (this.fireFocusEvents) {\n                this.ionBlur.emit(ev);\n            }\n        };\n        this.onFocus = (ev) => {\n            this.hasFocus = true;\n            this.focusChanged();\n            this.emitStyle();\n            if (this.fireFocusEvents) {\n                this.ionFocus.emit(ev);\n            }\n        };\n        this.onKeydown = (ev) => {\n            if (this.shouldClearOnEdit()) {\n                // Did the input value change after it was blurred and edited?\n                // Do not clear if user is hitting Enter to submit form\n                if (this.didBlurAfterEdit && this.hasValue() && ev.key !== 'Enter') {\n                    // Clear the input\n                    this.clearTextInput();\n                }\n                // Reset the flag\n                this.didBlurAfterEdit = false;\n            }\n        };\n        this.clearTextOnEnter = (ev) => {\n            if (ev.key === 'Enter') {\n                this.clearTextInput(ev);\n            }\n        };\n        this.clearTextInput = (ev) => {\n            if (this.clearInput && !this.readonly && !this.disabled && ev) {\n                ev.preventDefault();\n                ev.stopPropagation();\n                // Attempt to focus input again after pressing clear button\n                this.setFocus();\n            }\n            this.value = '';\n            /**\n             * This is needed for clearOnEdit\n             * Otherwise the value will not be cleared\n             * if user is inside the input\n             */\n            if (this.nativeInput) {\n                this.nativeInput.value = '';\n            }\n        };\n    }\n    debounceChanged() {\n        this.ionChange = debounceEvent(this.ionChange, this.debounce);\n    }\n    disabledChanged() {\n        this.emitStyle();\n    }\n    /**\n     * Update the native input element when the value changes\n     */\n    valueChanged() {\n        this.emitStyle();\n        this.ionChange.emit({ value: this.value == null ? this.value : this.value.toString() });\n    }\n    componentWillLoad() {\n        // If the ion-input has a tabindex attribute we get the value\n        // and pass it down to the native input, then remove it from the\n        // ion-input to avoid causing tabbing twice on the same element\n        if (this.el.hasAttribute('tabindex')) {\n            const tabindex = this.el.getAttribute('tabindex');\n            this.tabindex = tabindex !== null ? tabindex : undefined;\n            this.el.removeAttribute('tabindex');\n        }\n    }\n    connectedCallback() {\n        this.emitStyle();\n        this.debounceChanged();\n        {\n            document.dispatchEvent(new CustomEvent('ionInputDidLoad', {\n                detail: this.el\n            }));\n        }\n    }\n    disconnectedCallback() {\n        {\n            document.dispatchEvent(new CustomEvent('ionInputDidUnload', {\n                detail: this.el\n            }));\n        }\n    }\n    /**\n     * Sets focus on the native `input` in `ion-input`. Use this method instead of the global\n     * `input.focus()`.\n     */\n    async setFocus() {\n        if (this.nativeInput) {\n            this.nativeInput.focus();\n        }\n    }\n    /**\n     * Sets blur on the native `input` in `ion-input`. Use this method instead of the global\n     * `input.blur()`.\n     * @internal\n     */\n    async setBlur() {\n        if (this.nativeInput) {\n            this.nativeInput.blur();\n        }\n    }\n    /**\n     * Returns the native `<input>` element used under the hood.\n     */\n    getInputElement() {\n        return Promise.resolve(this.nativeInput);\n    }\n    shouldClearOnEdit() {\n        const { type, clearOnEdit } = this;\n        return (clearOnEdit === undefined)\n            ? type === 'password'\n            : clearOnEdit;\n    }\n    getValue() {\n        return typeof this.value === 'number' ? this.value.toString() :\n            (this.value || '').toString();\n    }\n    emitStyle() {\n        this.ionStyle.emit({\n            'interactive': true,\n            'input': true,\n            'has-placeholder': this.placeholder != null,\n            'has-value': this.hasValue(),\n            'has-focus': this.hasFocus,\n            'interactive-disabled': this.disabled,\n        });\n    }\n    focusChanged() {\n        // If clearOnEdit is enabled and the input blurred but has a value, set a flag\n        if (!this.hasFocus && this.shouldClearOnEdit() && this.hasValue()) {\n            this.didBlurAfterEdit = true;\n        }\n    }\n    hasValue() {\n        return this.getValue().length > 0;\n    }\n    render() {\n        const mode = getIonMode(this);\n        const value = this.getValue();\n        const labelId = this.inputId + '-lbl';\n        const label = findItemLabel(this.el);\n        if (label) {\n            label.id = labelId;\n        }\n        return (h(Host, { \"aria-disabled\": this.disabled ? 'true' : null, class: createColorClasses(this.color, {\n                [mode]: true,\n                'has-value': this.hasValue(),\n                'has-focus': this.hasFocus\n            }) }, h(\"input\", { class: \"native-input\", ref: input => this.nativeInput = input, \"aria-labelledby\": labelId, disabled: this.disabled, accept: this.accept, autoCapitalize: this.autocapitalize, autoComplete: this.autocomplete, autoCorrect: this.autocorrect, autoFocus: this.autofocus, enterKeyHint: this.enterkeyhint, inputMode: this.inputmode, min: this.min, max: this.max, minLength: this.minlength, maxLength: this.maxlength, multiple: this.multiple, name: this.name, pattern: this.pattern, placeholder: this.placeholder || '', readOnly: this.readonly, required: this.required, spellcheck: this.spellcheck, step: this.step, size: this.size, tabindex: this.tabindex, type: this.type, value: value, onInput: this.onInput, onBlur: this.onBlur, onFocus: this.onFocus, onKeyDown: this.onKeydown }), (this.clearInput && !this.readonly && !this.disabled) && h(\"button\", { \"aria-label\": \"reset\", type: \"button\", class: \"input-clear-icon\", onTouchStart: this.clearTextInput, onMouseDown: this.clearTextInput, onKeyDown: this.clearTextOnEnter })));\n    }\n    get el() { return getElement(this); }\n    static get watchers() { return {\n        \"debounce\": [\"debounceChanged\"],\n        \"disabled\": [\"disabledChanged\"],\n        \"value\": [\"valueChanged\"]\n    }; }\n};\nlet inputIds = 0;\nInput.style = {\n    ios: inputIosCss,\n    md: inputMdCss\n};\n\nexport { Input as ion_input };\n"]}